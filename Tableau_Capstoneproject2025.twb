<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Combined_Cleaned' inline='true' name='federated.1b23h6n1s7urv9188s8hf1c6z70u' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Combined_Cleaned' name='textscan.0vn7y48036khge1h5wj8r1fllpyt'>
            <connection class='textscan' directory='C:/Users/balla/OneDrive/Documents/CapStoneProject_2025/Data' filename='Combined_Cleaned.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0vn7y48036khge1h5wj8r1fllpyt' name='Combined_Cleaned.csv' table='[Combined_Cleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='Country_name' ordinal='0' />
            <column datatype='integer' name='Happiness_Rank' ordinal='1' />
            <column datatype='real' name='Happiness_score' ordinal='2' />
            <column datatype='real' name='Upperwhisker' ordinal='3' />
            <column datatype='real' name='Lowerwhisker' ordinal='4' />
            <column datatype='real' name='Economy_(GDP_per_Capita)_' ordinal='5' />
            <column datatype='real' name='Social_support' ordinal='6' />
            <column datatype='real' name='Healthy_life_expectancy' ordinal='7' />
            <column datatype='real' name='Freedom_to_make_life_choices' ordinal='8' />
            <column datatype='real' name='Generosity' ordinal='9' />
            <column datatype='real' name='Perceptions_of_corruption' ordinal='10' />
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='11' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Combined_Cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_name]</local-name>
            <parent-name>[Combined_Cleaned.csv]</parent-name>
            <remote-alias>Country_name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness_Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Happiness_Rank]</local-name>
            <parent-name>[Combined_Cleaned.csv]</parent-name>
            <remote-alias>Happiness_Rank</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness_score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Happiness_score]</local-name>
            <parent-name>[Combined_Cleaned.csv]</parent-name>
            <remote-alias>Happiness_score</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Upperwhisker</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Upperwhisker]</local-name>
            <parent-name>[Combined_Cleaned.csv]</parent-name>
            <remote-alias>Upperwhisker</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lowerwhisker</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lowerwhisker]</local-name>
            <parent-name>[Combined_Cleaned.csv]</parent-name>
            <remote-alias>Lowerwhisker</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Economy_(GDP_per_Capita)_</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Economy_(GDP_per_Capita)_]</local-name>
            <parent-name>[Combined_Cleaned.csv]</parent-name>
            <remote-alias>Economy_(GDP_per_Capita)_</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Social_support</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Social_support]</local-name>
            <parent-name>[Combined_Cleaned.csv]</parent-name>
            <remote-alias>Social_support</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Healthy_life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Healthy_life_expectancy]</local-name>
            <parent-name>[Combined_Cleaned.csv]</parent-name>
            <remote-alias>Healthy_life_expectancy</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Freedom_to_make_life_choices</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Freedom_to_make_life_choices]</local-name>
            <parent-name>[Combined_Cleaned.csv]</parent-name>
            <remote-alias>Freedom_to_make_life_choices</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generosity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Generosity]</local-name>
            <parent-name>[Combined_Cleaned.csv]</parent-name>
            <remote-alias>Generosity</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perceptions_of_corruption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Perceptions_of_corruption]</local-name>
            <parent-name>[Combined_Cleaned.csv]</parent-name>
            <remote-alias>Perceptions_of_corruption</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Combined_Cleaned.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>11</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Region' datatype='string' name='[Calculation_1024568971831394304]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Country_name] IN (&#13;&#10;    &apos;Afghanistan&apos;, &apos;Armenia&apos;, &apos;Azerbaijan&apos;, &apos;Bahrain&apos;, &apos;Bangladesh&apos;, &apos;Bhutan&apos;, &apos;Brunei&apos;, &apos;Cambodia&apos;, &#13;&#10;    &apos;China&apos;, &apos;Cyprus&apos;, &apos;Georgia&apos;, &apos;India&apos;, &apos;Indonesia&apos;, &apos;Iran&apos;, &apos;Iraq&apos;, &apos;Israel&apos;, &apos;Japan&apos;, &apos;Jordan&apos;, &#13;&#10;    &apos;Kazakhstan&apos;, &apos;Kuwait&apos;, &apos;Kyrgyzstan&apos;, &apos;Laos&apos;, &apos;Lebanon&apos;, &apos;Malaysia&apos;, &apos;Maldives&apos;, &apos;Mongolia&apos;, &#13;&#10;    &apos;Myanmar&apos;, &apos;Nepal&apos;, &apos;North Korea&apos;, &apos;Oman&apos;, &apos;Pakistan&apos;, &apos;Palestine&apos;, &apos;Philippines&apos;, &apos;Qatar&apos;, &apos;Saudi Arabia&apos;, &#13;&#10;    &apos;Singapore&apos;, &apos;South Korea&apos;, &apos;Sri Lanka&apos;, &apos;Syria&apos;, &apos;Tajikistan&apos;, &apos;Thailand&apos;, &apos;Timor-Leste&apos;, &apos;Turkey&apos;, &#13;&#10;    &apos;Turkmenistan&apos;, &apos;United Arab Emirates&apos;, &apos;Uzbekistan&apos;, &apos;Vietnam&apos;, &apos;Yemen&apos;&#13;&#10;) THEN &apos;Asia&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Albania&apos;, &apos;Andorra&apos;, &apos;Austria&apos;, &apos;Belarus&apos;, &apos;Belgium&apos;, &apos;Bosnia and Herzegovina&apos;, &apos;Bulgaria&apos;, &apos;Croatia&apos;, &#13;&#10;    &apos;Czech Republic&apos;, &apos;Denmark&apos;, &apos;Estonia&apos;, &apos;Finland&apos;, &apos;France&apos;, &apos;Germany&apos;, &apos;Greece&apos;, &apos;Hungary&apos;, &apos;Iceland&apos;, &#13;&#10;    &apos;Ireland&apos;, &apos;Italy&apos;, &apos;Kosovo&apos;, &apos;Latvia&apos;, &apos;Liechtenstein&apos;, &apos;Lithuania&apos;, &apos;Luxembourg&apos;, &apos;Malta&apos;, &apos;Moldova&apos;, &#13;&#10;    &apos;Monaco&apos;, &apos;Montenegro&apos;, &apos;Netherlands&apos;, &apos;North Macedonia&apos;, &apos;Norway&apos;, &apos;Poland&apos;, &apos;Portugal&apos;, &apos;Romania&apos;, &#13;&#10;    &apos;Russia&apos;, &apos;San Marino&apos;, &apos;Serbia&apos;, &apos;Slovakia&apos;, &apos;Slovenia&apos;, &apos;Spain&apos;, &apos;Sweden&apos;, &apos;Switzerland&apos;, &apos;Ukraine&apos;, &apos;United Kingdom&apos;, &apos;Vatican City&apos;&#13;&#10;) THEN &apos;Europe&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Antigua and Barbuda&apos;, &apos;Argentina&apos;, &apos;Bahamas&apos;, &apos;Barbados&apos;, &apos;Belize&apos;, &apos;Bolivia&apos;, &apos;Brazil&apos;, &apos;Canada&apos;, &apos;Chile&apos;, &#13;&#10;    &apos;Colombia&apos;, &apos;Costa Rica&apos;, &apos;Cuba&apos;, &apos;Dominica&apos;, &apos;Dominican Republic&apos;, &apos;Ecuador&apos;, &apos;El Salvador&apos;, &apos;Grenada&apos;, &apos;Guatemala&apos;, &#13;&#10;    &apos;Guyana&apos;, &apos;Haiti&apos;, &apos;Honduras&apos;, &apos;Jamaica&apos;, &apos;Mexico&apos;, &apos;Nicaragua&apos;, &apos;Panama&apos;, &apos;Paraguay&apos;, &apos;Peru&apos;, &apos;Saint Kitts and Nevis&apos;, &#13;&#10;    &apos;Saint Lucia&apos;, &apos;Saint Vincent and the Grenadines&apos;, &apos;Suriname&apos;, &apos;Trinidad and Tobago&apos;, &apos;United States&apos;, &apos;Uruguay&apos;, &apos;Venezuela&apos;&#13;&#10;) THEN &apos;Americas&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Australia&apos;, &apos;New Zealand&apos;, &apos;Fiji&apos;, &apos;Kiribati&apos;, &apos;Marshall Islands&apos;, &apos;Micronesia&apos;, &apos;Nauru&apos;, &apos;Palau&apos;, &#13;&#10;    &apos;Papua New Guinea&apos;, &apos;Samoa&apos;, &apos;Solomon Islands&apos;, &apos;Tonga&apos;, &apos;Tuvalu&apos;, &apos;Vanuatu&apos;&#13;&#10;) THEN &apos;Pacific&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Bahrain&apos;, &apos;Comoros&apos;, &apos;Madagascar&apos;, &apos;Maldives&apos;, &apos;Mauritius&apos;, &apos;Seychelles&apos;, &apos;Taiwan&apos;, &apos;Hong Kong&apos;&#13;&#10;) THEN &apos;Island&apos;&#13;&#10;&#13;&#10;ELSE &apos;Africa&apos;&#13;&#10;END' />
      </column>
      <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Economy (GDP per Capita)' datatype='real' name='[Economy_(GDP_per_Capita)_]' role='measure' type='quantitative' />
      <column caption='Freedom to make life choices' datatype='real' name='[Freedom_to_make_life_choices]' role='measure' type='quantitative' />
      <column caption='Happiness Rank' datatype='integer' name='[Happiness_Rank]' role='measure' type='quantitative' />
      <column caption='Happiness score' datatype='real' name='[Happiness_score]' role='measure' type='quantitative' />
      <column caption='Healthy life expectancy' datatype='real' name='[Healthy_life_expectancy]' role='measure' type='quantitative' />
      <column caption='Perceptions of corruption' datatype='real' name='[Perceptions_of_corruption]' role='measure' type='quantitative' />
      <column caption='Social support' datatype='real' name='[Social_support]' role='measure' type='quantitative' />
      <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Combined_Cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]' role='measure' type='quantitative' />
      <column-instance column='[Country_name]' derivation='Attribute' name='[attr:Country_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Economy_(GDP_per_Capita)_]' derivation='Avg' name='[avg:Economy_(GDP_per_Capita)_:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness_score]' derivation='Avg' name='[avg:Happiness_score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Economy_(GDP_per_Capita)_]' derivation='CountD' name='[ctd:Economy_(GDP_per_Capita)_:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness_score]' derivation='CountD' name='[ctd:Happiness_score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country_name]' derivation='Max' name='[max:Country_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country_name]' derivation='Min' name='[min:Country_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1024568971831394304]' derivation='None' name='[none:Calculation_1024568971831394304:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Happiness_score]' derivation='None' name='[none:Happiness_score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/balla/AppData/Local/Temp/TableauTemp/#TableauTemp_0067cxo0ir2hjd14fgsom1y9gfil.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='03/14/2025 11:01:36 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country_name</remote-alias>
              <ordinal>0</ordinal>
              <family>Combined_Cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>180</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Happiness_Rank</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Happiness_Rank]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Happiness_Rank</remote-alias>
              <ordinal>1</ordinal>
              <family>Combined_Cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>153</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Happiness_score</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Happiness_score]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Happiness_score</remote-alias>
              <ordinal>2</ordinal>
              <family>Combined_Cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>645</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Upperwhisker</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Upperwhisker]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Upperwhisker</remote-alias>
              <ordinal>3</ordinal>
              <family>Combined_Cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>642</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Lowerwhisker</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Lowerwhisker]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Lowerwhisker</remote-alias>
              <ordinal>4</ordinal>
              <family>Combined_Cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>635</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Economy_(GDP_per_Capita)_</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Economy_(GDP_per_Capita)_]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Economy_(GDP_per_Capita)_</remote-alias>
              <ordinal>5</ordinal>
              <family>Combined_Cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>552</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Social_support</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Social_support]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Social_support</remote-alias>
              <ordinal>6</ordinal>
              <family>Combined_Cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>505</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Healthy_life_expectancy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Healthy_life_expectancy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Healthy_life_expectancy</remote-alias>
              <ordinal>7</ordinal>
              <family>Combined_Cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>427</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Freedom_to_make_life_choices</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Freedom_to_make_life_choices]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Freedom_to_make_life_choices</remote-alias>
              <ordinal>8</ordinal>
              <family>Combined_Cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>373</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Generosity</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Generosity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Generosity</remote-alias>
              <ordinal>9</ordinal>
              <family>Combined_Cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>279</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Perceptions_of_corruption</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Perceptions_of_corruption]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Perceptions_of_corruption</remote-alias>
              <ordinal>10</ordinal>
              <family>Combined_Cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>295</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>11</ordinal>
              <family>Combined_Cleaned.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='1000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[max:Country_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan*&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chad*&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Cyprus*&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belarus*&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;State of Palestine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eswatini, Kingdom of*&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lesotho*&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palestinian Territories*&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hong Kong S.A.R. of China&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Botswana*&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala*&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niger*&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Luxembourg*&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Taiwan Province of China&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania*&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkmenistan*&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Comoros*&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Libya*&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yemen*&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar*&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda*&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gambia*&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberia*&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kuwait*&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Cyprus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[min:Country_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan*&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chad*&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Cyprus*&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belarus*&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;State of Palestine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eswatini, Kingdom of*&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lesotho*&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palestinian Territories*&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hong Kong S.A.R. of China&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Botswana*&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala*&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niger*&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Luxembourg*&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Taiwan Province of China&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania*&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkmenistan*&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Comoros*&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Libya*&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yemen*&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar*&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda*&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gambia*&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberia*&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kuwait*&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Cyprus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Country_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan*&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chad*&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Cyprus*&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belarus*&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;State of Palestine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eswatini, Kingdom of*&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lesotho*&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palestinian Territories*&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hong Kong S.A.R. of China&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Botswana*&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala*&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niger*&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Luxembourg*&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Taiwan Province of China&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania*&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkmenistan*&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Comoros*&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Libya*&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yemen*&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar*&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda*&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gambia*&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberia*&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kuwait*&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Cyprus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Economy_(GDP_per_Capita)_:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1b23h6n1s7urv9188s8hf1c6z70u].[ctd:Economy_(GDP_per_Capita)_:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1b23h6n1s7urv9188s8hf1c6z70u].[ctd:Happiness_score:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Happiness_score:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[tyr:Year:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>#2020-01-01 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2021-01-01 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2024-01-01 00:00:00#</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1024568971831394304:nk]' palette='sf_color_safe' type='palette'>
            <map to='#006699'>
              <bucket>&quot;Island&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#529ee0'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#d9a6c2'>
              <bucket>&quot;Americas&quot;</bucket>
            </map>
            <map to='#f0e442'>
              <bucket>&quot;Pacific&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country_name:nk]' palette='green_10_0' type='palette'>
            <map to='#24693d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#398949'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan*&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chad*&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#519c51'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Cyprus*&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#59a253'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#67af5c'>
              <bucket>&quot;Luxembourg*&quot;</bucket>
            </map>
            <map to='#6eb663'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belarus*&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;State of Palestine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#7dc370'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#85ca77'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eswatini, Kingdom of*&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lesotho*&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palestinian Territories*&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hong Kong S.A.R. of China&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#98d687'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Botswana*&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala*&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niger*&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Taiwan Province of China&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania*&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkmenistan*&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Comoros*&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Libya*&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yemen*&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar*&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda*&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gambia*&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberia*&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kuwait*&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Cyprus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Country_name' />
        <field-sort-custom-order field='Calculation_1024568971831394304' />
        <field-sort-custom-order field='Happiness_Rank' />
        <field-sort-custom-order field='Happiness_score' />
        <field-sort-custom-order field='Upperwhisker' />
        <field-sort-custom-order field='Lowerwhisker' />
        <field-sort-custom-order field='Economy_(GDP_per_Capita)_' />
        <field-sort-custom-order field='Social_support' />
        <field-sort-custom-order field='Healthy_life_expectancy' />
        <field-sort-custom-order field='Freedom_to_make_life_choices' />
        <field-sort-custom-order field='Generosity' />
        <field-sort-custom-order field='Perceptions_of_corruption' />
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <object-graph>
        <objects>
          <object caption='Combined_Cleaned.csv' id='Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16'>
            <properties context=''>
              <relation connection='textscan.0vn7y48036khge1h5wj8r1fllpyt' name='Combined_Cleaned.csv' table='[Combined_Cleaned#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='string' name='Country_name' ordinal='0' />
                  <column datatype='integer' name='Happiness_Rank' ordinal='1' />
                  <column datatype='real' name='Happiness_score' ordinal='2' />
                  <column datatype='real' name='Upperwhisker' ordinal='3' />
                  <column datatype='real' name='Lowerwhisker' ordinal='4' />
                  <column datatype='real' name='Economy_(GDP_per_Capita)_' ordinal='5' />
                  <column datatype='real' name='Social_support' ordinal='6' />
                  <column datatype='real' name='Healthy_life_expectancy' ordinal='7' />
                  <column datatype='real' name='Freedom_to_make_life_choices' ordinal='8' />
                  <column datatype='real' name='Generosity' ordinal='9' />
                  <column datatype='real' name='Perceptions_of_corruption' ordinal='10' />
                  <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='11' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_F46C87B245014271BECACD5FC34A0FD7]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet=' Social Support and Happiness Relationship' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Region' />
        <param name='target' value=' Social Support and Happiness Relationship' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2_0541DD4D7DB64D21B9151BB936194B31]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Region' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name=' Social Support and Happiness Relationship'>
      <table>
        <view>
          <datasources>
            <datasource caption='Combined_Cleaned' name='federated.1b23h6n1s7urv9188s8hf1c6z70u' />
          </datasources>
          <datasource-dependencies datasource='federated.1b23h6n1s7urv9188s8hf1c6z70u'>
            <column caption='Region' datatype='string' name='[Calculation_1024568971831394304]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Country_name] IN (&#13;&#10;    &apos;Afghanistan&apos;, &apos;Armenia&apos;, &apos;Azerbaijan&apos;, &apos;Bahrain&apos;, &apos;Bangladesh&apos;, &apos;Bhutan&apos;, &apos;Brunei&apos;, &apos;Cambodia&apos;, &#13;&#10;    &apos;China&apos;, &apos;Cyprus&apos;, &apos;Georgia&apos;, &apos;India&apos;, &apos;Indonesia&apos;, &apos;Iran&apos;, &apos;Iraq&apos;, &apos;Israel&apos;, &apos;Japan&apos;, &apos;Jordan&apos;, &#13;&#10;    &apos;Kazakhstan&apos;, &apos;Kuwait&apos;, &apos;Kyrgyzstan&apos;, &apos;Laos&apos;, &apos;Lebanon&apos;, &apos;Malaysia&apos;, &apos;Maldives&apos;, &apos;Mongolia&apos;, &#13;&#10;    &apos;Myanmar&apos;, &apos;Nepal&apos;, &apos;North Korea&apos;, &apos;Oman&apos;, &apos;Pakistan&apos;, &apos;Palestine&apos;, &apos;Philippines&apos;, &apos;Qatar&apos;, &apos;Saudi Arabia&apos;, &#13;&#10;    &apos;Singapore&apos;, &apos;South Korea&apos;, &apos;Sri Lanka&apos;, &apos;Syria&apos;, &apos;Tajikistan&apos;, &apos;Thailand&apos;, &apos;Timor-Leste&apos;, &apos;Turkey&apos;, &#13;&#10;    &apos;Turkmenistan&apos;, &apos;United Arab Emirates&apos;, &apos;Uzbekistan&apos;, &apos;Vietnam&apos;, &apos;Yemen&apos;&#13;&#10;) THEN &apos;Asia&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Albania&apos;, &apos;Andorra&apos;, &apos;Austria&apos;, &apos;Belarus&apos;, &apos;Belgium&apos;, &apos;Bosnia and Herzegovina&apos;, &apos;Bulgaria&apos;, &apos;Croatia&apos;, &#13;&#10;    &apos;Czech Republic&apos;, &apos;Denmark&apos;, &apos;Estonia&apos;, &apos;Finland&apos;, &apos;France&apos;, &apos;Germany&apos;, &apos;Greece&apos;, &apos;Hungary&apos;, &apos;Iceland&apos;, &#13;&#10;    &apos;Ireland&apos;, &apos;Italy&apos;, &apos;Kosovo&apos;, &apos;Latvia&apos;, &apos;Liechtenstein&apos;, &apos;Lithuania&apos;, &apos;Luxembourg&apos;, &apos;Malta&apos;, &apos;Moldova&apos;, &#13;&#10;    &apos;Monaco&apos;, &apos;Montenegro&apos;, &apos;Netherlands&apos;, &apos;North Macedonia&apos;, &apos;Norway&apos;, &apos;Poland&apos;, &apos;Portugal&apos;, &apos;Romania&apos;, &#13;&#10;    &apos;Russia&apos;, &apos;San Marino&apos;, &apos;Serbia&apos;, &apos;Slovakia&apos;, &apos;Slovenia&apos;, &apos;Spain&apos;, &apos;Sweden&apos;, &apos;Switzerland&apos;, &apos;Ukraine&apos;, &apos;United Kingdom&apos;, &apos;Vatican City&apos;&#13;&#10;) THEN &apos;Europe&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Antigua and Barbuda&apos;, &apos;Argentina&apos;, &apos;Bahamas&apos;, &apos;Barbados&apos;, &apos;Belize&apos;, &apos;Bolivia&apos;, &apos;Brazil&apos;, &apos;Canada&apos;, &apos;Chile&apos;, &#13;&#10;    &apos;Colombia&apos;, &apos;Costa Rica&apos;, &apos;Cuba&apos;, &apos;Dominica&apos;, &apos;Dominican Republic&apos;, &apos;Ecuador&apos;, &apos;El Salvador&apos;, &apos;Grenada&apos;, &apos;Guatemala&apos;, &#13;&#10;    &apos;Guyana&apos;, &apos;Haiti&apos;, &apos;Honduras&apos;, &apos;Jamaica&apos;, &apos;Mexico&apos;, &apos;Nicaragua&apos;, &apos;Panama&apos;, &apos;Paraguay&apos;, &apos;Peru&apos;, &apos;Saint Kitts and Nevis&apos;, &#13;&#10;    &apos;Saint Lucia&apos;, &apos;Saint Vincent and the Grenadines&apos;, &apos;Suriname&apos;, &apos;Trinidad and Tobago&apos;, &apos;United States&apos;, &apos;Uruguay&apos;, &apos;Venezuela&apos;&#13;&#10;) THEN &apos;Americas&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Australia&apos;, &apos;New Zealand&apos;, &apos;Fiji&apos;, &apos;Kiribati&apos;, &apos;Marshall Islands&apos;, &apos;Micronesia&apos;, &apos;Nauru&apos;, &apos;Palau&apos;, &#13;&#10;    &apos;Papua New Guinea&apos;, &apos;Samoa&apos;, &apos;Solomon Islands&apos;, &apos;Tonga&apos;, &apos;Tuvalu&apos;, &apos;Vanuatu&apos;&#13;&#10;) THEN &apos;Pacific&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Bahrain&apos;, &apos;Comoros&apos;, &apos;Madagascar&apos;, &apos;Maldives&apos;, &apos;Mauritius&apos;, &apos;Seychelles&apos;, &apos;Taiwan&apos;, &apos;Hong Kong&apos;&#13;&#10;) THEN &apos;Island&apos;&#13;&#10;&#13;&#10;ELSE &apos;Africa&apos;&#13;&#10;END' />
            </column>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Economy (GDP per Capita)' datatype='real' name='[Economy_(GDP_per_Capita)_]' role='measure' type='quantitative' />
            <column caption='Happiness score' datatype='real' name='[Happiness_score]' role='measure' type='quantitative' />
            <column caption='Social support' datatype='real' name='[Social_support]' role='measure' type='quantitative' />
            <column-instance column='[Happiness_score]' derivation='Avg' name='[avg:Happiness_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Social_support]' derivation='Avg' name='[avg:Social_support:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1024568971831394304]' derivation='None' name='[none:Calculation_1024568971831394304:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Economy_(GDP_per_Capita)_]' derivation='Sum' name='[sum:Economy_(GDP_per_Capita)_:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]' />
              <size column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[sum:Economy_(GDP_per_Capita)_:qk]' />
              <lod column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]</rows>
        <cols>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Social_support:qk]</cols>
      </table>
      <simple-id uuid='{E6D3CB87-2A7E-4EC9-B348-9251F7ACF4AF}' />
    </worksheet>
    <worksheet name='Asia &amp; Europe Difference'>
      <table>
        <view>
          <datasources>
            <datasource caption='Combined_Cleaned' name='federated.1b23h6n1s7urv9188s8hf1c6z70u' />
          </datasources>
          <datasource-dependencies datasource='federated.1b23h6n1s7urv9188s8hf1c6z70u'>
            <column caption='Region' datatype='string' name='[Calculation_1024568971831394304]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Country_name] IN (&#13;&#10;    &apos;Afghanistan&apos;, &apos;Armenia&apos;, &apos;Azerbaijan&apos;, &apos;Bahrain&apos;, &apos;Bangladesh&apos;, &apos;Bhutan&apos;, &apos;Brunei&apos;, &apos;Cambodia&apos;, &#13;&#10;    &apos;China&apos;, &apos;Cyprus&apos;, &apos;Georgia&apos;, &apos;India&apos;, &apos;Indonesia&apos;, &apos;Iran&apos;, &apos;Iraq&apos;, &apos;Israel&apos;, &apos;Japan&apos;, &apos;Jordan&apos;, &#13;&#10;    &apos;Kazakhstan&apos;, &apos;Kuwait&apos;, &apos;Kyrgyzstan&apos;, &apos;Laos&apos;, &apos;Lebanon&apos;, &apos;Malaysia&apos;, &apos;Maldives&apos;, &apos;Mongolia&apos;, &#13;&#10;    &apos;Myanmar&apos;, &apos;Nepal&apos;, &apos;North Korea&apos;, &apos;Oman&apos;, &apos;Pakistan&apos;, &apos;Palestine&apos;, &apos;Philippines&apos;, &apos;Qatar&apos;, &apos;Saudi Arabia&apos;, &#13;&#10;    &apos;Singapore&apos;, &apos;South Korea&apos;, &apos;Sri Lanka&apos;, &apos;Syria&apos;, &apos;Tajikistan&apos;, &apos;Thailand&apos;, &apos;Timor-Leste&apos;, &apos;Turkey&apos;, &#13;&#10;    &apos;Turkmenistan&apos;, &apos;United Arab Emirates&apos;, &apos;Uzbekistan&apos;, &apos;Vietnam&apos;, &apos;Yemen&apos;&#13;&#10;) THEN &apos;Asia&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Albania&apos;, &apos;Andorra&apos;, &apos;Austria&apos;, &apos;Belarus&apos;, &apos;Belgium&apos;, &apos;Bosnia and Herzegovina&apos;, &apos;Bulgaria&apos;, &apos;Croatia&apos;, &#13;&#10;    &apos;Czech Republic&apos;, &apos;Denmark&apos;, &apos;Estonia&apos;, &apos;Finland&apos;, &apos;France&apos;, &apos;Germany&apos;, &apos;Greece&apos;, &apos;Hungary&apos;, &apos;Iceland&apos;, &#13;&#10;    &apos;Ireland&apos;, &apos;Italy&apos;, &apos;Kosovo&apos;, &apos;Latvia&apos;, &apos;Liechtenstein&apos;, &apos;Lithuania&apos;, &apos;Luxembourg&apos;, &apos;Malta&apos;, &apos;Moldova&apos;, &#13;&#10;    &apos;Monaco&apos;, &apos;Montenegro&apos;, &apos;Netherlands&apos;, &apos;North Macedonia&apos;, &apos;Norway&apos;, &apos;Poland&apos;, &apos;Portugal&apos;, &apos;Romania&apos;, &#13;&#10;    &apos;Russia&apos;, &apos;San Marino&apos;, &apos;Serbia&apos;, &apos;Slovakia&apos;, &apos;Slovenia&apos;, &apos;Spain&apos;, &apos;Sweden&apos;, &apos;Switzerland&apos;, &apos;Ukraine&apos;, &apos;United Kingdom&apos;, &apos;Vatican City&apos;&#13;&#10;) THEN &apos;Europe&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Antigua and Barbuda&apos;, &apos;Argentina&apos;, &apos;Bahamas&apos;, &apos;Barbados&apos;, &apos;Belize&apos;, &apos;Bolivia&apos;, &apos;Brazil&apos;, &apos;Canada&apos;, &apos;Chile&apos;, &#13;&#10;    &apos;Colombia&apos;, &apos;Costa Rica&apos;, &apos;Cuba&apos;, &apos;Dominica&apos;, &apos;Dominican Republic&apos;, &apos;Ecuador&apos;, &apos;El Salvador&apos;, &apos;Grenada&apos;, &apos;Guatemala&apos;, &#13;&#10;    &apos;Guyana&apos;, &apos;Haiti&apos;, &apos;Honduras&apos;, &apos;Jamaica&apos;, &apos;Mexico&apos;, &apos;Nicaragua&apos;, &apos;Panama&apos;, &apos;Paraguay&apos;, &apos;Peru&apos;, &apos;Saint Kitts and Nevis&apos;, &#13;&#10;    &apos;Saint Lucia&apos;, &apos;Saint Vincent and the Grenadines&apos;, &apos;Suriname&apos;, &apos;Trinidad and Tobago&apos;, &apos;United States&apos;, &apos;Uruguay&apos;, &apos;Venezuela&apos;&#13;&#10;) THEN &apos;Americas&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Australia&apos;, &apos;New Zealand&apos;, &apos;Fiji&apos;, &apos;Kiribati&apos;, &apos;Marshall Islands&apos;, &apos;Micronesia&apos;, &apos;Nauru&apos;, &apos;Palau&apos;, &#13;&#10;    &apos;Papua New Guinea&apos;, &apos;Samoa&apos;, &apos;Solomon Islands&apos;, &apos;Tonga&apos;, &apos;Tuvalu&apos;, &apos;Vanuatu&apos;&#13;&#10;) THEN &apos;Pacific&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Bahrain&apos;, &apos;Comoros&apos;, &apos;Madagascar&apos;, &apos;Maldives&apos;, &apos;Mauritius&apos;, &apos;Seychelles&apos;, &apos;Taiwan&apos;, &apos;Hong Kong&apos;&#13;&#10;) THEN &apos;Island&apos;&#13;&#10;&#13;&#10;ELSE &apos;Africa&apos;&#13;&#10;END' />
            </column>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Economy (GDP per Capita)' datatype='real' name='[Economy_(GDP_per_Capita)_]' role='measure' type='quantitative' />
            <column caption='Happiness score' datatype='real' name='[Happiness_score]' role='measure' type='quantitative' />
            <column-instance column='[Happiness_score]' derivation='Avg' name='[avg:Happiness_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1024568971831394304]' derivation='None' name='[none:Calculation_1024568971831394304:nk]' pivot='key' type='nominal' />
            <column-instance column='[Economy_(GDP_per_Capita)_]' derivation='Sum' name='[sum:Economy_(GDP_per_Capita)_:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1024568971831394304:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:Calculation_1024568971831394304:nk]' member='&quot;Europe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refboxplot'>
            <format attr='fill-color' id='refline0' value='#f0f0f0d9' />
            <format attr='palette' id='refline0' value='bp_green' />
            <format attr='opacity' id='refline0' value='170' />
            <format attr='boxplot-style' id='refline0' value='modern' />
            <format attr='whisker-end' id='refline0' value='large' />
            <format attr='whisker-stroke-color' id='refline0' value='#555555' />
            <format attr='whisker-stroke-size' id='refline0' value='2' />
            <format attr='stroke-size' id='refline0' value='2' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]' />
              <tooltip column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[sum:Economy_(GDP_per_Capita)_:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{9FC56778-EF05-4EAD-B96F-22E2BCD9DC4F}' />
    </worksheet>
    <worksheet name='Comparison of Happiness Scores Between 2020 and 2024'>
      <table>
        <view>
          <datasources>
            <datasource caption='Combined_Cleaned' name='federated.1b23h6n1s7urv9188s8hf1c6z70u' />
          </datasources>
          <datasource-dependencies datasource='federated.1b23h6n1s7urv9188s8hf1c6z70u'>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Happiness score' datatype='real' name='[Happiness_score]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Happiness_score]' derivation='Avg' name='[avg:Happiness_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness_score]' derivation='None' name='[none:Happiness_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Armenia&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Australia&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Happiness_score:qk]' included-values='all' />
          <filter class='categorical' column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[yr:Year:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Year:ok]' member='2020' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2024' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[yr:Year:ok]</column>
            <column>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Happiness_score:qk]</column>
            <column>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]</rows>
        <cols>([federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk] / [federated.1b23h6n1s7urv9188s8hf1c6z70u].[tyr:Year:ok])</cols>
      </table>
      <simple-id uuid='{74080D4B-ABDB-4B79-888C-C4034B4CDDC7}' />
    </worksheet>
    <worksheet name='Happiest Last 10 Countries '>
      <table>
        <view>
          <datasources>
            <datasource caption='Combined_Cleaned' name='federated.1b23h6n1s7urv9188s8hf1c6z70u' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1b23h6n1s7urv9188s8hf1c6z70u'>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Happiness score' datatype='real' name='[Happiness_score]' role='measure' type='quantitative' />
            <column-instance column='[Happiness_score]' derivation='Avg' name='[avg:Happiness_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Happiness_score])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[Longitude (generated)]' field-type='quantitative' max='25336742.263567716' min='-22839376.859228246' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[Latitude (generated)]' field-type='quantitative' max='16091522.565067235' min='-9738076.829782676' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' />
              <color column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]' />
              <geometry column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[Latitude (generated)]</rows>
        <cols>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9B5456CD-B84A-4E8E-8F63-3568F1A02555}' />
    </worksheet>
    <worksheet name='Happiest Top 10 Countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='Combined_Cleaned' name='federated.1b23h6n1s7urv9188s8hf1c6z70u' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1b23h6n1s7urv9188s8hf1c6z70u'>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Happiness score' datatype='real' name='[Happiness_score]' role='measure' type='quantitative' />
            <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness_score]' derivation='Sum' name='[sum:Happiness_score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Happiness_score])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[Longitude (generated)]' field-type='quantitative' max='38571633.150156133' min='-23746070.605882563' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[Latitude (generated)]' field-type='quantitative' max='19164232.655825906' min='-14247369.451903107' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' />
              <color column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[sum:Happiness_score:qk]' />
              <geometry column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[Latitude (generated)]</rows>
        <cols>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3D19EBC5-205A-4C46-937E-A5A1D37D1753}' />
    </worksheet>
    <worksheet name='Per Capita Income and Happiness Relationship'>
      <table>
        <view>
          <datasources>
            <datasource caption='Combined_Cleaned' name='federated.1b23h6n1s7urv9188s8hf1c6z70u' />
          </datasources>
          <datasource-dependencies datasource='federated.1b23h6n1s7urv9188s8hf1c6z70u'>
            <column caption='Region' datatype='string' name='[Calculation_1024568971831394304]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Country_name] IN (&#13;&#10;    &apos;Afghanistan&apos;, &apos;Armenia&apos;, &apos;Azerbaijan&apos;, &apos;Bahrain&apos;, &apos;Bangladesh&apos;, &apos;Bhutan&apos;, &apos;Brunei&apos;, &apos;Cambodia&apos;, &#13;&#10;    &apos;China&apos;, &apos;Cyprus&apos;, &apos;Georgia&apos;, &apos;India&apos;, &apos;Indonesia&apos;, &apos;Iran&apos;, &apos;Iraq&apos;, &apos;Israel&apos;, &apos;Japan&apos;, &apos;Jordan&apos;, &#13;&#10;    &apos;Kazakhstan&apos;, &apos;Kuwait&apos;, &apos;Kyrgyzstan&apos;, &apos;Laos&apos;, &apos;Lebanon&apos;, &apos;Malaysia&apos;, &apos;Maldives&apos;, &apos;Mongolia&apos;, &#13;&#10;    &apos;Myanmar&apos;, &apos;Nepal&apos;, &apos;North Korea&apos;, &apos;Oman&apos;, &apos;Pakistan&apos;, &apos;Palestine&apos;, &apos;Philippines&apos;, &apos;Qatar&apos;, &apos;Saudi Arabia&apos;, &#13;&#10;    &apos;Singapore&apos;, &apos;South Korea&apos;, &apos;Sri Lanka&apos;, &apos;Syria&apos;, &apos;Tajikistan&apos;, &apos;Thailand&apos;, &apos;Timor-Leste&apos;, &apos;Turkey&apos;, &#13;&#10;    &apos;Turkmenistan&apos;, &apos;United Arab Emirates&apos;, &apos;Uzbekistan&apos;, &apos;Vietnam&apos;, &apos;Yemen&apos;&#13;&#10;) THEN &apos;Asia&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Albania&apos;, &apos;Andorra&apos;, &apos;Austria&apos;, &apos;Belarus&apos;, &apos;Belgium&apos;, &apos;Bosnia and Herzegovina&apos;, &apos;Bulgaria&apos;, &apos;Croatia&apos;, &#13;&#10;    &apos;Czech Republic&apos;, &apos;Denmark&apos;, &apos;Estonia&apos;, &apos;Finland&apos;, &apos;France&apos;, &apos;Germany&apos;, &apos;Greece&apos;, &apos;Hungary&apos;, &apos;Iceland&apos;, &#13;&#10;    &apos;Ireland&apos;, &apos;Italy&apos;, &apos;Kosovo&apos;, &apos;Latvia&apos;, &apos;Liechtenstein&apos;, &apos;Lithuania&apos;, &apos;Luxembourg&apos;, &apos;Malta&apos;, &apos;Moldova&apos;, &#13;&#10;    &apos;Monaco&apos;, &apos;Montenegro&apos;, &apos;Netherlands&apos;, &apos;North Macedonia&apos;, &apos;Norway&apos;, &apos;Poland&apos;, &apos;Portugal&apos;, &apos;Romania&apos;, &#13;&#10;    &apos;Russia&apos;, &apos;San Marino&apos;, &apos;Serbia&apos;, &apos;Slovakia&apos;, &apos;Slovenia&apos;, &apos;Spain&apos;, &apos;Sweden&apos;, &apos;Switzerland&apos;, &apos;Ukraine&apos;, &apos;United Kingdom&apos;, &apos;Vatican City&apos;&#13;&#10;) THEN &apos;Europe&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Antigua and Barbuda&apos;, &apos;Argentina&apos;, &apos;Bahamas&apos;, &apos;Barbados&apos;, &apos;Belize&apos;, &apos;Bolivia&apos;, &apos;Brazil&apos;, &apos;Canada&apos;, &apos;Chile&apos;, &#13;&#10;    &apos;Colombia&apos;, &apos;Costa Rica&apos;, &apos;Cuba&apos;, &apos;Dominica&apos;, &apos;Dominican Republic&apos;, &apos;Ecuador&apos;, &apos;El Salvador&apos;, &apos;Grenada&apos;, &apos;Guatemala&apos;, &#13;&#10;    &apos;Guyana&apos;, &apos;Haiti&apos;, &apos;Honduras&apos;, &apos;Jamaica&apos;, &apos;Mexico&apos;, &apos;Nicaragua&apos;, &apos;Panama&apos;, &apos;Paraguay&apos;, &apos;Peru&apos;, &apos;Saint Kitts and Nevis&apos;, &#13;&#10;    &apos;Saint Lucia&apos;, &apos;Saint Vincent and the Grenadines&apos;, &apos;Suriname&apos;, &apos;Trinidad and Tobago&apos;, &apos;United States&apos;, &apos;Uruguay&apos;, &apos;Venezuela&apos;&#13;&#10;) THEN &apos;Americas&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Australia&apos;, &apos;New Zealand&apos;, &apos;Fiji&apos;, &apos;Kiribati&apos;, &apos;Marshall Islands&apos;, &apos;Micronesia&apos;, &apos;Nauru&apos;, &apos;Palau&apos;, &#13;&#10;    &apos;Papua New Guinea&apos;, &apos;Samoa&apos;, &apos;Solomon Islands&apos;, &apos;Tonga&apos;, &apos;Tuvalu&apos;, &apos;Vanuatu&apos;&#13;&#10;) THEN &apos;Pacific&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Bahrain&apos;, &apos;Comoros&apos;, &apos;Madagascar&apos;, &apos;Maldives&apos;, &apos;Mauritius&apos;, &apos;Seychelles&apos;, &apos;Taiwan&apos;, &apos;Hong Kong&apos;&#13;&#10;) THEN &apos;Island&apos;&#13;&#10;&#13;&#10;ELSE &apos;Africa&apos;&#13;&#10;END' />
            </column>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Economy (GDP per Capita)' datatype='real' name='[Economy_(GDP_per_Capita)_]' role='measure' type='quantitative' />
            <column caption='Happiness score' datatype='real' name='[Happiness_score]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Economy_(GDP_per_Capita)_]' derivation='Avg' name='[avg:Economy_(GDP_per_Capita)_:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Happiness_score]' derivation='Avg' name='[avg:Happiness_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1024568971831394304]' derivation='None' name='[none:Calculation_1024568971831394304:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]'>
            <groupfilter function='member' level='[none:Calculation_1024568971831394304:nk]' member='&quot;Asia&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]'>
            <groupfilter function='level-members' level='[none:Country_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[yr:Year:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Year:ok]' member='2020' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2021' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2024' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[yr:Year:ok]</column>
            <column>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]</column>
            <column>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' />
              <lod column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' />
              <lod column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Year:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' />
              <lod column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Economy_(GDP_per_Capita)_:qk]</rows>
        <cols>([federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk] + [federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Year:qk])</cols>
      </table>
      <simple-id uuid='{A026C2A8-E0DE-40F4-BE2E-705CB2BDE522}' />
    </worksheet>
    <worksheet name='Regions Happines Score'>
      <table>
        <view>
          <datasources>
            <datasource caption='Combined_Cleaned' name='federated.1b23h6n1s7urv9188s8hf1c6z70u' />
          </datasources>
          <datasource-dependencies datasource='federated.1b23h6n1s7urv9188s8hf1c6z70u'>
            <column caption='Region' datatype='string' name='[Calculation_1024568971831394304]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Country_name] IN (&#13;&#10;    &apos;Afghanistan&apos;, &apos;Armenia&apos;, &apos;Azerbaijan&apos;, &apos;Bahrain&apos;, &apos;Bangladesh&apos;, &apos;Bhutan&apos;, &apos;Brunei&apos;, &apos;Cambodia&apos;, &#13;&#10;    &apos;China&apos;, &apos;Cyprus&apos;, &apos;Georgia&apos;, &apos;India&apos;, &apos;Indonesia&apos;, &apos;Iran&apos;, &apos;Iraq&apos;, &apos;Israel&apos;, &apos;Japan&apos;, &apos;Jordan&apos;, &#13;&#10;    &apos;Kazakhstan&apos;, &apos;Kuwait&apos;, &apos;Kyrgyzstan&apos;, &apos;Laos&apos;, &apos;Lebanon&apos;, &apos;Malaysia&apos;, &apos;Maldives&apos;, &apos;Mongolia&apos;, &#13;&#10;    &apos;Myanmar&apos;, &apos;Nepal&apos;, &apos;North Korea&apos;, &apos;Oman&apos;, &apos;Pakistan&apos;, &apos;Palestine&apos;, &apos;Philippines&apos;, &apos;Qatar&apos;, &apos;Saudi Arabia&apos;, &#13;&#10;    &apos;Singapore&apos;, &apos;South Korea&apos;, &apos;Sri Lanka&apos;, &apos;Syria&apos;, &apos;Tajikistan&apos;, &apos;Thailand&apos;, &apos;Timor-Leste&apos;, &apos;Turkey&apos;, &#13;&#10;    &apos;Turkmenistan&apos;, &apos;United Arab Emirates&apos;, &apos;Uzbekistan&apos;, &apos;Vietnam&apos;, &apos;Yemen&apos;&#13;&#10;) THEN &apos;Asia&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Albania&apos;, &apos;Andorra&apos;, &apos;Austria&apos;, &apos;Belarus&apos;, &apos;Belgium&apos;, &apos;Bosnia and Herzegovina&apos;, &apos;Bulgaria&apos;, &apos;Croatia&apos;, &#13;&#10;    &apos;Czech Republic&apos;, &apos;Denmark&apos;, &apos;Estonia&apos;, &apos;Finland&apos;, &apos;France&apos;, &apos;Germany&apos;, &apos;Greece&apos;, &apos;Hungary&apos;, &apos;Iceland&apos;, &#13;&#10;    &apos;Ireland&apos;, &apos;Italy&apos;, &apos;Kosovo&apos;, &apos;Latvia&apos;, &apos;Liechtenstein&apos;, &apos;Lithuania&apos;, &apos;Luxembourg&apos;, &apos;Malta&apos;, &apos;Moldova&apos;, &#13;&#10;    &apos;Monaco&apos;, &apos;Montenegro&apos;, &apos;Netherlands&apos;, &apos;North Macedonia&apos;, &apos;Norway&apos;, &apos;Poland&apos;, &apos;Portugal&apos;, &apos;Romania&apos;, &#13;&#10;    &apos;Russia&apos;, &apos;San Marino&apos;, &apos;Serbia&apos;, &apos;Slovakia&apos;, &apos;Slovenia&apos;, &apos;Spain&apos;, &apos;Sweden&apos;, &apos;Switzerland&apos;, &apos;Ukraine&apos;, &apos;United Kingdom&apos;, &apos;Vatican City&apos;&#13;&#10;) THEN &apos;Europe&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Antigua and Barbuda&apos;, &apos;Argentina&apos;, &apos;Bahamas&apos;, &apos;Barbados&apos;, &apos;Belize&apos;, &apos;Bolivia&apos;, &apos;Brazil&apos;, &apos;Canada&apos;, &apos;Chile&apos;, &#13;&#10;    &apos;Colombia&apos;, &apos;Costa Rica&apos;, &apos;Cuba&apos;, &apos;Dominica&apos;, &apos;Dominican Republic&apos;, &apos;Ecuador&apos;, &apos;El Salvador&apos;, &apos;Grenada&apos;, &apos;Guatemala&apos;, &#13;&#10;    &apos;Guyana&apos;, &apos;Haiti&apos;, &apos;Honduras&apos;, &apos;Jamaica&apos;, &apos;Mexico&apos;, &apos;Nicaragua&apos;, &apos;Panama&apos;, &apos;Paraguay&apos;, &apos;Peru&apos;, &apos;Saint Kitts and Nevis&apos;, &#13;&#10;    &apos;Saint Lucia&apos;, &apos;Saint Vincent and the Grenadines&apos;, &apos;Suriname&apos;, &apos;Trinidad and Tobago&apos;, &apos;United States&apos;, &apos;Uruguay&apos;, &apos;Venezuela&apos;&#13;&#10;) THEN &apos;Americas&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Australia&apos;, &apos;New Zealand&apos;, &apos;Fiji&apos;, &apos;Kiribati&apos;, &apos;Marshall Islands&apos;, &apos;Micronesia&apos;, &apos;Nauru&apos;, &apos;Palau&apos;, &#13;&#10;    &apos;Papua New Guinea&apos;, &apos;Samoa&apos;, &apos;Solomon Islands&apos;, &apos;Tonga&apos;, &apos;Tuvalu&apos;, &apos;Vanuatu&apos;&#13;&#10;) THEN &apos;Pacific&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Bahrain&apos;, &apos;Comoros&apos;, &apos;Madagascar&apos;, &apos;Maldives&apos;, &apos;Mauritius&apos;, &apos;Seychelles&apos;, &apos;Taiwan&apos;, &apos;Hong Kong&apos;&#13;&#10;) THEN &apos;Island&apos;&#13;&#10;&#13;&#10;ELSE &apos;Africa&apos;&#13;&#10;END' />
            </column>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Happiness score' datatype='real' name='[Happiness_score]' role='measure' type='quantitative' />
            <column-instance column='[Happiness_score]' derivation='Avg' name='[avg:Happiness_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1024568971831394304]' derivation='None' name='[none:Calculation_1024568971831394304:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]' />
              <text column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]</rows>
        <cols>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]</cols>
      </table>
      <simple-id uuid='{8D2859E0-A92B-480A-8538-999B0FF7A1B3}' />
    </worksheet>
    <worksheet name='Top 10'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='20'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Combined_Cleaned' name='federated.1b23h6n1s7urv9188s8hf1c6z70u' />
          </datasources>
          <datasource-dependencies datasource='federated.1b23h6n1s7urv9188s8hf1c6z70u'>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Happiness score' datatype='real' name='[Happiness_score]' role='measure' type='quantitative' />
            <column-instance column='[Happiness_score]' derivation='Avg' name='[avg:Happiness_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Happiness_score])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' direction='DESC' using='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]' />
          <slices>
            <column>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]' field-type='quantitative' major-origin='0.0' major-spacing='10.0' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]' scope='rows' value='Happiness Score' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' />
              <text column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{CEDFEC3E-626B-4CD9-AE1D-EB7C3C3968F8}' />
    </worksheet>
    <worksheet name='Trend line'>
      <table>
        <view>
          <datasources>
            <datasource caption='Combined_Cleaned' name='federated.1b23h6n1s7urv9188s8hf1c6z70u' />
          </datasources>
          <datasource-dependencies datasource='federated.1b23h6n1s7urv9188s8hf1c6z70u'>
            <column caption='Region' datatype='string' name='[Calculation_1024568971831394304]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Country_name] IN (&#13;&#10;    &apos;Afghanistan&apos;, &apos;Armenia&apos;, &apos;Azerbaijan&apos;, &apos;Bahrain&apos;, &apos;Bangladesh&apos;, &apos;Bhutan&apos;, &apos;Brunei&apos;, &apos;Cambodia&apos;, &#13;&#10;    &apos;China&apos;, &apos;Cyprus&apos;, &apos;Georgia&apos;, &apos;India&apos;, &apos;Indonesia&apos;, &apos;Iran&apos;, &apos;Iraq&apos;, &apos;Israel&apos;, &apos;Japan&apos;, &apos;Jordan&apos;, &#13;&#10;    &apos;Kazakhstan&apos;, &apos;Kuwait&apos;, &apos;Kyrgyzstan&apos;, &apos;Laos&apos;, &apos;Lebanon&apos;, &apos;Malaysia&apos;, &apos;Maldives&apos;, &apos;Mongolia&apos;, &#13;&#10;    &apos;Myanmar&apos;, &apos;Nepal&apos;, &apos;North Korea&apos;, &apos;Oman&apos;, &apos;Pakistan&apos;, &apos;Palestine&apos;, &apos;Philippines&apos;, &apos;Qatar&apos;, &apos;Saudi Arabia&apos;, &#13;&#10;    &apos;Singapore&apos;, &apos;South Korea&apos;, &apos;Sri Lanka&apos;, &apos;Syria&apos;, &apos;Tajikistan&apos;, &apos;Thailand&apos;, &apos;Timor-Leste&apos;, &apos;Turkey&apos;, &#13;&#10;    &apos;Turkmenistan&apos;, &apos;United Arab Emirates&apos;, &apos;Uzbekistan&apos;, &apos;Vietnam&apos;, &apos;Yemen&apos;&#13;&#10;) THEN &apos;Asia&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Albania&apos;, &apos;Andorra&apos;, &apos;Austria&apos;, &apos;Belarus&apos;, &apos;Belgium&apos;, &apos;Bosnia and Herzegovina&apos;, &apos;Bulgaria&apos;, &apos;Croatia&apos;, &#13;&#10;    &apos;Czech Republic&apos;, &apos;Denmark&apos;, &apos;Estonia&apos;, &apos;Finland&apos;, &apos;France&apos;, &apos;Germany&apos;, &apos;Greece&apos;, &apos;Hungary&apos;, &apos;Iceland&apos;, &#13;&#10;    &apos;Ireland&apos;, &apos;Italy&apos;, &apos;Kosovo&apos;, &apos;Latvia&apos;, &apos;Liechtenstein&apos;, &apos;Lithuania&apos;, &apos;Luxembourg&apos;, &apos;Malta&apos;, &apos;Moldova&apos;, &#13;&#10;    &apos;Monaco&apos;, &apos;Montenegro&apos;, &apos;Netherlands&apos;, &apos;North Macedonia&apos;, &apos;Norway&apos;, &apos;Poland&apos;, &apos;Portugal&apos;, &apos;Romania&apos;, &#13;&#10;    &apos;Russia&apos;, &apos;San Marino&apos;, &apos;Serbia&apos;, &apos;Slovakia&apos;, &apos;Slovenia&apos;, &apos;Spain&apos;, &apos;Sweden&apos;, &apos;Switzerland&apos;, &apos;Ukraine&apos;, &apos;United Kingdom&apos;, &apos;Vatican City&apos;&#13;&#10;) THEN &apos;Europe&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Antigua and Barbuda&apos;, &apos;Argentina&apos;, &apos;Bahamas&apos;, &apos;Barbados&apos;, &apos;Belize&apos;, &apos;Bolivia&apos;, &apos;Brazil&apos;, &apos;Canada&apos;, &apos;Chile&apos;, &#13;&#10;    &apos;Colombia&apos;, &apos;Costa Rica&apos;, &apos;Cuba&apos;, &apos;Dominica&apos;, &apos;Dominican Republic&apos;, &apos;Ecuador&apos;, &apos;El Salvador&apos;, &apos;Grenada&apos;, &apos;Guatemala&apos;, &#13;&#10;    &apos;Guyana&apos;, &apos;Haiti&apos;, &apos;Honduras&apos;, &apos;Jamaica&apos;, &apos;Mexico&apos;, &apos;Nicaragua&apos;, &apos;Panama&apos;, &apos;Paraguay&apos;, &apos;Peru&apos;, &apos;Saint Kitts and Nevis&apos;, &#13;&#10;    &apos;Saint Lucia&apos;, &apos;Saint Vincent and the Grenadines&apos;, &apos;Suriname&apos;, &apos;Trinidad and Tobago&apos;, &apos;United States&apos;, &apos;Uruguay&apos;, &apos;Venezuela&apos;&#13;&#10;) THEN &apos;Americas&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Australia&apos;, &apos;New Zealand&apos;, &apos;Fiji&apos;, &apos;Kiribati&apos;, &apos;Marshall Islands&apos;, &apos;Micronesia&apos;, &apos;Nauru&apos;, &apos;Palau&apos;, &#13;&#10;    &apos;Papua New Guinea&apos;, &apos;Samoa&apos;, &apos;Solomon Islands&apos;, &apos;Tonga&apos;, &apos;Tuvalu&apos;, &apos;Vanuatu&apos;&#13;&#10;) THEN &apos;Pacific&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Bahrain&apos;, &apos;Comoros&apos;, &apos;Madagascar&apos;, &apos;Maldives&apos;, &apos;Mauritius&apos;, &apos;Seychelles&apos;, &apos;Taiwan&apos;, &apos;Hong Kong&apos;&#13;&#10;) THEN &apos;Island&apos;&#13;&#10;&#13;&#10;ELSE &apos;Africa&apos;&#13;&#10;END' />
            </column>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Happiness score' datatype='real' name='[Happiness_score]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Happiness_score]' derivation='Avg' name='[avg:Happiness_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1024568971831394304]' derivation='None' name='[none:Calculation_1024568971831394304:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Austria&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]</rows>
        <cols>([federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk] * [federated.1b23h6n1s7urv9188s8hf1c6z70u].[tyr:Year:qk])</cols>
      </table>
      <simple-id uuid='{4E31A266-C5DF-49C4-A7B7-83E43B037377}' />
    </worksheet>
    <worksheet name='World Happiness Report'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='28'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Combined_Cleaned' name='federated.1b23h6n1s7urv9188s8hf1c6z70u' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1b23h6n1s7urv9188s8hf1c6z70u'>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Happiness score' datatype='real' name='[Happiness_score]' role='measure' type='quantitative' />
            <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness_score]' derivation='Sum' name='[sum:Happiness_score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]'>
            <groupfilter function='level-members' level='[none:Country_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[Longitude (generated)]' field-type='quantitative' max='17845906.913787689' min='-17845906.913787689' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[Latitude (generated)]' field-type='quantitative' max='12132086.363032341' min='-12132086.363032337' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[sum:Happiness_score:qk]' num-steps='5' palette='red_green_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[sum:Happiness_score:qk]' />
              <lod column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' />
              <geometry column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='has-halo' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[Latitude (generated)]</rows>
        <cols>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2491F778-D5C2-4495-BE62-9A255B3DCBFD}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='860' maxwidth='650' minheight='560' minwidth='420' />
      <zones>
        <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98004' id='12' param='horz' type-v2='layout-flow' w='97538' x='1231' y='998'>
            <zone fixed-size='261' h='98004' id='11' is-fixed='true' param='vert' type-v2='layout-flow' w='97538' x='1231' y='998' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='96259' id='10' name='World Happiness Report' w='70769' x='4462' y='2369' />
        <zone h='77930' id='14' name='Top 10' w='21231' x='77692' y='20200' />
        <zone h='10224' id='13' name='World Happiness Report' pane-specification-id='0' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[sum:Happiness_score:qk]' type-v2='color' w='20154' x='78615' y='1746' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='30' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98004' id='29' param='vert' type-v2='layout-flow' w='97538' x='1231' y='998'>
                <zone fixed-size='280' h='96259' id='10' is-fixed='true' name='World Happiness Report' w='70769' x='4462' y='2369'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10224' id='13' name='World Happiness Report' pane-specification-id='0' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[sum:Happiness_score:qk]' type-v2='color' w='20154' x='78615' y='1746'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='77930' id='14' is-fixed='true' name='Top 10' w='21231' x='77692' y='20200'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C11228DE-2335-4FB6-99CF-5090DC4CEF9C}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='860' maxwidth='650' minheight='560' minwidth='420' />
      <zones>
        <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98004' id='10' param='horz' type-v2='layout-flow' w='97538' x='1231' y='998'>
            <zone h='98004' id='8' type-v2='layout-basic' w='97538' x='1231' y='998' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='41147' id='5' name='Asia &amp; Europe Difference' w='53231' x='3231' y='5237' />
        <zone h='45511' id='7' name='Regions Happines Score' w='72462' x='2923' y='52494' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98004' id='21' param='vert' type-v2='layout-flow' w='97538' x='1231' y='998'>
                <zone fixed-size='280' h='41147' id='5' is-fixed='true' name='Asia &amp; Europe Difference' w='53231' x='3231' y='5237'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45511' id='7' is-fixed='true' name='Regions Happines Score' w='72462' x='2923' y='52494'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C1F527F3-6264-44EA-9038-428D0D2297A8}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 3'>
      <style />
      <size maxheight='860' maxwidth='650' minheight='560' minwidth='420' />
      <datasources>
        <datasource caption='Combined_Cleaned' name='federated.1b23h6n1s7urv9188s8hf1c6z70u' />
      </datasources>
      <datasource-dependencies datasource='federated.1b23h6n1s7urv9188s8hf1c6z70u'>
        <column caption='Region' datatype='string' name='[Calculation_1024568971831394304]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF [Country_name] IN (&#13;&#10;    &apos;Afghanistan&apos;, &apos;Armenia&apos;, &apos;Azerbaijan&apos;, &apos;Bahrain&apos;, &apos;Bangladesh&apos;, &apos;Bhutan&apos;, &apos;Brunei&apos;, &apos;Cambodia&apos;, &#13;&#10;    &apos;China&apos;, &apos;Cyprus&apos;, &apos;Georgia&apos;, &apos;India&apos;, &apos;Indonesia&apos;, &apos;Iran&apos;, &apos;Iraq&apos;, &apos;Israel&apos;, &apos;Japan&apos;, &apos;Jordan&apos;, &#13;&#10;    &apos;Kazakhstan&apos;, &apos;Kuwait&apos;, &apos;Kyrgyzstan&apos;, &apos;Laos&apos;, &apos;Lebanon&apos;, &apos;Malaysia&apos;, &apos;Maldives&apos;, &apos;Mongolia&apos;, &#13;&#10;    &apos;Myanmar&apos;, &apos;Nepal&apos;, &apos;North Korea&apos;, &apos;Oman&apos;, &apos;Pakistan&apos;, &apos;Palestine&apos;, &apos;Philippines&apos;, &apos;Qatar&apos;, &apos;Saudi Arabia&apos;, &#13;&#10;    &apos;Singapore&apos;, &apos;South Korea&apos;, &apos;Sri Lanka&apos;, &apos;Syria&apos;, &apos;Tajikistan&apos;, &apos;Thailand&apos;, &apos;Timor-Leste&apos;, &apos;Turkey&apos;, &#13;&#10;    &apos;Turkmenistan&apos;, &apos;United Arab Emirates&apos;, &apos;Uzbekistan&apos;, &apos;Vietnam&apos;, &apos;Yemen&apos;&#13;&#10;) THEN &apos;Asia&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Albania&apos;, &apos;Andorra&apos;, &apos;Austria&apos;, &apos;Belarus&apos;, &apos;Belgium&apos;, &apos;Bosnia and Herzegovina&apos;, &apos;Bulgaria&apos;, &apos;Croatia&apos;, &#13;&#10;    &apos;Czech Republic&apos;, &apos;Denmark&apos;, &apos;Estonia&apos;, &apos;Finland&apos;, &apos;France&apos;, &apos;Germany&apos;, &apos;Greece&apos;, &apos;Hungary&apos;, &apos;Iceland&apos;, &#13;&#10;    &apos;Ireland&apos;, &apos;Italy&apos;, &apos;Kosovo&apos;, &apos;Latvia&apos;, &apos;Liechtenstein&apos;, &apos;Lithuania&apos;, &apos;Luxembourg&apos;, &apos;Malta&apos;, &apos;Moldova&apos;, &#13;&#10;    &apos;Monaco&apos;, &apos;Montenegro&apos;, &apos;Netherlands&apos;, &apos;North Macedonia&apos;, &apos;Norway&apos;, &apos;Poland&apos;, &apos;Portugal&apos;, &apos;Romania&apos;, &#13;&#10;    &apos;Russia&apos;, &apos;San Marino&apos;, &apos;Serbia&apos;, &apos;Slovakia&apos;, &apos;Slovenia&apos;, &apos;Spain&apos;, &apos;Sweden&apos;, &apos;Switzerland&apos;, &apos;Ukraine&apos;, &apos;United Kingdom&apos;, &apos;Vatican City&apos;&#13;&#10;) THEN &apos;Europe&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Antigua and Barbuda&apos;, &apos;Argentina&apos;, &apos;Bahamas&apos;, &apos;Barbados&apos;, &apos;Belize&apos;, &apos;Bolivia&apos;, &apos;Brazil&apos;, &apos;Canada&apos;, &apos;Chile&apos;, &#13;&#10;    &apos;Colombia&apos;, &apos;Costa Rica&apos;, &apos;Cuba&apos;, &apos;Dominica&apos;, &apos;Dominican Republic&apos;, &apos;Ecuador&apos;, &apos;El Salvador&apos;, &apos;Grenada&apos;, &apos;Guatemala&apos;, &#13;&#10;    &apos;Guyana&apos;, &apos;Haiti&apos;, &apos;Honduras&apos;, &apos;Jamaica&apos;, &apos;Mexico&apos;, &apos;Nicaragua&apos;, &apos;Panama&apos;, &apos;Paraguay&apos;, &apos;Peru&apos;, &apos;Saint Kitts and Nevis&apos;, &#13;&#10;    &apos;Saint Lucia&apos;, &apos;Saint Vincent and the Grenadines&apos;, &apos;Suriname&apos;, &apos;Trinidad and Tobago&apos;, &apos;United States&apos;, &apos;Uruguay&apos;, &apos;Venezuela&apos;&#13;&#10;) THEN &apos;Americas&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Australia&apos;, &apos;New Zealand&apos;, &apos;Fiji&apos;, &apos;Kiribati&apos;, &apos;Marshall Islands&apos;, &apos;Micronesia&apos;, &apos;Nauru&apos;, &apos;Palau&apos;, &#13;&#10;    &apos;Papua New Guinea&apos;, &apos;Samoa&apos;, &apos;Solomon Islands&apos;, &apos;Tonga&apos;, &apos;Tuvalu&apos;, &apos;Vanuatu&apos;&#13;&#10;) THEN &apos;Pacific&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Bahrain&apos;, &apos;Comoros&apos;, &apos;Madagascar&apos;, &apos;Maldives&apos;, &apos;Mauritius&apos;, &apos;Seychelles&apos;, &apos;Taiwan&apos;, &apos;Hong Kong&apos;&#13;&#10;) THEN &apos;Island&apos;&#13;&#10;&#13;&#10;ELSE &apos;Africa&apos;&#13;&#10;END' />
        </column>
        <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Calculation_1024568971831394304]' derivation='None' name='[none:Calculation_1024568971831394304:nk]' pivot='key' type='nominal' />
        <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98004' id='7' param='horz' type-v2='layout-flow' w='97538' x='1231' y='998'>
            <zone h='98004' id='5' type-v2='layout-basic' w='75846' x='1231' y='998' />
            <zone fixed-size='141' h='98004' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='21692' x='77077' y='998'>
              <zone fixed-size='92' h='12469' id='8' is-fixed='true' name='Per Capita Income and Happiness Relationship' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]' type-v2='filter' w='21692' x='77077' y='998'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='52369' id='3' name='Per Capita Income and Happiness Relationship' w='75385' x='1385' y='748' />
        <zone h='42145' id='11' name=' Social Support and Happiness Relationship' w='75538' x='923' y='55362' />
        <zone h='18454' id='13' name=' Social Support and Happiness Relationship' pane-specification-id='0' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[sum:Economy_(GDP_per_Capita)_:qk]' type-v2='size' w='21538' x='78308' y='80424' />
        <zone h='18454' id='12' name=' Social Support and Happiness Relationship' pane-specification-id='0' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]' type-v2='color' w='21538' x='78769' y='60599' />
        <zone fixed-size='103' h='16958' id='10' is-fixed='true' name='Per Capita Income and Happiness Relationship' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[yr:Year:ok]' type-v2='filter' w='20000' x='78154' y='34165' />
        <zone fixed-size='123' h='17706' id='9' is-fixed='true' name='Per Capita Income and Happiness Relationship' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' type-v2='filter' w='21538' x='76923' y='15835' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98004' id='18' param='vert' type-v2='layout-flow' w='97538' x='1231' y='998'>
                <zone fixed-size='92' h='12469' id='8' mode='checkdropdown' name='Per Capita Income and Happiness Relationship' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]' type-v2='filter' w='21692' x='77077' y='998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='103' h='16958' id='10' mode='checkdropdown' name='Per Capita Income and Happiness Relationship' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[yr:Year:ok]' type-v2='filter' w='20000' x='78154' y='34165'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='123' h='17706' id='9' mode='checkdropdown' name='Per Capita Income and Happiness Relationship' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' type-v2='filter' w='21538' x='76923' y='15835'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52369' id='3' is-fixed='true' name='Per Capita Income and Happiness Relationship' w='75385' x='1385' y='748'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42145' id='11' is-fixed='true' name=' Social Support and Happiness Relationship' w='75538' x='923' y='55362'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18454' id='13' name=' Social Support and Happiness Relationship' pane-specification-id='0' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[sum:Economy_(GDP_per_Capita)_:qk]' type-v2='size' w='21538' x='78308' y='80424'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18454' id='12' name=' Social Support and Happiness Relationship' pane-specification-id='0' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]' type-v2='color' w='21538' x='78769' y='60599'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{58A9A565-0D11-4E8D-9CBC-8DC1A2CE0664}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 4'>
      <style />
      <size maxheight='860' maxwidth='650' minheight='560' minwidth='420' />
      <datasources>
        <datasource caption='Combined_Cleaned' name='federated.1b23h6n1s7urv9188s8hf1c6z70u' />
      </datasources>
      <datasource-dependencies datasource='federated.1b23h6n1s7urv9188s8hf1c6z70u'>
        <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98004' id='7' param='horz' type-v2='layout-flow' w='97538' x='1231' y='998'>
            <zone h='98004' id='5' type-v2='layout-basic' w='72923' x='1231' y='998' />
            <zone fixed-size='160' h='98004' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='24615' x='74154' y='998' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='45387' id='3' name='Comparison of Happiness Scores Between 2020 and 2024' w='68000' x='5077' y='4115' />
        <zone fixed-size='298' h='20324' id='8' is-fixed='true' name='Comparison of Happiness Scores Between 2020 and 2024' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' type-v2='filter' w='25846' x='73385' y='16958' />
        <zone h='10100' id='10' name='Comparison of Happiness Scores Between 2020 and 2024' pane-specification-id='0' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' type-v2='color' w='24615' x='74462' y='38653' />
        <zone h='11970' id='9' name='Comparison of Happiness Scores Between 2020 and 2024' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[yr:Year:ok]' type-v2='filter' w='25846' x='73231' y='1496' />
        <zone h='49127' id='11' name='Trend line' w='71385' x='2000' y='50249' />
        <zone h='34663' id='12' name='Trend line' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' type-v2='filter' w='25846' x='74615' y='53865' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98004' id='17' param='vert' type-v2='layout-flow' w='97538' x='1231' y='998'>
                <zone fixed-size='298' h='20324' id='8' mode='checkdropdown' name='Comparison of Happiness Scores Between 2020 and 2024' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' type-v2='filter' w='25846' x='73385' y='16958'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11970' id='9' mode='checkdropdown' name='Comparison of Happiness Scores Between 2020 and 2024' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[yr:Year:ok]' type-v2='filter' w='25846' x='73231' y='1496'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45387' id='3' is-fixed='true' name='Comparison of Happiness Scores Between 2020 and 2024' w='68000' x='5077' y='4115'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10100' id='10' name='Comparison of Happiness Scores Between 2020 and 2024' pane-specification-id='0' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' type-v2='color' w='24615' x='74462' y='38653'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='34663' id='12' mode='checkdropdown' name='Trend line' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' type-v2='filter' w='25846' x='74615' y='53865'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49127' id='11' is-fixed='true' name='Trend line' w='71385' x='2000' y='50249'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{243EF76B-D762-4976-8A8F-C8B07E253986}' />
    </dashboard>
    <dashboard name='Hypothesis 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='4357' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='6535' id='4' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='5187' />
            <zone h='87448' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='11722'>
              <flipboard active-id='3' nav-type='dot' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='2' captured-sheet='Dashboard 2' id='3' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='46369' id='6' story-point-id='3' type-v2='text' w='26870' x='71654' y='1763'>
          <formatted-text>
            <run fontalignment='0'>Hypothesis 1 was to examine the difference in happiness between Asia and Europe.

 In doing so, an additional table was added to see the other regions and the difference between all regions was monitored.</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{948B8D91-C2A3-4277-BCF6-23A13122C412}' />
    </dashboard>
    <dashboard name='Hypothesis 2 &amp; 3' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='4357' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='6535' id='4' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='5187' />
            <zone h='87448' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='11722'>
              <flipboard active-id='1' nav-type='dot' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='3' captured-sheet='Dashboard 3' id='1'>
                    <currentDeltas>
                      <worksheet name='Per Capita Income and Happiness Relationship'>
                        <filter class='categorical' column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]'>
                          <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Albania&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Algeria&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Argentina&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Armenia&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Australia&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Bahrain&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Bangladesh&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Belarus&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Belarus*&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Belgium&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Benin&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Bolivia&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Botswana&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Botswana*&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Brazil&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Bulgaria&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Burkina Faso&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Burundi&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Cambodia&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Cameroon&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Canada&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Chile&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;China&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Colombia&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Comoros&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Comoros*&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Congo&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Congo (Brazzaville)&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Congo (Kinshasa)&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Costa Rica&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Croatia&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Cyprus&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Czech Republic&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Czechia&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Denmark&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Dominican Republic&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Ecuador&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Eswatini, Kingdom of*&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Ethiopia&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Finland&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;France&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Gabon&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Gambia&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Gambia*&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Georgia&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Germany&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Ghana&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Greece&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Guatemala&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Guatemala*&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Guinea&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Haiti&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Honduras&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Hong Kong S.A.R. of China&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Hungary&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Iceland&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;India&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Indonesia&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Iran&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Iraq&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Ireland&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Israel&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Italy&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Ivory Coast&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Jamaica&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Japan&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Jordan&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Kazakhstan&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Kenya&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Kosovo&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Kuwait&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Kuwait*&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Kyrgyzstan&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Laos&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Latvia&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Lebanon&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Lesotho&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Lesotho*&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Liberia&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Liberia*&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Libya&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Libya*&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Lithuania&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Luxembourg&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Luxembourg*&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Macedonia&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Madagascar&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Madagascar*&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Malawi&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Malaysia&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Maldives&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Mali&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Malta&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Mauritania&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Mauritania*&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Mauritius&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Mexico&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Moldova&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Mongolia&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Montenegro&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Morocco&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Mozambique&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Myanmar&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Namibia&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Nepal&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Netherlands&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;New Zealand&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Nicaragua&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Niger&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Niger*&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Nigeria&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;North Cyprus&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;North Cyprus*&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;North Macedonia&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Norway&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Pakistan&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Palestinian Territories&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Palestinian Territories*&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Panama&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Paraguay&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Peru&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Philippines&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Poland&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Portugal&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Romania&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Russia&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Rwanda&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Rwanda*&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Saudi Arabia&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Senegal&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Serbia&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Sierra Leone&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Singapore&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Slovakia&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Slovenia&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;South Africa&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;South Korea&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;South Sudan&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Spain&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Sri Lanka&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;State of Palestine&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Swaziland&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Sweden&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Switzerland&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Taiwan Province of China&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Tajikistan&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Tanzania&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Thailand&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Togo&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Trinidad and Tobago&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Tunisia&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Turkey&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Turkiye&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Turkmenistan&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Turkmenistan*&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Uganda&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Ukraine&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;United Arab Emirates&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;United Kingdom&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;United States&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Uruguay&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Uzbekistan&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Venezuela&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Vietnam&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Yemen&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Yemen*&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Zambia&quot;' />
                            <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Zimbabwe&quot;' />
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[yr:Year:ok]'>
                          <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[yr:Year:ok]' member='2020' />
                            <groupfilter function='member' level='[yr:Year:ok]' member='2024' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas />
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='36307' id='6' story-point-id='1' type-v2='text' w='18110' x='81594' y='1245'>
          <formatted-text>
            <run fontalignment='0' fontsize='12'>As seen in hypotheses 2 and 3, it was observed that income and social support positively affected the happiness score.</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{C07D79E0-C8D6-4A01-88F8-9F0A5E0A4C94}' />
    </dashboard>
    <dashboard name='Hypothesis 4 and Trend line' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='4357' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='6535' id='4' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='5187' />
            <zone h='87448' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='11722'>
              <flipboard active-id='1' nav-type='dot' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='Dashboard 4' id='1' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='42842' id='6' story-point-id='1' type-v2='text' w='17126' x='81890' y='1660'>
          <formatted-text>
            <run fontalignment='0' fontsize='12'>For hypothesis 4, the change over the years was observed, although not very much on a country basis. </run>
            <run fontalignment='0'>Ã&#10;&#10;</run>
            <run fontalignment='0' fontsize='12'>In addition, a trend line graph was added.</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{ABA8825F-2D46-4A1E-9F95-EF3AB7735F07}' />
    </dashboard>
    <dashboard name='World Happiness Map' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='9' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='98340' id='7' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
              <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
                <zone h='6535' id='4' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='830' />
                <zone h='91805' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='7365'>
                  <flipboard active-id='2' nav-type='dot' show-nav-arrows='true'>
                    <story-points>
                      <story-point captured-sheet='Dashboard 1' id='2' />
                    </story-points>
                  </flipboard>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='32573' id='10' story-point-id='2' type-v2='text' w='14567' x='84941' y='1037'>
          <formatted-text>
            <run fontalignment='0' fontsize='12'>We can see happiness levels according to colors on the world map. We can roughly distinguish between regions.</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{EA04E955-2262-4D3E-95DD-357B1BE0EBF2}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='World Happiness Report'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[sum:Happiness_score:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]</field>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{96A77978-F3EA-4F66-8AB2-741A314B8963}' />
    </window>
    <window class='worksheet' name='Happiest Top 10 Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[sum:Happiness_score:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]</field>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B120DBA2-DA12-4BD9-941F-08DAE2B86DB2}' />
    </window>
    <window class='worksheet' name='Happiest Last 10 Countries '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]</field>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]</field>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2EFCDB2D-9D22-4250-9E58-C42BE239D439}' />
    </window>
    <window class='worksheet' name='Top 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FBE6406B-F917-4264-A68E-0B67BFCE7E38}' />
    </window>
    <window class='worksheet' name='Asia &amp; Europe Difference'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BD725CF2-1349-40BD-A9BD-07467E8FF612}' />
    </window>
    <window class='worksheet' name='Regions Happines Score'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{36EC6EDC-A9B6-4D2B-80E9-260B8BD9E072}' />
    </window>
    <window class='worksheet' name='Per Capita Income and Happiness Relationship'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]' type='filter' />
            <card param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' type='filter' />
            <card param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[yr:Year:ok]' type='filter' />
            <card pane-specification-id='1' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[:Measure Names]</field>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]</field>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]</field>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Year:qk]</field>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ADAC5303-0581-4445-9A64-8505D8AF62F1}' />
    </window>
    <window class='worksheet' name=' Social Support and Happiness Relationship'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[sum:Economy_(GDP_per_Capita)_:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7963EFE5-E0B9-4D9C-8578-00013D928167}' />
    </window>
    <window class='worksheet' name='Comparison of Happiness Scores Between 2020 and 2024'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='16' type='pages' />
            <card size='27' type='filters' />
            <card size='117' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' type='filter' />
            <card param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[yr:Year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]</field>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[tyr:Year:qk]</field>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8AF1F0B3-89AF-4FAF-AEBE-FD8B46DAB4BA}' />
    </window>
    <window class='worksheet' name='Trend line'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]</field>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[tyr:Year:qk]</field>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2ABC6D69-A13F-49B6-9DF4-9F532BFA39C2}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Top 10'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='World Happiness Report'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{A4B7D873-0D32-47FD-8FCF-8B84A88908DF}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Asia &amp; Europe Difference'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Regions Happines Score'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <highlight field='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{6CFCC373-462C-4EF4-9565-3E5947DED785}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name=' Social Support and Happiness Relationship'>
          <zoom type='entire-view' />
          <highlight field='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[sum:Economy_(GDP_per_Capita)_:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Per Capita Income and Happiness Relationship'>
          <zoom type='entire-view' />
          <highlight field='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{B64B7F89-A0B8-4E93-AE5C-13E7EC4C59CF}' />
    </window>
    <window class='dashboard' name='Dashboard 4'>
      <viewpoints>
        <viewpoint name='Comparison of Happiness Scores Between 2020 and 2024'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Trend line'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{CA64B5E3-78DB-4E1B-B0A1-20A973C8312E}' />
    </window>
    <window class='dashboard' name='World Happiness Map'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{0E529469-8087-44B6-8022-1CABB4EEDE13}' />
    </window>
    <window class='dashboard' name='Hypothesis 1'>
      <viewpoints />
      <active id='8' />
      <simple-id uuid='{34BF563D-D981-4B5C-8E49-9AE84BF04047}' />
    </window>
    <window class='dashboard' name='Hypothesis 2 &amp; 3'>
      <viewpoints />
      <active id='6' />
      <simple-id uuid='{14F036E0-BECD-4D2E-BD37-2F8E6D8FE07D}' />
    </window>
    <window class='dashboard' maximized='true' name='Hypothesis 4 and Trend line'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{90B338FB-6224-4168-AF46-C9EBFEDD1B33}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name=' Social Support and Happiness Relationship' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Asia &amp; Europe Difference' width='128'>
      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
      SgDJUQJIzv8DAbKwAtlkcNIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Comparison of Happiness Scores Between 2020 and 2024' width='192'>
      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
      aW/8h+ZwoHYoADIW5dleZCwKdDQACjduvYNpWWjayZgFJMTLdDQAmsOBfI2GeJ3IZVBhaxIA
      YWuv1cH6SjLLbr7c0jaDvV3EIzKpWjzfaxWA//vBHO/fXm1pm+/9w0v8/rfPHU5D4rUnh0DC
      1iQAwtYkAMLWJADC1iQAwtYkAMLWJADC1iQAwtYkAMLWJADC1iQAwtYkAMLWJADC1jo7FWJn
      k8/vLXSypBCHqqNvh/Z3R1HTDwJgmiaWZWEYBoZhtlXPMAysJz7w3db0A8t8NKHiwZ9tTqh4
      ZspAG6080cODP40T0MtDimW1NRXCerIX02z5I7EWDyZUPNnTqzzOj1s52HOuowFwu92P/ltR
      FBRFQVVVVLW9HY2qqk9NhWhnEsOTPaiqitLG9IOHvTxdt40aivpUL9YrrMvTzbTTi/J0nTZq
      KIqC8mSNNqY5wOP78+gxaqMZRXn6eXbQ51wHA2CxvrJIsVhkN1ckGgp81ZjS1pPl8bavNhZF
      4XGNV6nXkS/rU3i6lza/Ae3ZXtqq8rW1aONJ91WdTtZQFKW9MNLeY9TRqRBDiUmGEpOdKynE
      IZOrQMLWJADC1iQAwtYkAMLWJADC1iQAwtYkAMLWJADC1iQAwtYkAMLWJADC1iQAwtYkAMLW
      JADC1joaAKNRp1Bs7RtchDhOHf1AzNzdO6gqhAZm6A97OldaiEPSwT2AgeoMMjE1RjGT7VxZ
      IQ5RBwOgYeoFFueX8feEO1dWiEPU0Y9ETs+cp1zTCQbk8Ee8Hh4FoFQqoet6R4rmcjkAyuUH
      J8TVWoNb52It19nP55/6e6LXi95ind6ARi6Xe9xLwyTurrdUQ1OUR/fpoS6lStzdaKmOUiuR
      y9Uf9WI1nNQT77ZWwxOi8Uwveuw6pvtMS3V0pRv1yTpKGAJnW6qB1QVP1mhUW6+hqI9qPFyX
      Uf84xFv7gHtI63nqMbJqcCN+6+U3b7UzhOWAcrkcoVDolesYhoGmtTpxpvO9WJaFaZonphfL
      stoeOdNJnXh8oDPr0movx796B3ASHuSHTlIvHRnV0gEnaU1a7eVIvyg7vbXG1s4eodgwxfQa
      VTycHe1jaW0LzRPEr1TZy5eYvHiVLvfjFD/5QBv1CrNz81QNjeG+IOvJPfqGxqlm1skWapy9
      eJni9gKpip/LZ4eb9pJcX2ZnL0ukf5RMchXD4Wd8IMzqRgq3P4RDz5Mr6cxcvILPpX6tD4BG
      tci9+SUMxUV/yM3WTpaBsbPkk4vkigaX37hCeuVL9pUY58b7m/aysbrAbjZP38AYqY0VVE8X
      Q71+1rd28IX6MIopinWFCxcv4nY8v5d6Oc+9xVUUh4+I12J7b5+RqXPsri+wX7a49tYV1u99
      hO4fY2q457l9GHqNublZynWVxECItc00vQMJ9HyS7H6FsfERFpfWCISinJ0YeTS+59leUpur
      bKczhPtG2E+tUlO8TI/0snw/idPbxdmxOD99/1fc+gffxtlkTRq1MrPzC9RNJwMRL5s7WeIj
      kxR3VskVdaYmhlhYuk9XpJ+pxMCj7Z7tZWttiXQ2SzQ+xu7WCpYzQCLezdpmCk8wcrR7gGh8
      iFhPEMsq4fT0E/c6afjDJAb7URSTasPB5YvjpDbSTWuoTg9Tk+NoKOzmKly5epHC3i6JiWl8
      LgdGtUC2YqFZLx6N1z8wSqTbR62yT1d0hIgDtHCM4XgUlAa65WdmfIDd3VzTGprbz9T4KAoK
      2WKdq1fPk02lGZ88i8epUStmqZgOzMaLRyCeGR4jFPBQzGWIDU8SVAy80ThnYj0oVLHUEGP9
      PWQLlaY1nN4uJkeHUBQoVE2uXZthN7nHxOQULk2hlEuBy0u91vy8RXW4mJqcQFNgN1vi0tXL
      lLK7jI5P4fc42FlPMXX5Kppe4UWrGzszTG/Yj6EX8HYNEnOp0B1lZCCGoiisLq3QHe7hRcfe
      msvL1MQYqgJ7hRpXr14gn04zNjmN16WR2kwzc+0aZrXwwrWNDyXoCXqpFHL09I8R1iycPX0M
      9kVQUI42AFtrS5ieKMPxGHW9TEmvo+d22MhWmZlI0GjUqBSLqO7mV5HMepm782tcuHwO1WxQ
      q1YxUJi7e5ehyRkq+Qy1aonVjc0XzphcX5nH2T3AUF+Yaq1MWdcppTdJl2F6bJhGo0qlXEZz
      uprWMKr7zK5uc+HCNJahU6uUsTSN2bt3mTh3nkJmj3Jpn/ubWy9YFYvVxTkCsQQDvQHKlSpV
      XSebXKNgehgfGUTXK1SqFRyO5se2einD4maW82cnMBs61VIRNJV7swvMXLpALp1hP59lc3u7
      eSeNKnfmVrhw+QKaZVCrVmlYsDB7hzNjM8RCbgrFCvWG8cLhbZuriyj+Pob6o9TqJcq6TnUv
      yXa+wXTiDPlikZ3kOjt7+aY1zFqRe4sbXLw4g2Lo1KoVTFVl7u5dEtPnCPk0iqUqeuNFUbRY
      W5rD3TPMYF8XlWqFsq5TSG2QrTsYH+o52gCYpkUmtcFuTifa7cDRFUUzTOqlPKsbKYYHYmzs
      1hkdaH4i1DAaYDZYmF9mdGyUlZUNEokBLNNidXGR7vgIVy5d4e03L77wGNk0LXY21yjUnQSd
      Or5oP2rDpJLf4/5WloH+MLtlhXg00LSGrjegUWNxaY1EYpiltR0SozFMw2JpfoHekQkuX7rK
      9WszL1wXy7RI3l+m7ujGpefo6htAMSwKmRSbqQLxWJASXnpecHm5Xm9g6mWWVjcZHRlgZSPP
      6FAYyzBYmF1kYHKGy5ff4M2LzSf3GUYDxWywMLfEUGKUtZU1EokhTBPWlhZwxYao7qwRGxx+
      4RPHMC12k+tkSxYhH7gjMdSGQbWYZS2Z4cq1N7nx9tvEI93N17bRALPOwsIqibERlla2SIzG
      MU2L5YUFgoOj5DdWGBgZfeHampZFamOVsuXDS5lgLI5iGJRyaTbTJf4/7pr+9HB+qf0AAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      HHeXbZYvSgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
      268aWpo+dX2rF2isufzhGjeK+qrbVqc7vxN8m5g4/yGTtnoeaC6/11XZ4ia8//77pNPpTeX5
      fJ6XX375HtToxkiSJN03+wCR+g68sv1eV2OLz6Curu6GrhAAqdUEmsOL9ROHM7NIOmfidNz6
      gvbLcN8o0jaXD+89aqQtvhy6rpNKpTaUnT15hP7hSYrZVU6fOU++kGM1lWd6bIBLQxN3vY73
      jQBscX8xPj7O3//93zM4OHilzMwtkZMDLMxMMNx/CUnRKOaWGZ1aYnlpmZOHPyRzl+t5RQUq
      Fovk8/m7/PVbfFWw2Wyo6lWNOplMUl1dzY4dO66UDfUNEyoNkpydwhaoYq6vm2lXJRgWppeS
      BG028oDjLtb7yiLYNE1M8/aE062uruLxeG7Ls37byOfzCCGw2e4vL9FUKoXP57upO/T+/ftQ
      FBXTMBDCJJMr4HLaMUzQCzkECjaH7a6pJRsWwbIsX9mtu1VkWd4wGmzx+TEuR8/dr+03NjZG
      X1/fpvJUKoWqru8QK5ffzaOte5TJMmiqc9M9d4P7s5W3+I0lEolc2cu5lq6uLoqZFc5c6MXh
      L6GjufYe1G4zWwKwxRdGCIEhDOKrs5R7ohs0h3A4fF0BqKyspJhOUdexk4Bts6/QvWJLALb4
      QhimQW+8m1cu/hxVUfmLR/4T8jVa+/U6P0BDw7qf/91c4H4etgRgi89ECIEpzPWO3/NzZCSe
      3/YyzSVtKLJyr6t3S3xxARCCTHqVtaxOJBRAkiSyqRUyukzA60KStnx0vkrohk5vvJvXen+J
      JEk83/5NWkvbvzK/8/UFQAhSyQWOnzjFSlanqW07bY1VyJIECBLJVfLJOLNWL+Ueif7+YTRN
      QWtsxfMbpN9t8eUxTINL8Yv86uK/osgqz7W/REtJ+22zFP6mcF0BMIpZzl8cYM8DDyMLk4nh
      PoanHDTEIoCE22FhYdlFlVsB0ljtYUo8Jtl8EYcqYZomxWLx7r7JVwRd1xFC3LP2M0ydS3M9
      vNH3CpIk8VzbyzRGWpCQMAwDw1iPw8jpRUaXFmmOlN7Xs8F1BUCxODj04CFe++k/MpvIUNV6
      gCdjEWA9We35Cz2UV1aRy+URQiafmWU0q9AcqUBVlRtGBW3x2XyyIXm3288wdXriF3mt5xfI
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Happiest Last 10 Countries ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Happiest Top 10 Countries' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Hypothesis 1' width='192'>
      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
      LaaxpZmzf3iHkuIC0JlJLM6yogiTa6ohV/KizDHhXYvxsUceyOR3INxDt1wDJMJrvPHyL3l9
      KMCDnVWMjIyhUauI+ryMXr5A08nH6Tp8GJIfXBfI4fZz8sQxDlTmMLoYoriihsNdR1AmwxjN
      +SiScTQa7TXzsNls2Gw2AuE44YCXUDSBVhFh3uHDYLZy+HAXTVYli2tQWlXHseP3EVtbvepd
      6Dhw6DDt9SWsBhOMjY+jUqnxrnrIy89HjsfQaHSbL/+TT3+euHeBX77wEo7JXkra7+fosePE
      loYpa7+P4yfuw7U0A0RoP/IYH33gCKNjE6hVKnxeT6Y+e2EHuGUA1PpcHvvEp7FKy4zNOTGb
      82loaefEyaNUVNUyPTKI37NC5KrbA2iVEt5ghDG7j+oi/TXTk1U5nDx5AvtIP5Gr5tHV1UVX
      Vxd5eg1j/YPUdx7AZFhfYBOxGMlEnElnhBIjRKNRQn43SaWWm8nPt9K+/yBHD3Wi0Bo4efIk
      k8O9JDf+Pjw0RF1zOzlSlNyKBhwTg0RDfjQFVSxODBHyOVFqTUAOxcVmAMxmC22dBzjedTCt
      D1jY4eRbWFlZ2XgkyfPz87KUjMsDfT3ywrJbliRJXl6YlSemJuXfvvqmHF3zyv5QXJaSCXno
      cq/s8q7JsizLLpdr838pmZCH+ntl+7L7BvPYeK2UkAcu98put1P2rkXlF1/4udzT3SMHQlFZ
      lsPycz/8sdw3MCInJVmWk1HZ5fHLHpdLTsqyHPJ75LVoUo5HgnJPt012+4KylIjJA3098qJz
      dXM+a16XbLN1y6v+kCzLsuz3LMt9/cNyIinJPveyfHlwVE5Ksux1ueT4xjiJaEju6bbJztXA
      rT4yYZe546tCSNEg7/cNIksSHQePkJuzPXcPHhsfo6mxaeNZgrHxOZoa67dlXkL2EZdFEbKa
      aAgTspoIgJDVRACuYp+ZYHB06rrhiXCA1UD4HlQkbLft2XPdpfoGx2gsVNM3qSPomKGxrZ2J
      4WGKLUZ8inzGV+cprNyHa34ElbGIrgOp3YhN2LnEGuAq4cAqb3bPsjbRTVilYuDsqxirO5lx
      uJm8fAHJ2sRovw2ndw3HwvS9LlfIAHEU6CpjY+MU5qpwhmDF4aChppyRyRkMBeUUW/NxzY1T
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Hypothesis 2 &amp; 3' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Hypothesis 4 and Trend line' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Per Capita Income and Happiness Relationship' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Regions Happines Score' width='192'>
      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
      hg/7he0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 10' width='123'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trend line' width='192'>
      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
      PAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='World Happiness Map' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='World Happiness Report' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
