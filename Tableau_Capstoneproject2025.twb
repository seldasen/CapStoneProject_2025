<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Combined_Cleaned' inline='true' name='federated.1b23h6n1s7urv9188s8hf1c6z70u' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Combined_Cleaned' name='textscan.0vn7y48036khge1h5wj8r1fllpyt'>
            <connection class='textscan' directory='C:/Users/balla/OneDrive/Documents/CapStoneProject_2025/Data' filename='Combined_Cleaned.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0vn7y48036khge1h5wj8r1fllpyt' name='Combined_Cleaned.csv' table='[Combined_Cleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='Country_name' ordinal='0' />
            <column datatype='integer' name='Happiness_Rank' ordinal='1' />
            <column datatype='real' name='Happiness_score' ordinal='2' />
            <column datatype='real' name='Upperwhisker' ordinal='3' />
            <column datatype='real' name='Lowerwhisker' ordinal='4' />
            <column datatype='real' name='Economy_(GDP_per_Capita)_' ordinal='5' />
            <column datatype='real' name='Social_support' ordinal='6' />
            <column datatype='real' name='Healthy_life_expectancy' ordinal='7' />
            <column datatype='real' name='Freedom_to_make_life_choices' ordinal='8' />
            <column datatype='real' name='Generosity' ordinal='9' />
            <column datatype='real' name='Perceptions_of_corruption' ordinal='10' />
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='11' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Combined_Cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_name]</local-name>
            <parent-name>[Combined_Cleaned.csv]</parent-name>
            <remote-alias>Country_name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness_Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Happiness_Rank]</local-name>
            <parent-name>[Combined_Cleaned.csv]</parent-name>
            <remote-alias>Happiness_Rank</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness_score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Happiness_score]</local-name>
            <parent-name>[Combined_Cleaned.csv]</parent-name>
            <remote-alias>Happiness_score</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Upperwhisker</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Upperwhisker]</local-name>
            <parent-name>[Combined_Cleaned.csv]</parent-name>
            <remote-alias>Upperwhisker</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lowerwhisker</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lowerwhisker]</local-name>
            <parent-name>[Combined_Cleaned.csv]</parent-name>
            <remote-alias>Lowerwhisker</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Economy_(GDP_per_Capita)_</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Economy_(GDP_per_Capita)_]</local-name>
            <parent-name>[Combined_Cleaned.csv]</parent-name>
            <remote-alias>Economy_(GDP_per_Capita)_</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Social_support</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Social_support]</local-name>
            <parent-name>[Combined_Cleaned.csv]</parent-name>
            <remote-alias>Social_support</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Healthy_life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Healthy_life_expectancy]</local-name>
            <parent-name>[Combined_Cleaned.csv]</parent-name>
            <remote-alias>Healthy_life_expectancy</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Freedom_to_make_life_choices</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Freedom_to_make_life_choices]</local-name>
            <parent-name>[Combined_Cleaned.csv]</parent-name>
            <remote-alias>Freedom_to_make_life_choices</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generosity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Generosity]</local-name>
            <parent-name>[Combined_Cleaned.csv]</parent-name>
            <remote-alias>Generosity</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perceptions_of_corruption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Perceptions_of_corruption]</local-name>
            <parent-name>[Combined_Cleaned.csv]</parent-name>
            <remote-alias>Perceptions_of_corruption</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Combined_Cleaned.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>11</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Region' datatype='string' name='[Calculation_1024568971831394304]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Country_name] IN (&#13;&#10;    &apos;Afghanistan&apos;, &apos;Armenia&apos;, &apos;Azerbaijan&apos;, &apos;Bahrain&apos;, &apos;Bangladesh&apos;, &apos;Bhutan&apos;, &apos;Brunei&apos;, &apos;Cambodia&apos;, &#13;&#10;    &apos;China&apos;, &apos;Cyprus&apos;, &apos;Georgia&apos;, &apos;India&apos;, &apos;Indonesia&apos;, &apos;Iran&apos;, &apos;Iraq&apos;, &apos;Israel&apos;, &apos;Japan&apos;, &apos;Jordan&apos;, &#13;&#10;    &apos;Kazakhstan&apos;, &apos;Kuwait&apos;, &apos;Kyrgyzstan&apos;, &apos;Laos&apos;, &apos;Lebanon&apos;, &apos;Malaysia&apos;, &apos;Maldives&apos;, &apos;Mongolia&apos;, &#13;&#10;    &apos;Myanmar&apos;, &apos;Nepal&apos;, &apos;North Korea&apos;, &apos;Oman&apos;, &apos;Pakistan&apos;, &apos;Palestine&apos;, &apos;Philippines&apos;, &apos;Qatar&apos;, &apos;Saudi Arabia&apos;, &#13;&#10;    &apos;Singapore&apos;, &apos;South Korea&apos;, &apos;Sri Lanka&apos;, &apos;Syria&apos;, &apos;Tajikistan&apos;, &apos;Thailand&apos;, &apos;Timor-Leste&apos;, &apos;Turkey&apos;, &#13;&#10;    &apos;Turkmenistan&apos;, &apos;United Arab Emirates&apos;, &apos;Uzbekistan&apos;, &apos;Vietnam&apos;, &apos;Yemen&apos;&#13;&#10;) THEN &apos;Asia&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Albania&apos;, &apos;Andorra&apos;, &apos;Austria&apos;, &apos;Belarus&apos;, &apos;Belgium&apos;, &apos;Bosnia and Herzegovina&apos;, &apos;Bulgaria&apos;, &apos;Croatia&apos;, &#13;&#10;    &apos;Czech Republic&apos;, &apos;Denmark&apos;, &apos;Estonia&apos;, &apos;Finland&apos;, &apos;France&apos;, &apos;Germany&apos;, &apos;Greece&apos;, &apos;Hungary&apos;, &apos;Iceland&apos;, &#13;&#10;    &apos;Ireland&apos;, &apos;Italy&apos;, &apos;Kosovo&apos;, &apos;Latvia&apos;, &apos;Liechtenstein&apos;, &apos;Lithuania&apos;, &apos;Luxembourg&apos;, &apos;Malta&apos;, &apos;Moldova&apos;, &#13;&#10;    &apos;Monaco&apos;, &apos;Montenegro&apos;, &apos;Netherlands&apos;, &apos;North Macedonia&apos;, &apos;Norway&apos;, &apos;Poland&apos;, &apos;Portugal&apos;, &apos;Romania&apos;, &#13;&#10;    &apos;Russia&apos;, &apos;San Marino&apos;, &apos;Serbia&apos;, &apos;Slovakia&apos;, &apos;Slovenia&apos;, &apos;Spain&apos;, &apos;Sweden&apos;, &apos;Switzerland&apos;, &apos;Ukraine&apos;, &apos;United Kingdom&apos;, &apos;Vatican City&apos;&#13;&#10;) THEN &apos;Europe&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Antigua and Barbuda&apos;, &apos;Argentina&apos;, &apos;Bahamas&apos;, &apos;Barbados&apos;, &apos;Belize&apos;, &apos;Bolivia&apos;, &apos;Brazil&apos;, &apos;Canada&apos;, &apos;Chile&apos;, &#13;&#10;    &apos;Colombia&apos;, &apos;Costa Rica&apos;, &apos;Cuba&apos;, &apos;Dominica&apos;, &apos;Dominican Republic&apos;, &apos;Ecuador&apos;, &apos;El Salvador&apos;, &apos;Grenada&apos;, &apos;Guatemala&apos;, &#13;&#10;    &apos;Guyana&apos;, &apos;Haiti&apos;, &apos;Honduras&apos;, &apos;Jamaica&apos;, &apos;Mexico&apos;, &apos;Nicaragua&apos;, &apos;Panama&apos;, &apos;Paraguay&apos;, &apos;Peru&apos;, &apos;Saint Kitts and Nevis&apos;, &#13;&#10;    &apos;Saint Lucia&apos;, &apos;Saint Vincent and the Grenadines&apos;, &apos;Suriname&apos;, &apos;Trinidad and Tobago&apos;, &apos;United States&apos;, &apos;Uruguay&apos;, &apos;Venezuela&apos;&#13;&#10;) THEN &apos;Americas&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Australia&apos;, &apos;New Zealand&apos;, &apos;Fiji&apos;, &apos;Kiribati&apos;, &apos;Marshall Islands&apos;, &apos;Micronesia&apos;, &apos;Nauru&apos;, &apos;Palau&apos;, &#13;&#10;    &apos;Papua New Guinea&apos;, &apos;Samoa&apos;, &apos;Solomon Islands&apos;, &apos;Tonga&apos;, &apos;Tuvalu&apos;, &apos;Vanuatu&apos;&#13;&#10;) THEN &apos;Pacific&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Bahrain&apos;, &apos;Comoros&apos;, &apos;Madagascar&apos;, &apos;Maldives&apos;, &apos;Mauritius&apos;, &apos;Seychelles&apos;, &apos;Taiwan&apos;, &apos;Hong Kong&apos;&#13;&#10;) THEN &apos;Island&apos;&#13;&#10;&#13;&#10;ELSE &apos;Africa&apos;&#13;&#10;END' />
      </column>
      <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Economy (GDP per Capita)' datatype='real' name='[Economy_(GDP_per_Capita)_]' role='measure' type='quantitative' />
      <column caption='Freedom to make life choices' datatype='real' name='[Freedom_to_make_life_choices]' role='measure' type='quantitative' />
      <column caption='Happiness Rank' datatype='integer' name='[Happiness_Rank]' role='measure' type='quantitative' />
      <column caption='Happiness score' datatype='real' name='[Happiness_score]' role='measure' type='quantitative' />
      <column caption='Healthy life expectancy' datatype='real' name='[Healthy_life_expectancy]' role='measure' type='quantitative' />
      <column caption='Perceptions of corruption' datatype='real' name='[Perceptions_of_corruption]' role='measure' type='quantitative' />
      <column caption='Social support' datatype='real' name='[Social_support]' role='measure' type='quantitative' />
      <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Combined_Cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]' role='measure' type='quantitative' />
      <column-instance column='[Country_name]' derivation='Attribute' name='[attr:Country_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Economy_(GDP_per_Capita)_]' derivation='Avg' name='[avg:Economy_(GDP_per_Capita)_:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness_score]' derivation='Avg' name='[avg:Happiness_score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Economy_(GDP_per_Capita)_]' derivation='CountD' name='[ctd:Economy_(GDP_per_Capita)_:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness_score]' derivation='CountD' name='[ctd:Happiness_score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country_name]' derivation='Max' name='[max:Country_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country_name]' derivation='Min' name='[min:Country_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1024568971831394304]' derivation='None' name='[none:Calculation_1024568971831394304:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Happiness_score]' derivation='None' name='[none:Happiness_score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/balla/AppData/Local/Temp/TableauTemp/#TableauTemp_0067cxo0ir2hjd14fgsom1y9gfil.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='03/14/2025 11:01:36 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country_name</remote-alias>
              <ordinal>0</ordinal>
              <family>Combined_Cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>180</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Happiness_Rank</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Happiness_Rank]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Happiness_Rank</remote-alias>
              <ordinal>1</ordinal>
              <family>Combined_Cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>153</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Happiness_score</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Happiness_score]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Happiness_score</remote-alias>
              <ordinal>2</ordinal>
              <family>Combined_Cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>645</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Upperwhisker</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Upperwhisker]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Upperwhisker</remote-alias>
              <ordinal>3</ordinal>
              <family>Combined_Cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>642</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Lowerwhisker</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Lowerwhisker]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Lowerwhisker</remote-alias>
              <ordinal>4</ordinal>
              <family>Combined_Cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>635</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Economy_(GDP_per_Capita)_</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Economy_(GDP_per_Capita)_]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Economy_(GDP_per_Capita)_</remote-alias>
              <ordinal>5</ordinal>
              <family>Combined_Cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>552</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Social_support</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Social_support]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Social_support</remote-alias>
              <ordinal>6</ordinal>
              <family>Combined_Cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>505</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Healthy_life_expectancy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Healthy_life_expectancy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Healthy_life_expectancy</remote-alias>
              <ordinal>7</ordinal>
              <family>Combined_Cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>427</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Freedom_to_make_life_choices</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Freedom_to_make_life_choices]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Freedom_to_make_life_choices</remote-alias>
              <ordinal>8</ordinal>
              <family>Combined_Cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>373</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Generosity</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Generosity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Generosity</remote-alias>
              <ordinal>9</ordinal>
              <family>Combined_Cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>279</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Perceptions_of_corruption</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Perceptions_of_corruption]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Perceptions_of_corruption</remote-alias>
              <ordinal>10</ordinal>
              <family>Combined_Cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>295</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>11</ordinal>
              <family>Combined_Cleaned.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='1000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[max:Country_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan*&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chad*&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Cyprus*&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belarus*&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;State of Palestine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eswatini, Kingdom of*&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lesotho*&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palestinian Territories*&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hong Kong S.A.R. of China&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Botswana*&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala*&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niger*&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Luxembourg*&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Taiwan Province of China&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania*&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkmenistan*&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Comoros*&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Libya*&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yemen*&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar*&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda*&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gambia*&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberia*&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kuwait*&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Cyprus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[min:Country_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan*&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chad*&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Cyprus*&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belarus*&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;State of Palestine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eswatini, Kingdom of*&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lesotho*&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palestinian Territories*&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hong Kong S.A.R. of China&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Botswana*&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala*&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niger*&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Luxembourg*&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Taiwan Province of China&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania*&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkmenistan*&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Comoros*&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Libya*&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yemen*&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar*&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda*&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gambia*&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberia*&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kuwait*&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Cyprus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Country_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan*&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chad*&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Cyprus*&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belarus*&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;State of Palestine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eswatini, Kingdom of*&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lesotho*&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palestinian Territories*&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hong Kong S.A.R. of China&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Botswana*&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala*&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niger*&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Luxembourg*&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Taiwan Province of China&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania*&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkmenistan*&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Comoros*&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Libya*&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yemen*&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar*&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda*&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gambia*&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberia*&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kuwait*&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Cyprus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Economy_(GDP_per_Capita)_:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1b23h6n1s7urv9188s8hf1c6z70u].[ctd:Economy_(GDP_per_Capita)_:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1b23h6n1s7urv9188s8hf1c6z70u].[ctd:Happiness_score:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Happiness_score:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[tyr:Year:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>#2020-01-01 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2021-01-01 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2024-01-01 00:00:00#</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country_name:nk]' palette='green_10_0' type='palette'>
            <map to='#24693d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#398949'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan*&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chad*&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#519c51'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Cyprus*&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#59a253'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#67af5c'>
              <bucket>&quot;Luxembourg*&quot;</bucket>
            </map>
            <map to='#6eb663'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belarus*&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;State of Palestine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#7dc370'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#85ca77'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eswatini, Kingdom of*&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lesotho*&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palestinian Territories*&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hong Kong S.A.R. of China&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#98d687'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Botswana*&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala*&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niger*&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Taiwan Province of China&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania*&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkmenistan*&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Comoros*&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Libya*&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yemen*&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar*&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda*&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gambia*&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberia*&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kuwait*&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Cyprus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1024568971831394304:nk]' palette='sf_color_safe' type='palette'>
            <map to='#006699'>
              <bucket>&quot;Island&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#529ee0'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#d9a6c2'>
              <bucket>&quot;Americas&quot;</bucket>
            </map>
            <map to='#f0e442'>
              <bucket>&quot;Pacific&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Country_name' />
        <field-sort-custom-order field='Calculation_1024568971831394304' />
        <field-sort-custom-order field='Happiness_Rank' />
        <field-sort-custom-order field='Happiness_score' />
        <field-sort-custom-order field='Upperwhisker' />
        <field-sort-custom-order field='Lowerwhisker' />
        <field-sort-custom-order field='Economy_(GDP_per_Capita)_' />
        <field-sort-custom-order field='Social_support' />
        <field-sort-custom-order field='Healthy_life_expectancy' />
        <field-sort-custom-order field='Freedom_to_make_life_choices' />
        <field-sort-custom-order field='Generosity' />
        <field-sort-custom-order field='Perceptions_of_corruption' />
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <object-graph>
        <objects>
          <object caption='Combined_Cleaned.csv' id='Combined_Cleaned.csv_7CA1AB96470E4620A395D19ACB26FA16'>
            <properties context=''>
              <relation connection='textscan.0vn7y48036khge1h5wj8r1fllpyt' name='Combined_Cleaned.csv' table='[Combined_Cleaned#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='string' name='Country_name' ordinal='0' />
                  <column datatype='integer' name='Happiness_Rank' ordinal='1' />
                  <column datatype='real' name='Happiness_score' ordinal='2' />
                  <column datatype='real' name='Upperwhisker' ordinal='3' />
                  <column datatype='real' name='Lowerwhisker' ordinal='4' />
                  <column datatype='real' name='Economy_(GDP_per_Capita)_' ordinal='5' />
                  <column datatype='real' name='Social_support' ordinal='6' />
                  <column datatype='real' name='Healthy_life_expectancy' ordinal='7' />
                  <column datatype='real' name='Freedom_to_make_life_choices' ordinal='8' />
                  <column datatype='real' name='Generosity' ordinal='9' />
                  <column datatype='real' name='Perceptions_of_corruption' ordinal='10' />
                  <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='11' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_F46C87B245014271BECACD5FC34A0FD7]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet=' Social Support and Happiness Relationship' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Region' />
        <param name='target' value=' Social Support and Happiness Relationship' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name=' Social Support and Happiness Relationship'>
      <table>
        <view>
          <datasources>
            <datasource caption='Combined_Cleaned' name='federated.1b23h6n1s7urv9188s8hf1c6z70u' />
          </datasources>
          <datasource-dependencies datasource='federated.1b23h6n1s7urv9188s8hf1c6z70u'>
            <column caption='Region' datatype='string' name='[Calculation_1024568971831394304]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Country_name] IN (&#13;&#10;    &apos;Afghanistan&apos;, &apos;Armenia&apos;, &apos;Azerbaijan&apos;, &apos;Bahrain&apos;, &apos;Bangladesh&apos;, &apos;Bhutan&apos;, &apos;Brunei&apos;, &apos;Cambodia&apos;, &#13;&#10;    &apos;China&apos;, &apos;Cyprus&apos;, &apos;Georgia&apos;, &apos;India&apos;, &apos;Indonesia&apos;, &apos;Iran&apos;, &apos;Iraq&apos;, &apos;Israel&apos;, &apos;Japan&apos;, &apos;Jordan&apos;, &#13;&#10;    &apos;Kazakhstan&apos;, &apos;Kuwait&apos;, &apos;Kyrgyzstan&apos;, &apos;Laos&apos;, &apos;Lebanon&apos;, &apos;Malaysia&apos;, &apos;Maldives&apos;, &apos;Mongolia&apos;, &#13;&#10;    &apos;Myanmar&apos;, &apos;Nepal&apos;, &apos;North Korea&apos;, &apos;Oman&apos;, &apos;Pakistan&apos;, &apos;Palestine&apos;, &apos;Philippines&apos;, &apos;Qatar&apos;, &apos;Saudi Arabia&apos;, &#13;&#10;    &apos;Singapore&apos;, &apos;South Korea&apos;, &apos;Sri Lanka&apos;, &apos;Syria&apos;, &apos;Tajikistan&apos;, &apos;Thailand&apos;, &apos;Timor-Leste&apos;, &apos;Turkey&apos;, &#13;&#10;    &apos;Turkmenistan&apos;, &apos;United Arab Emirates&apos;, &apos;Uzbekistan&apos;, &apos;Vietnam&apos;, &apos;Yemen&apos;&#13;&#10;) THEN &apos;Asia&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Albania&apos;, &apos;Andorra&apos;, &apos;Austria&apos;, &apos;Belarus&apos;, &apos;Belgium&apos;, &apos;Bosnia and Herzegovina&apos;, &apos;Bulgaria&apos;, &apos;Croatia&apos;, &#13;&#10;    &apos;Czech Republic&apos;, &apos;Denmark&apos;, &apos;Estonia&apos;, &apos;Finland&apos;, &apos;France&apos;, &apos;Germany&apos;, &apos;Greece&apos;, &apos;Hungary&apos;, &apos;Iceland&apos;, &#13;&#10;    &apos;Ireland&apos;, &apos;Italy&apos;, &apos;Kosovo&apos;, &apos;Latvia&apos;, &apos;Liechtenstein&apos;, &apos;Lithuania&apos;, &apos;Luxembourg&apos;, &apos;Malta&apos;, &apos;Moldova&apos;, &#13;&#10;    &apos;Monaco&apos;, &apos;Montenegro&apos;, &apos;Netherlands&apos;, &apos;North Macedonia&apos;, &apos;Norway&apos;, &apos;Poland&apos;, &apos;Portugal&apos;, &apos;Romania&apos;, &#13;&#10;    &apos;Russia&apos;, &apos;San Marino&apos;, &apos;Serbia&apos;, &apos;Slovakia&apos;, &apos;Slovenia&apos;, &apos;Spain&apos;, &apos;Sweden&apos;, &apos;Switzerland&apos;, &apos;Ukraine&apos;, &apos;United Kingdom&apos;, &apos;Vatican City&apos;&#13;&#10;) THEN &apos;Europe&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Antigua and Barbuda&apos;, &apos;Argentina&apos;, &apos;Bahamas&apos;, &apos;Barbados&apos;, &apos;Belize&apos;, &apos;Bolivia&apos;, &apos;Brazil&apos;, &apos;Canada&apos;, &apos;Chile&apos;, &#13;&#10;    &apos;Colombia&apos;, &apos;Costa Rica&apos;, &apos;Cuba&apos;, &apos;Dominica&apos;, &apos;Dominican Republic&apos;, &apos;Ecuador&apos;, &apos;El Salvador&apos;, &apos;Grenada&apos;, &apos;Guatemala&apos;, &#13;&#10;    &apos;Guyana&apos;, &apos;Haiti&apos;, &apos;Honduras&apos;, &apos;Jamaica&apos;, &apos;Mexico&apos;, &apos;Nicaragua&apos;, &apos;Panama&apos;, &apos;Paraguay&apos;, &apos;Peru&apos;, &apos;Saint Kitts and Nevis&apos;, &#13;&#10;    &apos;Saint Lucia&apos;, &apos;Saint Vincent and the Grenadines&apos;, &apos;Suriname&apos;, &apos;Trinidad and Tobago&apos;, &apos;United States&apos;, &apos;Uruguay&apos;, &apos;Venezuela&apos;&#13;&#10;) THEN &apos;Americas&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Australia&apos;, &apos;New Zealand&apos;, &apos;Fiji&apos;, &apos;Kiribati&apos;, &apos;Marshall Islands&apos;, &apos;Micronesia&apos;, &apos;Nauru&apos;, &apos;Palau&apos;, &#13;&#10;    &apos;Papua New Guinea&apos;, &apos;Samoa&apos;, &apos;Solomon Islands&apos;, &apos;Tonga&apos;, &apos;Tuvalu&apos;, &apos;Vanuatu&apos;&#13;&#10;) THEN &apos;Pacific&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Bahrain&apos;, &apos;Comoros&apos;, &apos;Madagascar&apos;, &apos;Maldives&apos;, &apos;Mauritius&apos;, &apos;Seychelles&apos;, &apos;Taiwan&apos;, &apos;Hong Kong&apos;&#13;&#10;) THEN &apos;Island&apos;&#13;&#10;&#13;&#10;ELSE &apos;Africa&apos;&#13;&#10;END' />
            </column>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Economy (GDP per Capita)' datatype='real' name='[Economy_(GDP_per_Capita)_]' role='measure' type='quantitative' />
            <column caption='Happiness score' datatype='real' name='[Happiness_score]' role='measure' type='quantitative' />
            <column caption='Social support' datatype='real' name='[Social_support]' role='measure' type='quantitative' />
            <column-instance column='[Happiness_score]' derivation='Avg' name='[avg:Happiness_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Social_support]' derivation='Avg' name='[avg:Social_support:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1024568971831394304]' derivation='None' name='[none:Calculation_1024568971831394304:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Economy_(GDP_per_Capita)_]' derivation='Sum' name='[sum:Economy_(GDP_per_Capita)_:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]' />
              <size column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[sum:Economy_(GDP_per_Capita)_:qk]' />
              <lod column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]</rows>
        <cols>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Social_support:qk]</cols>
      </table>
      <simple-id uuid='{E6D3CB87-2A7E-4EC9-B348-9251F7ACF4AF}' />
    </worksheet>
    <worksheet name='Comparison of Happiness Scores Between 2020 and 2024'>
      <table>
        <view>
          <datasources>
            <datasource caption='Combined_Cleaned' name='federated.1b23h6n1s7urv9188s8hf1c6z70u' />
          </datasources>
          <datasource-dependencies datasource='federated.1b23h6n1s7urv9188s8hf1c6z70u'>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Happiness score' datatype='real' name='[Happiness_score]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Happiness_score]' derivation='Avg' name='[avg:Happiness_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness_score]' derivation='None' name='[none:Happiness_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Happiness_score:qk]' included-values='all' />
          <filter class='categorical' column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[yr:Year:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Year:ok]' member='2020' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2024' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[yr:Year:ok]</column>
            <column>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Happiness_score:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]</rows>
        <cols>([federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk] / [federated.1b23h6n1s7urv9188s8hf1c6z70u].[tyr:Year:ok])</cols>
      </table>
      <simple-id uuid='{74080D4B-ABDB-4B79-888C-C4034B4CDDC7}' />
    </worksheet>
    <worksheet name='Happiest Last 10 Countries '>
      <table>
        <view>
          <datasources>
            <datasource caption='Combined_Cleaned' name='federated.1b23h6n1s7urv9188s8hf1c6z70u' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1b23h6n1s7urv9188s8hf1c6z70u'>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Happiness score' datatype='real' name='[Happiness_score]' role='measure' type='quantitative' />
            <column-instance column='[Happiness_score]' derivation='Avg' name='[avg:Happiness_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Happiness_score])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[Longitude (generated)]' field-type='quantitative' max='25336742.263567716' min='-22839376.859228246' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[Latitude (generated)]' field-type='quantitative' max='16091522.565067235' min='-9738076.829782676' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' />
              <color column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]' />
              <geometry column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[Latitude (generated)]</rows>
        <cols>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9B5456CD-B84A-4E8E-8F63-3568F1A02555}' />
    </worksheet>
    <worksheet name='Happiest Top 10 Countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='Combined_Cleaned' name='federated.1b23h6n1s7urv9188s8hf1c6z70u' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1b23h6n1s7urv9188s8hf1c6z70u'>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Happiness score' datatype='real' name='[Happiness_score]' role='measure' type='quantitative' />
            <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness_score]' derivation='Sum' name='[sum:Happiness_score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Happiness_score])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[Longitude (generated)]' field-type='quantitative' max='38571633.150156133' min='-23746070.605882563' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[Latitude (generated)]' field-type='quantitative' max='19164232.655825906' min='-14247369.451903107' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' />
              <color column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[sum:Happiness_score:qk]' />
              <geometry column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[Latitude (generated)]</rows>
        <cols>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3D19EBC5-205A-4C46-937E-A5A1D37D1753}' />
    </worksheet>
    <worksheet name='Per Capita Income and Happiness Relationship'>
      <table>
        <view>
          <datasources>
            <datasource caption='Combined_Cleaned' name='federated.1b23h6n1s7urv9188s8hf1c6z70u' />
          </datasources>
          <datasource-dependencies datasource='federated.1b23h6n1s7urv9188s8hf1c6z70u'>
            <column caption='Region' datatype='string' name='[Calculation_1024568971831394304]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Country_name] IN (&#13;&#10;    &apos;Afghanistan&apos;, &apos;Armenia&apos;, &apos;Azerbaijan&apos;, &apos;Bahrain&apos;, &apos;Bangladesh&apos;, &apos;Bhutan&apos;, &apos;Brunei&apos;, &apos;Cambodia&apos;, &#13;&#10;    &apos;China&apos;, &apos;Cyprus&apos;, &apos;Georgia&apos;, &apos;India&apos;, &apos;Indonesia&apos;, &apos;Iran&apos;, &apos;Iraq&apos;, &apos;Israel&apos;, &apos;Japan&apos;, &apos;Jordan&apos;, &#13;&#10;    &apos;Kazakhstan&apos;, &apos;Kuwait&apos;, &apos;Kyrgyzstan&apos;, &apos;Laos&apos;, &apos;Lebanon&apos;, &apos;Malaysia&apos;, &apos;Maldives&apos;, &apos;Mongolia&apos;, &#13;&#10;    &apos;Myanmar&apos;, &apos;Nepal&apos;, &apos;North Korea&apos;, &apos;Oman&apos;, &apos;Pakistan&apos;, &apos;Palestine&apos;, &apos;Philippines&apos;, &apos;Qatar&apos;, &apos;Saudi Arabia&apos;, &#13;&#10;    &apos;Singapore&apos;, &apos;South Korea&apos;, &apos;Sri Lanka&apos;, &apos;Syria&apos;, &apos;Tajikistan&apos;, &apos;Thailand&apos;, &apos;Timor-Leste&apos;, &apos;Turkey&apos;, &#13;&#10;    &apos;Turkmenistan&apos;, &apos;United Arab Emirates&apos;, &apos;Uzbekistan&apos;, &apos;Vietnam&apos;, &apos;Yemen&apos;&#13;&#10;) THEN &apos;Asia&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Albania&apos;, &apos;Andorra&apos;, &apos;Austria&apos;, &apos;Belarus&apos;, &apos;Belgium&apos;, &apos;Bosnia and Herzegovina&apos;, &apos;Bulgaria&apos;, &apos;Croatia&apos;, &#13;&#10;    &apos;Czech Republic&apos;, &apos;Denmark&apos;, &apos;Estonia&apos;, &apos;Finland&apos;, &apos;France&apos;, &apos;Germany&apos;, &apos;Greece&apos;, &apos;Hungary&apos;, &apos;Iceland&apos;, &#13;&#10;    &apos;Ireland&apos;, &apos;Italy&apos;, &apos;Kosovo&apos;, &apos;Latvia&apos;, &apos;Liechtenstein&apos;, &apos;Lithuania&apos;, &apos;Luxembourg&apos;, &apos;Malta&apos;, &apos;Moldova&apos;, &#13;&#10;    &apos;Monaco&apos;, &apos;Montenegro&apos;, &apos;Netherlands&apos;, &apos;North Macedonia&apos;, &apos;Norway&apos;, &apos;Poland&apos;, &apos;Portugal&apos;, &apos;Romania&apos;, &#13;&#10;    &apos;Russia&apos;, &apos;San Marino&apos;, &apos;Serbia&apos;, &apos;Slovakia&apos;, &apos;Slovenia&apos;, &apos;Spain&apos;, &apos;Sweden&apos;, &apos;Switzerland&apos;, &apos;Ukraine&apos;, &apos;United Kingdom&apos;, &apos;Vatican City&apos;&#13;&#10;) THEN &apos;Europe&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Antigua and Barbuda&apos;, &apos;Argentina&apos;, &apos;Bahamas&apos;, &apos;Barbados&apos;, &apos;Belize&apos;, &apos;Bolivia&apos;, &apos;Brazil&apos;, &apos;Canada&apos;, &apos;Chile&apos;, &#13;&#10;    &apos;Colombia&apos;, &apos;Costa Rica&apos;, &apos;Cuba&apos;, &apos;Dominica&apos;, &apos;Dominican Republic&apos;, &apos;Ecuador&apos;, &apos;El Salvador&apos;, &apos;Grenada&apos;, &apos;Guatemala&apos;, &#13;&#10;    &apos;Guyana&apos;, &apos;Haiti&apos;, &apos;Honduras&apos;, &apos;Jamaica&apos;, &apos;Mexico&apos;, &apos;Nicaragua&apos;, &apos;Panama&apos;, &apos;Paraguay&apos;, &apos;Peru&apos;, &apos;Saint Kitts and Nevis&apos;, &#13;&#10;    &apos;Saint Lucia&apos;, &apos;Saint Vincent and the Grenadines&apos;, &apos;Suriname&apos;, &apos;Trinidad and Tobago&apos;, &apos;United States&apos;, &apos;Uruguay&apos;, &apos;Venezuela&apos;&#13;&#10;) THEN &apos;Americas&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Australia&apos;, &apos;New Zealand&apos;, &apos;Fiji&apos;, &apos;Kiribati&apos;, &apos;Marshall Islands&apos;, &apos;Micronesia&apos;, &apos;Nauru&apos;, &apos;Palau&apos;, &#13;&#10;    &apos;Papua New Guinea&apos;, &apos;Samoa&apos;, &apos;Solomon Islands&apos;, &apos;Tonga&apos;, &apos;Tuvalu&apos;, &apos;Vanuatu&apos;&#13;&#10;) THEN &apos;Pacific&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Bahrain&apos;, &apos;Comoros&apos;, &apos;Madagascar&apos;, &apos;Maldives&apos;, &apos;Mauritius&apos;, &apos;Seychelles&apos;, &apos;Taiwan&apos;, &apos;Hong Kong&apos;&#13;&#10;) THEN &apos;Island&apos;&#13;&#10;&#13;&#10;ELSE &apos;Africa&apos;&#13;&#10;END' />
            </column>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Economy (GDP per Capita)' datatype='real' name='[Economy_(GDP_per_Capita)_]' role='measure' type='quantitative' />
            <column caption='Happiness score' datatype='real' name='[Happiness_score]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Economy_(GDP_per_Capita)_]' derivation='Avg' name='[avg:Economy_(GDP_per_Capita)_:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Happiness_score]' derivation='Avg' name='[avg:Happiness_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1024568971831394304]' derivation='None' name='[none:Calculation_1024568971831394304:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]'>
            <groupfilter function='member' level='[none:Calculation_1024568971831394304:nk]' member='&quot;Asia&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]'>
            <groupfilter function='level-members' level='[none:Country_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[yr:Year:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Year:ok]' member='2020' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2023' />
              <groupfilter function='member' level='[yr:Year:ok]' member='2024' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[yr:Year:ok]</column>
            <column>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]</column>
            <column>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' />
              <lod column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' />
              <lod column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Year:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' />
              <lod column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Economy_(GDP_per_Capita)_:qk]</rows>
        <cols>([federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk] + [federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Year:qk])</cols>
      </table>
      <simple-id uuid='{A026C2A8-E0DE-40F4-BE2E-705CB2BDE522}' />
    </worksheet>
    <worksheet name='Regions avg. happines score'>
      <table>
        <view>
          <datasources>
            <datasource caption='Combined_Cleaned' name='federated.1b23h6n1s7urv9188s8hf1c6z70u' />
          </datasources>
          <datasource-dependencies datasource='federated.1b23h6n1s7urv9188s8hf1c6z70u'>
            <column caption='Region' datatype='string' name='[Calculation_1024568971831394304]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Country_name] IN (&#13;&#10;    &apos;Afghanistan&apos;, &apos;Armenia&apos;, &apos;Azerbaijan&apos;, &apos;Bahrain&apos;, &apos;Bangladesh&apos;, &apos;Bhutan&apos;, &apos;Brunei&apos;, &apos;Cambodia&apos;, &#13;&#10;    &apos;China&apos;, &apos;Cyprus&apos;, &apos;Georgia&apos;, &apos;India&apos;, &apos;Indonesia&apos;, &apos;Iran&apos;, &apos;Iraq&apos;, &apos;Israel&apos;, &apos;Japan&apos;, &apos;Jordan&apos;, &#13;&#10;    &apos;Kazakhstan&apos;, &apos;Kuwait&apos;, &apos;Kyrgyzstan&apos;, &apos;Laos&apos;, &apos;Lebanon&apos;, &apos;Malaysia&apos;, &apos;Maldives&apos;, &apos;Mongolia&apos;, &#13;&#10;    &apos;Myanmar&apos;, &apos;Nepal&apos;, &apos;North Korea&apos;, &apos;Oman&apos;, &apos;Pakistan&apos;, &apos;Palestine&apos;, &apos;Philippines&apos;, &apos;Qatar&apos;, &apos;Saudi Arabia&apos;, &#13;&#10;    &apos;Singapore&apos;, &apos;South Korea&apos;, &apos;Sri Lanka&apos;, &apos;Syria&apos;, &apos;Tajikistan&apos;, &apos;Thailand&apos;, &apos;Timor-Leste&apos;, &apos;Turkey&apos;, &#13;&#10;    &apos;Turkmenistan&apos;, &apos;United Arab Emirates&apos;, &apos;Uzbekistan&apos;, &apos;Vietnam&apos;, &apos;Yemen&apos;&#13;&#10;) THEN &apos;Asia&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Albania&apos;, &apos;Andorra&apos;, &apos;Austria&apos;, &apos;Belarus&apos;, &apos;Belgium&apos;, &apos;Bosnia and Herzegovina&apos;, &apos;Bulgaria&apos;, &apos;Croatia&apos;, &#13;&#10;    &apos;Czech Republic&apos;, &apos;Denmark&apos;, &apos;Estonia&apos;, &apos;Finland&apos;, &apos;France&apos;, &apos;Germany&apos;, &apos;Greece&apos;, &apos;Hungary&apos;, &apos;Iceland&apos;, &#13;&#10;    &apos;Ireland&apos;, &apos;Italy&apos;, &apos;Kosovo&apos;, &apos;Latvia&apos;, &apos;Liechtenstein&apos;, &apos;Lithuania&apos;, &apos;Luxembourg&apos;, &apos;Malta&apos;, &apos;Moldova&apos;, &#13;&#10;    &apos;Monaco&apos;, &apos;Montenegro&apos;, &apos;Netherlands&apos;, &apos;North Macedonia&apos;, &apos;Norway&apos;, &apos;Poland&apos;, &apos;Portugal&apos;, &apos;Romania&apos;, &#13;&#10;    &apos;Russia&apos;, &apos;San Marino&apos;, &apos;Serbia&apos;, &apos;Slovakia&apos;, &apos;Slovenia&apos;, &apos;Spain&apos;, &apos;Sweden&apos;, &apos;Switzerland&apos;, &apos;Ukraine&apos;, &apos;United Kingdom&apos;, &apos;Vatican City&apos;&#13;&#10;) THEN &apos;Europe&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Antigua and Barbuda&apos;, &apos;Argentina&apos;, &apos;Bahamas&apos;, &apos;Barbados&apos;, &apos;Belize&apos;, &apos;Bolivia&apos;, &apos;Brazil&apos;, &apos;Canada&apos;, &apos;Chile&apos;, &#13;&#10;    &apos;Colombia&apos;, &apos;Costa Rica&apos;, &apos;Cuba&apos;, &apos;Dominica&apos;, &apos;Dominican Republic&apos;, &apos;Ecuador&apos;, &apos;El Salvador&apos;, &apos;Grenada&apos;, &apos;Guatemala&apos;, &#13;&#10;    &apos;Guyana&apos;, &apos;Haiti&apos;, &apos;Honduras&apos;, &apos;Jamaica&apos;, &apos;Mexico&apos;, &apos;Nicaragua&apos;, &apos;Panama&apos;, &apos;Paraguay&apos;, &apos;Peru&apos;, &apos;Saint Kitts and Nevis&apos;, &#13;&#10;    &apos;Saint Lucia&apos;, &apos;Saint Vincent and the Grenadines&apos;, &apos;Suriname&apos;, &apos;Trinidad and Tobago&apos;, &apos;United States&apos;, &apos;Uruguay&apos;, &apos;Venezuela&apos;&#13;&#10;) THEN &apos;Americas&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Australia&apos;, &apos;New Zealand&apos;, &apos;Fiji&apos;, &apos;Kiribati&apos;, &apos;Marshall Islands&apos;, &apos;Micronesia&apos;, &apos;Nauru&apos;, &apos;Palau&apos;, &#13;&#10;    &apos;Papua New Guinea&apos;, &apos;Samoa&apos;, &apos;Solomon Islands&apos;, &apos;Tonga&apos;, &apos;Tuvalu&apos;, &apos;Vanuatu&apos;&#13;&#10;) THEN &apos;Pacific&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Bahrain&apos;, &apos;Comoros&apos;, &apos;Madagascar&apos;, &apos;Maldives&apos;, &apos;Mauritius&apos;, &apos;Seychelles&apos;, &apos;Taiwan&apos;, &apos;Hong Kong&apos;&#13;&#10;) THEN &apos;Island&apos;&#13;&#10;&#13;&#10;ELSE &apos;Africa&apos;&#13;&#10;END' />
            </column>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Happiness score' datatype='real' name='[Happiness_score]' role='measure' type='quantitative' />
            <column-instance column='[Happiness_score]' derivation='Avg' name='[avg:Happiness_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1024568971831394304]' derivation='None' name='[none:Calculation_1024568971831394304:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]' />
              <text column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]</rows>
        <cols>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]</cols>
      </table>
      <simple-id uuid='{8D2859E0-A92B-480A-8538-999B0FF7A1B3}' />
    </worksheet>
    <worksheet name='Top 10'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='20'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Combined_Cleaned' name='federated.1b23h6n1s7urv9188s8hf1c6z70u' />
          </datasources>
          <datasource-dependencies datasource='federated.1b23h6n1s7urv9188s8hf1c6z70u'>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Happiness score' datatype='real' name='[Happiness_score]' role='measure' type='quantitative' />
            <column-instance column='[Happiness_score]' derivation='Avg' name='[avg:Happiness_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Happiness_score])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' direction='DESC' using='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]' />
          <slices>
            <column>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]' field-type='quantitative' major-origin='0.0' major-spacing='10.0' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]' scope='rows' value='Happiness Score' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' />
              <text column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{CEDFEC3E-626B-4CD9-AE1D-EB7C3C3968F8}' />
    </worksheet>
    <worksheet name='World Happiness Report'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='28'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Combined_Cleaned' name='federated.1b23h6n1s7urv9188s8hf1c6z70u' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1b23h6n1s7urv9188s8hf1c6z70u'>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Happiness score' datatype='real' name='[Happiness_score]' role='measure' type='quantitative' />
            <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness_score]' derivation='Sum' name='[sum:Happiness_score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]'>
            <groupfilter function='level-members' level='[none:Country_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[Longitude (generated)]' field-type='quantitative' max='17845906.913787689' min='-17845906.913787689' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[Latitude (generated)]' field-type='quantitative' max='12132086.363032341' min='-12132086.363032337' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[sum:Happiness_score:qk]' num-steps='5' palette='red_green_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[sum:Happiness_score:qk]' />
              <lod column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' />
              <geometry column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='has-halo' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[Latitude (generated)]</rows>
        <cols>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2491F778-D5C2-4495-BE62-9A255B3DCBFD}' />
    </worksheet>
    <worksheet name='asia &amp; europe '>
      <table>
        <view>
          <datasources>
            <datasource caption='Combined_Cleaned' name='federated.1b23h6n1s7urv9188s8hf1c6z70u' />
          </datasources>
          <datasource-dependencies datasource='federated.1b23h6n1s7urv9188s8hf1c6z70u'>
            <column caption='Region' datatype='string' name='[Calculation_1024568971831394304]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Country_name] IN (&#13;&#10;    &apos;Afghanistan&apos;, &apos;Armenia&apos;, &apos;Azerbaijan&apos;, &apos;Bahrain&apos;, &apos;Bangladesh&apos;, &apos;Bhutan&apos;, &apos;Brunei&apos;, &apos;Cambodia&apos;, &#13;&#10;    &apos;China&apos;, &apos;Cyprus&apos;, &apos;Georgia&apos;, &apos;India&apos;, &apos;Indonesia&apos;, &apos;Iran&apos;, &apos;Iraq&apos;, &apos;Israel&apos;, &apos;Japan&apos;, &apos;Jordan&apos;, &#13;&#10;    &apos;Kazakhstan&apos;, &apos;Kuwait&apos;, &apos;Kyrgyzstan&apos;, &apos;Laos&apos;, &apos;Lebanon&apos;, &apos;Malaysia&apos;, &apos;Maldives&apos;, &apos;Mongolia&apos;, &#13;&#10;    &apos;Myanmar&apos;, &apos;Nepal&apos;, &apos;North Korea&apos;, &apos;Oman&apos;, &apos;Pakistan&apos;, &apos;Palestine&apos;, &apos;Philippines&apos;, &apos;Qatar&apos;, &apos;Saudi Arabia&apos;, &#13;&#10;    &apos;Singapore&apos;, &apos;South Korea&apos;, &apos;Sri Lanka&apos;, &apos;Syria&apos;, &apos;Tajikistan&apos;, &apos;Thailand&apos;, &apos;Timor-Leste&apos;, &apos;Turkey&apos;, &#13;&#10;    &apos;Turkmenistan&apos;, &apos;United Arab Emirates&apos;, &apos;Uzbekistan&apos;, &apos;Vietnam&apos;, &apos;Yemen&apos;&#13;&#10;) THEN &apos;Asia&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Albania&apos;, &apos;Andorra&apos;, &apos;Austria&apos;, &apos;Belarus&apos;, &apos;Belgium&apos;, &apos;Bosnia and Herzegovina&apos;, &apos;Bulgaria&apos;, &apos;Croatia&apos;, &#13;&#10;    &apos;Czech Republic&apos;, &apos;Denmark&apos;, &apos;Estonia&apos;, &apos;Finland&apos;, &apos;France&apos;, &apos;Germany&apos;, &apos;Greece&apos;, &apos;Hungary&apos;, &apos;Iceland&apos;, &#13;&#10;    &apos;Ireland&apos;, &apos;Italy&apos;, &apos;Kosovo&apos;, &apos;Latvia&apos;, &apos;Liechtenstein&apos;, &apos;Lithuania&apos;, &apos;Luxembourg&apos;, &apos;Malta&apos;, &apos;Moldova&apos;, &#13;&#10;    &apos;Monaco&apos;, &apos;Montenegro&apos;, &apos;Netherlands&apos;, &apos;North Macedonia&apos;, &apos;Norway&apos;, &apos;Poland&apos;, &apos;Portugal&apos;, &apos;Romania&apos;, &#13;&#10;    &apos;Russia&apos;, &apos;San Marino&apos;, &apos;Serbia&apos;, &apos;Slovakia&apos;, &apos;Slovenia&apos;, &apos;Spain&apos;, &apos;Sweden&apos;, &apos;Switzerland&apos;, &apos;Ukraine&apos;, &apos;United Kingdom&apos;, &apos;Vatican City&apos;&#13;&#10;) THEN &apos;Europe&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Antigua and Barbuda&apos;, &apos;Argentina&apos;, &apos;Bahamas&apos;, &apos;Barbados&apos;, &apos;Belize&apos;, &apos;Bolivia&apos;, &apos;Brazil&apos;, &apos;Canada&apos;, &apos;Chile&apos;, &#13;&#10;    &apos;Colombia&apos;, &apos;Costa Rica&apos;, &apos;Cuba&apos;, &apos;Dominica&apos;, &apos;Dominican Republic&apos;, &apos;Ecuador&apos;, &apos;El Salvador&apos;, &apos;Grenada&apos;, &apos;Guatemala&apos;, &#13;&#10;    &apos;Guyana&apos;, &apos;Haiti&apos;, &apos;Honduras&apos;, &apos;Jamaica&apos;, &apos;Mexico&apos;, &apos;Nicaragua&apos;, &apos;Panama&apos;, &apos;Paraguay&apos;, &apos;Peru&apos;, &apos;Saint Kitts and Nevis&apos;, &#13;&#10;    &apos;Saint Lucia&apos;, &apos;Saint Vincent and the Grenadines&apos;, &apos;Suriname&apos;, &apos;Trinidad and Tobago&apos;, &apos;United States&apos;, &apos;Uruguay&apos;, &apos;Venezuela&apos;&#13;&#10;) THEN &apos;Americas&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Australia&apos;, &apos;New Zealand&apos;, &apos;Fiji&apos;, &apos;Kiribati&apos;, &apos;Marshall Islands&apos;, &apos;Micronesia&apos;, &apos;Nauru&apos;, &apos;Palau&apos;, &#13;&#10;    &apos;Papua New Guinea&apos;, &apos;Samoa&apos;, &apos;Solomon Islands&apos;, &apos;Tonga&apos;, &apos;Tuvalu&apos;, &apos;Vanuatu&apos;&#13;&#10;) THEN &apos;Pacific&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Bahrain&apos;, &apos;Comoros&apos;, &apos;Madagascar&apos;, &apos;Maldives&apos;, &apos;Mauritius&apos;, &apos;Seychelles&apos;, &apos;Taiwan&apos;, &apos;Hong Kong&apos;&#13;&#10;) THEN &apos;Island&apos;&#13;&#10;&#13;&#10;ELSE &apos;Africa&apos;&#13;&#10;END' />
            </column>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Economy (GDP per Capita)' datatype='real' name='[Economy_(GDP_per_Capita)_]' role='measure' type='quantitative' />
            <column caption='Happiness score' datatype='real' name='[Happiness_score]' role='measure' type='quantitative' />
            <column-instance column='[Happiness_score]' derivation='Avg' name='[avg:Happiness_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1024568971831394304]' derivation='None' name='[none:Calculation_1024568971831394304:nk]' pivot='key' type='nominal' />
            <column-instance column='[Economy_(GDP_per_Capita)_]' derivation='Sum' name='[sum:Economy_(GDP_per_Capita)_:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1024568971831394304:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:Calculation_1024568971831394304:nk]' member='&quot;Europe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refboxplot'>
            <format attr='fill-color' id='refline0' value='#f0f0f0d9' />
            <format attr='palette' id='refline0' value='bp_green' />
            <format attr='opacity' id='refline0' value='170' />
            <format attr='boxplot-style' id='refline0' value='modern' />
            <format attr='whisker-end' id='refline0' value='large' />
            <format attr='whisker-stroke-color' id='refline0' value='#555555' />
            <format attr='whisker-stroke-size' id='refline0' value='2' />
            <format attr='stroke-size' id='refline0' value='2' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]' />
              <tooltip column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[sum:Economy_(GDP_per_Capita)_:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{9FC56778-EF05-4EAD-B96F-22E2BCD9DC4F}' />
    </worksheet>
    <worksheet name='trend line'>
      <table>
        <view>
          <datasources>
            <datasource caption='Combined_Cleaned' name='federated.1b23h6n1s7urv9188s8hf1c6z70u' />
          </datasources>
          <datasource-dependencies datasource='federated.1b23h6n1s7urv9188s8hf1c6z70u'>
            <column caption='Region' datatype='string' name='[Calculation_1024568971831394304]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Country_name] IN (&#13;&#10;    &apos;Afghanistan&apos;, &apos;Armenia&apos;, &apos;Azerbaijan&apos;, &apos;Bahrain&apos;, &apos;Bangladesh&apos;, &apos;Bhutan&apos;, &apos;Brunei&apos;, &apos;Cambodia&apos;, &#13;&#10;    &apos;China&apos;, &apos;Cyprus&apos;, &apos;Georgia&apos;, &apos;India&apos;, &apos;Indonesia&apos;, &apos;Iran&apos;, &apos;Iraq&apos;, &apos;Israel&apos;, &apos;Japan&apos;, &apos;Jordan&apos;, &#13;&#10;    &apos;Kazakhstan&apos;, &apos;Kuwait&apos;, &apos;Kyrgyzstan&apos;, &apos;Laos&apos;, &apos;Lebanon&apos;, &apos;Malaysia&apos;, &apos;Maldives&apos;, &apos;Mongolia&apos;, &#13;&#10;    &apos;Myanmar&apos;, &apos;Nepal&apos;, &apos;North Korea&apos;, &apos;Oman&apos;, &apos;Pakistan&apos;, &apos;Palestine&apos;, &apos;Philippines&apos;, &apos;Qatar&apos;, &apos;Saudi Arabia&apos;, &#13;&#10;    &apos;Singapore&apos;, &apos;South Korea&apos;, &apos;Sri Lanka&apos;, &apos;Syria&apos;, &apos;Tajikistan&apos;, &apos;Thailand&apos;, &apos;Timor-Leste&apos;, &apos;Turkey&apos;, &#13;&#10;    &apos;Turkmenistan&apos;, &apos;United Arab Emirates&apos;, &apos;Uzbekistan&apos;, &apos;Vietnam&apos;, &apos;Yemen&apos;&#13;&#10;) THEN &apos;Asia&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Albania&apos;, &apos;Andorra&apos;, &apos;Austria&apos;, &apos;Belarus&apos;, &apos;Belgium&apos;, &apos;Bosnia and Herzegovina&apos;, &apos;Bulgaria&apos;, &apos;Croatia&apos;, &#13;&#10;    &apos;Czech Republic&apos;, &apos;Denmark&apos;, &apos;Estonia&apos;, &apos;Finland&apos;, &apos;France&apos;, &apos;Germany&apos;, &apos;Greece&apos;, &apos;Hungary&apos;, &apos;Iceland&apos;, &#13;&#10;    &apos;Ireland&apos;, &apos;Italy&apos;, &apos;Kosovo&apos;, &apos;Latvia&apos;, &apos;Liechtenstein&apos;, &apos;Lithuania&apos;, &apos;Luxembourg&apos;, &apos;Malta&apos;, &apos;Moldova&apos;, &#13;&#10;    &apos;Monaco&apos;, &apos;Montenegro&apos;, &apos;Netherlands&apos;, &apos;North Macedonia&apos;, &apos;Norway&apos;, &apos;Poland&apos;, &apos;Portugal&apos;, &apos;Romania&apos;, &#13;&#10;    &apos;Russia&apos;, &apos;San Marino&apos;, &apos;Serbia&apos;, &apos;Slovakia&apos;, &apos;Slovenia&apos;, &apos;Spain&apos;, &apos;Sweden&apos;, &apos;Switzerland&apos;, &apos;Ukraine&apos;, &apos;United Kingdom&apos;, &apos;Vatican City&apos;&#13;&#10;) THEN &apos;Europe&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Antigua and Barbuda&apos;, &apos;Argentina&apos;, &apos;Bahamas&apos;, &apos;Barbados&apos;, &apos;Belize&apos;, &apos;Bolivia&apos;, &apos;Brazil&apos;, &apos;Canada&apos;, &apos;Chile&apos;, &#13;&#10;    &apos;Colombia&apos;, &apos;Costa Rica&apos;, &apos;Cuba&apos;, &apos;Dominica&apos;, &apos;Dominican Republic&apos;, &apos;Ecuador&apos;, &apos;El Salvador&apos;, &apos;Grenada&apos;, &apos;Guatemala&apos;, &#13;&#10;    &apos;Guyana&apos;, &apos;Haiti&apos;, &apos;Honduras&apos;, &apos;Jamaica&apos;, &apos;Mexico&apos;, &apos;Nicaragua&apos;, &apos;Panama&apos;, &apos;Paraguay&apos;, &apos;Peru&apos;, &apos;Saint Kitts and Nevis&apos;, &#13;&#10;    &apos;Saint Lucia&apos;, &apos;Saint Vincent and the Grenadines&apos;, &apos;Suriname&apos;, &apos;Trinidad and Tobago&apos;, &apos;United States&apos;, &apos;Uruguay&apos;, &apos;Venezuela&apos;&#13;&#10;) THEN &apos;Americas&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Australia&apos;, &apos;New Zealand&apos;, &apos;Fiji&apos;, &apos;Kiribati&apos;, &apos;Marshall Islands&apos;, &apos;Micronesia&apos;, &apos;Nauru&apos;, &apos;Palau&apos;, &#13;&#10;    &apos;Papua New Guinea&apos;, &apos;Samoa&apos;, &apos;Solomon Islands&apos;, &apos;Tonga&apos;, &apos;Tuvalu&apos;, &apos;Vanuatu&apos;&#13;&#10;) THEN &apos;Pacific&apos;&#13;&#10;&#13;&#10;ELSEIF [Country_name] IN (&#13;&#10;    &apos;Bahrain&apos;, &apos;Comoros&apos;, &apos;Madagascar&apos;, &apos;Maldives&apos;, &apos;Mauritius&apos;, &apos;Seychelles&apos;, &apos;Taiwan&apos;, &apos;Hong Kong&apos;&#13;&#10;) THEN &apos;Island&apos;&#13;&#10;&#13;&#10;ELSE &apos;Africa&apos;&#13;&#10;END' />
            </column>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Happiness score' datatype='real' name='[Happiness_score]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Happiness_score]' derivation='Avg' name='[avg:Happiness_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1024568971831394304]' derivation='None' name='[none:Calculation_1024568971831394304:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]'>
            <groupfilter function='level-members' level='[none:Country_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]</rows>
        <cols>([federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk] * [federated.1b23h6n1s7urv9188s8hf1c6z70u].[tyr:Year:qk])</cols>
      </table>
      <simple-id uuid='{4E31A266-C5DF-49C4-A7B7-83E43B037377}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='860' maxwidth='650' minheight='560' minwidth='420' />
      <zones>
        <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98004' id='12' param='horz' type-v2='layout-flow' w='97538' x='1231' y='998'>
            <zone fixed-size='261' h='98004' id='11' is-fixed='true' param='vert' type-v2='layout-flow' w='97538' x='1231' y='998' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='96259' id='10' name='World Happiness Report' w='70769' x='4462' y='2369' />
        <zone h='77930' id='14' name='Top 10' w='21231' x='77692' y='20200' />
        <zone h='10224' id='13' name='World Happiness Report' pane-specification-id='0' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[sum:Happiness_score:qk]' type-v2='color' w='20154' x='78615' y='1746' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='24' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='23' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='96259' id='10' is-fixed='true' name='World Happiness Report' w='70769' x='4462' y='2369'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10224' id='13' name='World Happiness Report' pane-specification-id='0' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[sum:Happiness_score:qk]' type-v2='color' w='20154' x='78615' y='1746'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='77930' id='14' is-fixed='true' name='Top 10' w='21231' x='77692' y='20200'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C11228DE-2335-4FB6-99CF-5090DC4CEF9C}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='860' maxwidth='650' minheight='560' minwidth='420' />
      <zones>
        <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97658' id='10' param='horz' type-v2='layout-flow' w='97538' x='1231' y='1171'>
            <zone h='97658' id='8' type-v2='layout-basic' w='97538' x='1231' y='1171' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='41147' id='5' name='asia &amp; europe ' w='53231' x='3231' y='5237' />
        <zone h='45511' id='7' name='Regions avg. happines score' w='72462' x='2923' y='52494' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97658' id='15' param='vert' type-v2='layout-flow' w='97538' x='1231' y='1171'>
                <zone fixed-size='280' h='41147' id='5' is-fixed='true' name='asia &amp; europe ' w='53231' x='3231' y='5237'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45511' id='7' is-fixed='true' name='Regions avg. happines score' w='72462' x='2923' y='52494'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C1F527F3-6264-44EA-9038-428D0D2297A8}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='World Happiness Report'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[sum:Happiness_score:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]</field>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{96A77978-F3EA-4F66-8AB2-741A314B8963}' />
    </window>
    <window class='worksheet' name='Happiest Top 10 Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[sum:Happiness_score:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]</field>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B120DBA2-DA12-4BD9-941F-08DAE2B86DB2}' />
    </window>
    <window class='worksheet' name='Happiest Last 10 Countries '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[avg:Happiness_score:qk]</field>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]</field>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2EFCDB2D-9D22-4250-9E58-C42BE239D439}' />
    </window>
    <window class='worksheet' name='Top 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FBE6406B-F917-4264-A68E-0B67BFCE7E38}' />
    </window>
    <window class='worksheet' name='asia &amp; europe '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BD725CF2-1349-40BD-A9BD-07467E8FF612}' />
    </window>
    <window class='worksheet' name='Regions avg. happines score'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{36EC6EDC-A9B6-4D2B-80E9-260B8BD9E072}' />
    </window>
    <window class='worksheet' name='Per Capita Income and Happiness Relationship'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]' type='filter' />
            <card param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' type='filter' />
            <card param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[yr:Year:ok]' type='filter' />
            <card pane-specification-id='1' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[:Measure Names]</field>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]</field>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]</field>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Year:qk]</field>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ADAC5303-0581-4445-9A64-8505D8AF62F1}' />
    </window>
    <window class='worksheet' name=' Social Support and Happiness Relationship'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[sum:Economy_(GDP_per_Capita)_:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7963EFE5-E0B9-4D9C-8578-00013D928167}' />
    </window>
    <window class='worksheet' name='Comparison of Happiness Scores Between 2020 and 2024'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='25' type='pages' />
            <card size='43' type='filters' />
            <card size='184' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[yr:Year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]</field>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[tyr:Year:qk]</field>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8AF1F0B3-89AF-4FAF-AEBE-FD8B46DAB4BA}' />
    </window>
    <window class='worksheet' name='trend line'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Country_name:nk]</field>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[tyr:Year:qk]</field>
            <field>[federated.1b23h6n1s7urv9188s8hf1c6z70u].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2ABC6D69-A13F-49B6-9DF4-9F532BFA39C2}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Top 10'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='World Happiness Report'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{A4B7D873-0D32-47FD-8FCF-8B84A88908DF}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Regions avg. happines score'>
          <zoom type='entire-view' />
          <highlight field='[federated.1b23h6n1s7urv9188s8hf1c6z70u].[none:Calculation_1024568971831394304:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='asia &amp; europe '>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{6CFCC373-462C-4EF4-9565-3E5947DED785}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name=' Social Support and Happiness Relationship' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9eXBd13ng+Tt3e/t7wMMOggAJ7pu4iKK4abFsyZJsK7K8x1lst52M05lU
      T1xJVap6uqerurqmZqqSmc6UO3GnazIdJbbbjmNrtSRrJSlSIsV9BUgQBLFv7+Ht725n/ngE
      SIpYyQcREu6vSiXiLd8997zz3XPOd75FSCklHh6LECGEUO52Izw87ibzqgBSSj7qCabc15uP
      eyi3zPlqY7nlLcQ2zvsM4DjOlO8Vi0UKhUJZr2fbdlnlzYfM6frkduWVe3CV+56llGW/73K0
      8a4vgYQQd7sJHouYu6oA3uD3uNvc9RnAw+Nu4imAx6JGK5egwlg/h09dQtH9bL93Kz7N0y2P
      hU/ZRmmir5cl67ZR5ZNkiuW3xHh4zAdlmwH80TiX2o6DK1iiKhOmuelMdLZtI6VEUco3W5Tb
      1DYfMh3HwXXdshkBXNctqzwo/z2PnwOUy1zrjKUoXulEURT0lhbUSOS25JRNAcZGR4jXN2EO
      XiVbtIj4AxM3q2mTX2a8Q3RdL1czAMoqb/weyilTCIGqqmUbsLZtoyhKWR8kUN57HlfSqcbC
      bJFSUjh7lsSzz2L29SGEgt7YSPz3fhff6tVz7tOy9VjL+i1U+QRLVm2kLhool1gPj5twUykS
      zz6L1d2NtCywLayuKyT+8R9xs9k5yyubAghFpa6xiZp4FM+87zFfmF1dWP39t7xu9fRgdffM
      WV7ZlkC3w93wFfL4+CKlxEkkcVMppOsifH64cdl3Gw/eu6oAHh6zRboumXfeIfnjn2ANDCKL
      RYTPh97YgGIY6E1N6EuWzFmupwAeHwusvj6SP/0pTjaDVluLPVhSAnt4mNCu3VR+83eQ+Typ
      d9/FGR3FWLacwD2bUILBaeV6CuDxsaDY1oabySCEQAkGMJY24RaKKKEgVd/7LkIoDP7lX2J1
      d5e+oKgE799B1be+Na0S3HUF8BziPKbCSaUptl3Azeexh4aQUiKEKI0ZTUMEFdRIFCUQIPmz
      n18f/ACuQ+699whs3ET4wQemvMZdVQAhhLcJ9rgFKSXFtjYG/tN/onjxIiBQK2IgFJASpEQJ
      BsDnx79+PYrfj9nVdasg16V48eLCVQCPTyajOZv2IZOlFToNUW3Os7ybydD3b//X0rLHsTFV
      EOkEhqtcX84oCsaaNVR+/WsInw8lNPkyR41Gp72WpwAeZaVgufzjB0kGMzZ+TfDHD1QT86tz
      kpF9Zx9mRwdjus3BTdBZA6oL66667EoFCMaqQREIx8ZOJPBVVxPes4fRzk64IUpMjccJ3nff
      tNfyFMCjrBRsSarg3PTv6RRASok0TazeXtRIBDUex+zuxhQOz98HbY0ChAQE3VVQ7C7wRM6H
      Qmn5XDh1Cv/q1YQffBBpO2TefBM3l0Wrqyf29G+hNy+dtr2eAniUlZhfYc/yEB9052mtMlgS
      m96fqHDmDCN/+7fYwyOgCMIPPohaUUFPo4+LDdZNh1tSgaNNBXZe6iNu+kGEGXc7EIZB5LOP
      EX7oQWSxiBIKIWbhy+QpgEdZEULw0IoQD7SGUMT0Vj4nlWL4hz+k2H4RN5MBINHXR+XXv05h
      bTNSOQfcbCSxDElOzVHpFkHN4d+8/KZri0AAArP3RfOiVjzKjhACVREzbn7NK10U29pxkkmk
      bSNtGzedIf36G6z95ncJV0TRdB2hCoRPIAKCsAtRUyD8KqGn6hF1V+7IkujNAB53D8fGufbk
      vxE7kyfa5/CN5t+mN5vkonuBTl8buubwWT1I4z0NGMsqUGp8uM4A4AJz22iP4ymAx0eOdF2s
      3l4K584hFAXXsibW8ug+3E27yV5M0ByooDYaZ6XWzJVwiOVNHayJ+tH1OEL4cF2JolRxW15w
      1yibAiQHe7jSNwzorFq/mqA+s2jvEGzxIaUk8/obJH7+swmvTlksIhQFDB+s2ICobgBXIPI2
      gaJDZEmQpfr9RCNDCEUyPmyFEkUL7OZOMnyWTQEilTWsjsQ5f+oEjjt7jfSUYHFh9vSR+NVz
      uLkcbjaHNM3SGxvug3XbEJXVEKlA2kVEIQ2ujTtmIUMBhLoGPVADUiDUaoS+C0VtuKP2lE0B
      VN3AcJNIfxVhnzrrmGAAy7LK1QwvJrhMlP2eLZts1zC59i7MZVug/wp222ulp/+qTbB5V6n9
      jlNaDhkBpCsRZhZp6aiBWozo/ah6HRIXITQcR2LbNpmiy4HOAj1jFjVhjQeW+6kIzG5PUL49
      gJRcvHCJ1tVbEICqqjPGBLuu68UEl4GFHhMspSR7ZZhs9yiuAwTCuA0rYd0IHHkbVmy83hdm
      AVnIIwLB0pLIKqCFK6hctRl/KPYhyRaqqvGLMwk6R0szSXfKpidl8we74rNKzVO2HpPSQQ9X
      EfPd3m7c45OLtB3yQykAlEAAoRugqYimFeALgP+a3V6IkrNbKgG5DMIqomVHqN25nkDN5D49
      /WmbroR502uDGZuuxOxWFWWMCdZobV02p3jgCddWj0WDUFW0xgbUSKTk2CYEIjEEQkEgQFEQ
      AoRVwB8QNH71CQLNDXMeJ7PdWXpmUI8540qXQ32HeK/vPYpOkXXxdXym5TOE9NCknxeaSqAm
      ipUtgBAofj/60qUEVjWR7zhCsacN2bQc/MHSA9R1EdJB7e9AmmumbUtdRKO5Qqfzhid+bVij
      pXJ2yzcxnyWSxjfBU+0BTNNESonP5yvbNS3LKvsewLbtssq0bXvB7wGm6kcpJb+8+Eueu/Qc
      8obn7OrK1fzZ9j9DVyfvJ9u0SF0eoDhSOvjyV0eJttSQO/guiWefxUHBjtTiqj5UHLRUP+Qz
      6LW11P7gB2h1ddgjI7jpNGo8jhqLYTsOuq6TLji805GlO1naBH9qZYjK4MzPdiGE8GYAjzmR
      KCR4+fLLNw1+gLZEG4f7D7N7ye5Jv6doKtEV9TgtLumii6tpuJpK+IG9aDU15A4dJPXyr5GW
      iRK+7uRmDQyQ2b8fpCSzbx+yUECNRok++SS+vXtB14n4VT63fnq//6nwFMBjTvRkezBdc9L3
      LqcuT6kAlmtxsPskb140GUr78asBYsEiVRUXWFVdyd5nnqJw7hzWWAYnXIWbyyE72yAzRuIf
      nkXoOiIYQAiBPTRE4ic/oaKyEuPee+/ofjwF8JgTMePDpsjrVPgqJn3dcR2eu/givzyZwTJb
      sGUSyx1CTWr4hn0cHvwFh6IH+OaKlbi5ALgS6bqwZBXuW8/hdHaW9g31dSixWCmUtlgkf+QI
      0TtUAM8b1GPWSCmpVaq437+NuBnG7RvEvNyJ1dtLSBrsatxViud1iuSsHK4snfN0n3uf37z7
      AsVUFLdYwHJMkBJH2jh2DNeu4Uq6m96qShBK6exFAoYfsfUBcN1SYPzwCLju9fZYd56F3JsB
      PGaFlJJs7yipjgEet/awbiTG6WKAdzNvI0eTPHxYYNRc4vhSlVc6XyVjZdhQvYEn1M10/NN/
      I1szBkGBI1ykkKWQRkrjXEodvzSwXYkwDKTjAtdOosNRMPxQyOFkMthDQ6jxOEoggH/Dhju+
      L08BPGaFnSsy1jGAa9ooBZsl+RB+sYEevYtL9nl+0dTPpRf+Ld3blpAxXJAwkh5Gv3qSpaN5
      jPgYBTeBUOtKo96VqIqGD4muJikKE0tzEapRWuKMG8gKWbCKpQMy28YeHsHN5qj85jcJ3rf9
      ju/LWwJ5zAorU8C1bKQrsU0HJxwjEKlnlX8tAnAV2B8fpifdgyIF681Wnsjuodq3nooVn+J+
      q5kK+xBVik5ECVEt4rSIah5WXZ7Ob6XKjKC0RNAqK6/n+7Qt5LEDJf8gALXkZSClROgaogzm
      cy857icIKSVjBRdFQMSnTHvO4NoOYx0DFIZTKIZGdFktgeqpTYlCV3FxcQomrguuqgAuTb5l
      6MLAwkYTKgVMGpwa7jFXo6Hi0wRKwMdDPMoWzSLJCKOiBkWTBLV+fG4SkZN8bnQDLfvfpuLx
      pzDjraRfeQXn7DHEcE/J4KqqCMMouU3bNvkPjhL9/d+/4z7zlkCfIHpTNv/98ChCCL63M05V
      aOrCJMn2PrK9o6UX8iYjp7uo3daKEQ3e8tmh/BAvdr+IL2uzqrCUsAyi6DqOWcSUJprmw1YV
      /K5CU3w1y+wlGGhoik5VRS2KOYJEJ27mqcwXWR6xwDCwHINcVuJzDAKOH5m1SP/8x9T/+39P
      uPaLJF8J8P7FNzkletGkwtZuwbLhUviLWyggczm4w1nAU4BPEMm8Q86SgCRVcKma3DMBabsT
      zmkTrzku+eHULQqQt/P83am/oy3RhqHq9BuD7ChsJKKFyRkmbcWLFHWJUHWqGlfwv2z4U8yz
      I1Cw0TQDny+AbDBwExkoZBGui5QgpERIKGiSvOpgWyoVro2bzVC80EZo7x5eHNnHv+hJ7LwA
      XE43W3z1sM66ZKB0MlywSZ/sxB+PEFoSv62TdU8BPkGsrvHxxNoIqiJoiU/juiGY1GlRIkjm
      HQK6mNgctiXaaE+0A2AqFid97VzWe1jJMr6w/reoSidZPWpQF2ng861fQDuTRxMBLKUIlixt
      mlUBZgFcB1dVcM0caCpFYVNQbCTQ5XTTqA6yAj9oKsP73+DFEz/BRSIUgXTBViX7t/rY2NFM
      6P77yY/kyA+lKCayBGpjqMbch/Ndzw3qUT50VbB7+RSP/RsQqkJoSZzU5cHrr+kax/IG7+4f
      pj6q88yGEJV6yfXhw24PaSXHee0yX64O8/vLvjXxup036TcvIFQFPezDKVioPh3DTmOeO8jo
      8layBghhE8bAReIXQS6a53k79zo7IwFWG03412/g8t/8n1h+l5I5SIAszRwZxcT/6YeIPvkE
      uWSeYiKLPx5Guc2yvGUNiEklhkgVBY311Sje4F6wCCGILqtD9ekUhtMohkZgSRWvnM2TN126
      BnIMVktCfoEiFPJ2HlWo6Io+8dCK++O3nPyqfh0jFqSYyCJUBSXip3ZrK07nRd52TvBO7n2W
      iXVs899LQibJYyGEiiHCCNWgbvlGah//Y9RohMqCQlTRGCUDsjQLADQWw+ipPMLvx1et0VAT
      QyjKxPtzpXyFspM9nO/KsKSuAtcFxYuLWdAIRRBeUkV4SRVQ2uxurrMZ6h6lVnGQF4d4rfsS
      z5u/IW2myVgZKnwVVPoqCekhnlrxFEHt5v2CEIKqDc2ku4ZwChbBhkqMihD5JbWcqXVxQxFy
      hiQrikgkLgoICBt1rM1sYaNdRfqttwg/8CDhbdv5rVdO8T/q0mQNQAqqiwaP99ViJttLibT8
      fhTtzgZa2RSg+2InOenn0qUksapqAtdyN3p1gieXtxBjglvtNM9Es2hAojCCkjKRQZe4L47j
      OowWRmmNtvKt9d9iXXwdtm3jmjbFkQxO0cKIBdFjQULLaiZk2rZNPpHm3qrPguEnLMJECDEo
      R5C4IP1UZGH7GYmZOErK0Mjs20/V//zHbL3nceK/eJbOSAFd87FKbSAkNGRIwZYSWYbfpXyF
      sgM+Wps3E050MDSWZ3lNxKsTPAULNSZY0zUCqsBxHXJWtrTyF5JEIUHKKlmNLo1d4mLqIvdU
      byB3/BTJ3gy2o6BEIghFIdpSQ3R53U1LkuJQHp8aooiLiYlKlKgIMypTaI5BJJ1iaHgIoV27
      h2KB3GuvUfunf4qmG9S++iro19Osh/fuxReNliX2o2wK0LhmA++/dwjXCLFt28wbMY+FR3hJ
      nNxgEmcsiyNcTvrayZJnzByb+IwjHd7ueovN/3IGdUzDbVxZivIKhtDq60geO8/Y2VOMtq6n
      1s0STfRjjyn4pYqFiyUtkiKFhoojVWRRYezccdRskkB1eOI69sgISEnl7/4OakWM3OEjIASh
      XbuIPvF42e7ZiwibgcUWEebaDmY6z4tXXuKF/pdxHRczlaNKVhDEjxWU5PNDfP81QXjZTmRV
      IwDSlSAEjhC8njO44gaI2xm+eOll9OY1pJuXMaTmsISLBNq0q4xYzay1G2gZbCeYHSHWcxnt
      Wqqc0AMPXqv9VVpKS8sq5X/Tr2/E7/S39iLCPG5B0VT8lWEe0h9h2B1F7SywTi6jkhgukmw+
      T//YSaLWGWQ2hYw3gBCl9bjPj+0LkVZjuEWXbCqP5Qp8V84R9gUx1qwhp9q4lRrNLVsJXYbe
      0R5ywTh5M8xwXGX5yXOE6pdS8cUvlmKPe0uxx7qq8+nmT7Muvq6s9+spgMekxHwxvlz9FOcv
      HiEuYlyzxhMmwMrgFqT/CmK4i0K8EjsWx1B9aP4whlXgPmuANjVKU74XvaMNSxGoqSQNuzYR
      um8vml8j1d5NX+oKeTuD0DSkomDVN1HYup7WHY+hhkK80fUGz559FpdSDMDJoZP8+X1/zqrK
      VWW7T08BPKYkn81iuDppqdHjGgSES6PI4+oqr683ySeu0mZcpM5pYk/4Yepsh5gpWOpYNBVH
      IChAqLjZNG6xiGIVUBWXof/8n8n2jmK3bkCGTPD5Sk5uqk5gwwbUUGkP+XrX6xODH0phlW93
      v/3JUQDPG3Th4UpJ3pLgSoLxKCNC8p5VQQoVBVirqKzV+zi+0uFCMkWF7cMO5EjqFkbRIejo
      6FJDWlbJrfnael0JBSlevIg9OEj+6FGE4cfXsIKwrpGhCH4/8cY6WqquF7yYbGyUe7x4M4DH
      BK6UvHs5x5GrOcKG4HPrKxhsqGPkcmmgOECbq9PpP0ZWAmqErOEQj4TosvupcePIxjp0W8Xq
      6YG+IYRfA18lbr5A7v330SrjAAizgH7+PWobVxAN+Kn49GbqNq9HuyGtyt6mvfzsws8mXDE0
      obGrcVdZ79lTgEWAlJLRnIOUEA+pU7qppAsu+zqy5CyX4YzLB91FNrau5YORbgpFk5yVw1TG
      kOZyXHs7FVYO1+1Duue5qF8lRJCV0dXorgZd7dB/EVFTg3n1KjKfxx4exk2lSzV+AZHPoF06
      QVgI6r7zNbQbLDqOK3mg8TMoqLzXfwhd0Xms5TE2VN15GOSNzKgAI1cv8OvDHXzmvvX4qxuJ
      Bcp7aOUx/3QlLH5yPImU8PTGKGvr/JN+ThGgTlhSBboq2FAfYM/yWs4PFujLdpHLabjmUhzX
      RhMawq3AyrRgVLzEio0baW7aiJBgLfGTSFzB6u5GCYYQ/gBqNIp/wwaK58+XQhyvEdi6FbWq
      auJvV0pePJXkdHeGT2/Yw7/b+di8OU7OqACHTpynNmrgprq55ETZtqyybBf3vEE/GnrGLDLF
      0mbyatKaUgHCPoXPb4jy/pUcUZ9g5zI/b3f/hsNjr5MXCk0195DuXsZYsXQwpgiVCl+MeGA5
      X1yzi73Lqid+U3XVKur+4i9K9b+KRbIHDyLCYWKPPkr20CHSb7yBLBTxb9xAxTPPlDbBgHQc
      Es89z7GLfrJagA/ODLNxbwOh3ZPnG7pTZlSAlQ2VPPfme5y/UMFvf3vHvDTCY35ZV+enY8TE
      kZLNjdcH//jSKGgo+DVBwSnQVGGxoioCLnwwfJgfn//xxBr83EgAy2nCp5ZkCARFx8Sn+rDt
      wC0PNMUwUGprAdCWLCn5K2ka4QceKA1o1wXt5kryuaNHyfzLL9gTW8alyuVsHTjFSHsGY9ky
      9MbGsvfNjArQ0z3A177zfZoqQii36XLqcR0pS9FabcNFYgGVVTU+tHnu14qAwte3ViCBvJ3m
      pY7XGMoPUaHs4OTVONUhlfVL23m75zXGzDGaI808WfMI7x7+OcWhToRuoFbFUdQxHGmiiOvL
      YEUoKEKhNjK37aRQ1Ykg9xspnDgBUrIqeZlVyctAKYlE4cKFu6MAhlrgR//3X1FXU8mTX/0O
      K2qDM33F4xoSsB1Jf8oiaCjEgypFW/L3R5KM5hwUIXh4ZZhHVoVnlHWTXClxx8awEwnUcBgq
      Js/INo4QAk0F27X5WdvP2N+zv+SOnM9Sqz5ByjT5IP0/sEkAMJIbpvfQW/iHUshYAZkv4Obz
      GC06FeEh7OJKcnYeTajUBmtYHvexumZmdxbbLWWV0IQ25fJX+KfYn5TRXeZGZlSAXZ/9Ekrk
      INEla2it8Qb/XChaLn9/OEHPmIWmwGNrIsSDKqNZpxTkBBzvyc9JAaSU5A4dIvnzf8ZJjCKC
      QUKfeZSKzz15PZ3IFGSsDKeHT08saYTvJFXhtUhliKF0YqLYomtZ9JiDPJyN0RnOY6oSLAty
      BVbWL2FwtBEVm5hf5TOrIzy8IoyuTj+Lnegf5NkT76OpKt+7dzcrqybfS4b27CHz1lvIYnHi
      Na22Fv+mTbPuo7kwo/fUGy8/T6iuhe5jb9E2kJ6XRnxSOdyVo2eslLfeduGN9gxBXUG7Nlhy
      pjvrWlbj2H19jD77LPbgAJZtksyOMPT8LyicOTPjd/2qn9pg7cTfqmry6VVhmuJFbGnjuM5N
      4Y9Ls37+pwtN7ByMsWMoyk75FbLZlQQNQX1EJ1OUHLmaJ1W42S9/PMA+M5zmpbMp/vbdEf6f
      A710jcS4PBTh/9p3lauJyRPsGsuWUfuDH+Bbtx6tvp7gfTuo/bM/Q41E5tRPs2XGGUDXFMYS
      CQq2RFMXXx4tCeQtiVDlnNfqtnvz366EWEDlq5ujHOrKc6qviHHDk9NxJa9eSFMb1rh36eSz
      bbGjAyeTYTCg8ErjMN3BMcKWytOX97N38+ZpLWs+1cfX136dX7T/gtHCKDvqd7CxeiPHBo/R
      ne7GxaXaX03EiNBo1NCU8xG2NZ6+WoNWU8sLlfeBIxACTLt0YtyVsGgfLlIfvb4vyPYlSLb3
      knIUDhcq6MlKXIyJ94U0ONSVY2mlcUsbhRD4162jbvVqpG3zRt87HOz8r2zNbuVzrZ8ru+Vw
      RgVYs34rw9kiFRu2Uhedeh0mpUNyNIkrVCorYp+YDXPHiMnzp8dYXx/g4ZUhBAJdnZ0Jd2tT
      gCPdOVIFFwFsawoQ8SmsrjFYU+enfcgk6r8+A9iupHPUxHIk9zRKTvUV6B2zWB43WF1r0JPt
      Yl/ufQZWtHKxYg0jRhbFeocxvY1/do6wNj9MTbBmyvYIIWiJLuN31/4RQ9ki1cEgnakOjg4e
      pdJfSaKYIFlMsr1+O1/a8CQ18fMUz51Dq6sj9tRTRAZCMFhamhhqKflWbVhlQ/3N63bHtJCu
      JIjDnnqVNwfAlXFytg9FCEJ6iKI1vUuDUFVGzAT/fPEX5O08nWOdbK3bypLwkhn7fS7MqADH
      zp7lsc9+nv7T+7k4kGFL8+QbLmvsKkfPJmhuqiIWi6LcQfXuhcRAymYk63Dkamk5YzmStbU+
      di8PzbjujQVUvnt/nPeu5FhWZbCq2nfNvx3ebM/wflcenyb4/IYYa2oMfJrCt3fEURXB+1dy
      vNqWxpVwtDvPhqYh3h74EYm8n3zTg5hSQXNjSPE4ujpA2ucykBugJlhD1sryauer9GR6WBZb
      xqebP01ACyCl5ERPgTfaM6SLDj7NJBgcI2cV8ak+msJNGKrBN9Z+g6ZgE/rXt9x0P7uCJh2j
      JkVbIoSgMabxO/dWEv9QNZZQYxzXchCK4JFl1WhXCrzeliaiBa/VABOsr595U2soBoZqkLfz
      aIqGX518g3wnzKgAm1c08Pf/3z+g+yN8+StTr8OKBRtBkZGRBMual86qTvB4feCFHBO8qV4n
      mfNx8EqRS8NFBNCdNBFIdrXM/IO0DRY4cDnLqmoN17FxHehLWezryOK6kDfhhdNjrHigtClU
      KaXCPNWXw3FK/VZwXV5pb6foG8OVNQg9BHYRV0hUtQJRsQfHriOXj1EwC/zVB39Fe7KUy+dw
      /2HOj5znT7b8CaM5l1fOpyYOxWzHoSsVoLdgkOMCAS3AE8ueoNZXO2k/NkUEv39vlJO9eQDu
      aQxQHxG31nlWBeHW0l7DQbJdTzB06i3OKtWomsbOTfVsqK2asT50QAnw/Y3f5+jgUTZWbySq
      RW/6Tjl+6xkVwNFifOXpR3n+pXexHQlTeEKE61bwSP0Kuk6fZCCdZ0ksMPGeOom9F67XCZ4q
      Yux2Kae8iAZVQQ2hmBPH9xK4OGKxpzXMTCu91bUBHrEEjRV+LqYu8ELHC6TyPvLWk/i1a6Gj
      4uY2qxLqIgbdY/a1tyWuMlJ6Tx9A0TIYIowrXXQjg3QeJiyreaPNQNE6uJi8eFMbjg4e5eUr
      L+OaK8mYlRMemo50GM2PUWVsIqT3o6Cwvno9QV8Q27Yn7cemSo2mypkV/1h3nv2dWVpiGlt/
      /Dfcd/UK94rSg05vC6Fu/Y+o8fiMctZUr2FN9dSF8u70t57x26fPn0U3TVa1xukYSLO1ZXLz
      1djAVc519mI5CjvW+CdC2WDm9XK5NzbllCelJOxTUAS4NyzrSslnZ75WZVDjU6vCDOWG+OGJ
      H5I200gXXDtAs/YYEV+Az66JfKjdkk+tDFOwJQNpi6qQijXSTNfYo+iB0/gib+CYK9i9ZDvb
      Glbz3EmJqug4LuRts5T57VpWjmQxyUhhlB+f+yV+WlALn6M22IimqKUwRkBXbYL++LUry4l2
      3G4/5kyXX19Iky64DAxniadclgKKLGWucDMZiu3thHbuvC35N3Knv/WMCrC2pYFT/Q7rauP4
      q6c+B6iob2ZXffMdNWauSClxJTgSNIV5S8a1vMpgfZ2f84MFXAmVAZXdy0Nz2uV0pbtIm9fM
      yEKiBA7w6Pp72Va3+aaNMJR+1Iqgylc2xyjaLv9yKgXmWnQ3hpWpJFT5ElsaTL65cS0xI4Zp
      ZmgbMtmyJMCG+gi/6qhmOD+M5VqMFjKE7M/jpu8hr5gghwiYYSr9leiKRm1YJ61dAUrJrnY3
      3pnPjZSSdzuzdI5aFG1JlQ5Bt3jL55TgwjhTmlEBWjfeT+vGj6Ipc0NKyVje5fX2DIMZ+9rG
      NDgvBQ8MVfD0pihXEwEKtqSpQifmV+dUFLwx3EhAC5Atqli5LYQCSdZWN94y+MdxpUSIkum0
      e8zCUHWaIk3krTifW9XK3pZlBLTSMnPPsgAPtIYm9lL/Ztu/4acXfsqZkTOE3F/6LWsAAB2E
      SURBVB2EuR+kgnRCCCVNJNzGqooHqAxq3Nu0hd6CTrqYYnPtZuL+mZcl05HIORzszBEPqmRN
      l0hAp27TWux3hxgvX+1bswbfmunr/35UzKgAHRfOEq+O8PN/eZtnvvk14mV0h76T6cuR8OqF
      NKf6C0BpYxk0FLY1zo+7tk9TWDmL4/4bcaXLUH6IqB6lPlTPH9zzB/y/RzpJOI3UKjWE1MlN
      lmN5h38+OUZvymJ9nZ+QoZA1XTShUh2Msr2hmsA0GdGaIk38YPsPuDx2mf/45kHS2RseC1Jj
      e7PgS2uuD/TG2MyF5ixHMpC2MVRBTXiajBaidKCsq4KKgErQp1D97W9hbVhDoa0do7GByCOP
      zJtrw1yZUQHOt1+Ak0Xu29JE50CGeBndoe8E25EMZK4XSZOUlIB5UoC5kjEz/PDED2lLtBHS
      Q3x7w7fZUrOF725Zw/NnUiyL+/DrN89XecvlpbMpjlzNYzkSv65wrCfP3uUhgrpCsuDwYGuI
      isDs5rmmSBN7lzXw67MSKQW2a+PqF7mUytGX3UpDqGFWcoYzNj8+lmQ4ayOAtXV+vnxPbOJE
      +0YqAyoPrwzzTkcGRQgeXxPB59cxHniAwJ49ZTd43Ckz7wGa6zk3qiAdl5aahZPwSlcFK6oM
      hjKl9Nq6KlhZ/dE+VTJFlwOXs8SDKtuaAqg3mIRe73qdsyNnARgrjvGT8z9hbXwtmxoCtFRo
      BA3tlnOEM/0FjvcWGM05WI6kMVbKxVARUPnM6jCWU9rzXBgqEtQVmmL6tAeOuqLzjY27aQp3
      85tLnVxKHSEQvMCZYYe/PvbX/Ifd/wFdmf6BIaXk5fNpBm942JzpL9AaN9jRcus6XgjBnuVB
      tiwpGUKCurjJILLQmFEBugZTrI7pvHzoAo+1bKQqdOvx9d1AVUqelEFDYSBd2gOsrfMhnTsv
      nTlbOkdN3u3MEjYU1tb6iNywnk8Wkzd9NmfnMB0Tv1Za0qiTPD1DRsnaFPUrZE2JIgQNUZ31
      9T5URaAI+NmJMU71FXBcSUNUpyKgsrxSZUdLGGOSicGv+Xh05QoK4iwD7eeuvSroz/QznB++
      aRaQUmI6JW8gxym5f6iCCX+mG+kes5gqOkQIQdj38ciOPKMC2JlBfn6myBd3r19wWhw0FB5e
      ebMnpVX+3LhT0lShs77OT3VII/Ch0be7cTf7e/ZjuaXBs61uGxFjeoeulkqD+ohOb8rimXui
      NEY16qMavmu571MFlzP9BWxX0p+y6U7aLKnQuDAAiYLk8+ujjOYchrMOy+I6hiom1uot0ZaS
      afTaRjTmixH3xyfiE1JFh1TB5cWzKfKWxHZcllX5+Oa2CqpDpQ3tjVSHPh4DfCZmTI0oXYeh
      kQSRUBDDf/M0PxOLOTWiRHI1dZXD/YepD9Vzf8P9aEqpH6ZKjfjPJ8Y4fu2UVVcFf/JANRGf
      Qt5yCegKmaLLX749xFjeYSRXOpVYUqGhAkGfwiMrI/z6QgrHheqQxr+6v3LiSSyRvNb5Gm93
      v01ID/G1NV9jRcUK0gWHHx4YIVV0KNqSgK6QzDuM5R2aKw3+9d4qHBf+6WiC9LUT5OZKnd/b
      XjmhmLNhPIN1OfcAH0lqxAOvPcex7jRf3LmObNUa1tRPXUnQ4zoCQXO0mebo7M9GupLXXYQt
      R3I1YXIlYXFuoMC6Oj+Pr4uwod7PgctZAHyaIFt0CRkl/6KDV7I41x7Uw1mbC4PFCa9SgeDR
      lkf51NJPoQgFVVEp2kVe7PgNF0YrMZQYfiUGukLYV6rWvmd5kLqwhqII/mhPFV0JC0MTtFQa
      M/pBfVyYUQEsKQjrLkeOnmDNZ9Z+FG1atKyruz64Q4bCmYEib13MYKgCV8JDK0J8YUOUldU+
      fnl6jK5Ri4ItsRzB5sbS7DyaK60BBRD1q0gpsRxIWwle7HiB7kw3y6LLeLL1SV7tfJVfd72E
      46/DdMNUhTdgOHvQFcEDawN8dm1k4nAx7FNZWyfoTndzoLeD6kA1a+JrZtxEL3RmVIB71q/h
      TNsryKpGaiPl98bzgKGMzYnePA8sD1ETUknmHVriBj89lkQVgqItWV3jI2AoaIpgW1OAioDK
      fz04ylDGZusSH5/fEMVxoWhL+tMW25cGWV5lcLynwHtdWc6PvUaCtxDCpS3RxqWxSxTs0hmK
      qg8AAxhBlz+656lS3IIhbzpZl1Ly1tW3+PH5H0/sa/Y07uFbG7/1sVaCGRXg4JGj3Ldzdyk5
      6idj1ps3iraLKyGgz+08um2oyDuXsmys908sWSxHsrzKQEpYX+/nc+sjNwXktFYZ/LvHahnN
      O9SGRMlKpCj8zvbr5zQjWZtXL6TpTafpy9Xgj4URaqnQRUey4xbf+mXRZRO1hT/sqZk20/zy
      4i8nBj/Agd4D7Gzcyabq+QlX/CiYUQFUM8+5tnZ0AQ0r7iEeKu8Gc6FZlmaLpBTzWxrwpYH5
      46NJcqbL93ZVzWmNvLMlyLo6H5U3hEfqquDLmyvIFF2iPmXSQ6eAobDEULDtW02/H1zN8eK5
      NP0pm1RBBUUiROGmz3x59Zd5t/ddOlOdrKxYyZdWfWnKNqatNHk7f8vrQ7mhWd/nQmRGBXjo
      81+lYJY6OBxdGGcAdxspS6GAL55LY9oue1tD3NsUYMuSAAXbZa6Ro6oibgkqgZIPUjyoYjku
      L526yvn+JF/dvoKmyukPJDNFh5fPpylYLn5N4I/oDOYjmNnduHYc1bjKmoYkG6s3ck/NPZiO
      iaEaKGLyhtuO5OAlA+wVoJyfeF1XdJbHlk/6nY8L0yrAuZOHKRRt+gZHQQju3fNp6mLlM1mW
      MxDmo+bdzlzJ9QLY35FlfZ2fLUsCM3zr9rgykuGHb58lXbBoiAX5xo6V034+kXMwbclYwSVV
      cAkbgqjWiOnG0AwbIVrZW1M3YZb1a9Pv7SxXoikGT7V+iSF7H1dSV6gJ1LCldgst0Zay3efd
      YFoFWHfPfbQdeZ3LXd3owUoenMJzcQJZOkBRNXVWrsIf5yXQkpjGhcGSt2Z9VL8puL3cVId9
      rKuvoH1wjKXxmVOo1Ed1KgMqOcvFcgRBQ8FxFSoCFRPnOIYye2UN6ApPb4oBMaB8ufkXAjMe
      hL322it85tHP0n/6AAPR9WxpntoZbuDKWfaf7OfpLzyCyif7IMx2JReHihRtyaoaH8HJ/BCm
      4HZqhBUsm0zRJh703eL/M1mNsIG0xUvX9gDVIZWHVoY5dCVH16jJimofT2+KTrtZL3c/LtSD
      sBkV4K1f/ndOdKdw8jnQ/Xz2md9hQ/OtPuN2IcXJCz24xQxbd9yHuBbu6DjOlEud+VAAx3Gm
      DMG8U5kXh9L88ngnAUPja/e2Uh2evN22tMnbefyqf1IToeu6ZV3+jdcI/rBCScBxQRUlC568
      FjykKsw4Q5e7H8dn+3LHf99JG3Vdn/kkeOO9O+jPHyNady+feeh+jCl2eBdPn2SsqDJwpZOG
      FetojJc2akKIKW9aUZSyd0q5B9e4zKLt8tdvnuFUzyhCQNFy+NNHN90ShdaT6eHnbT+nO9NN
      daCaL6/6MisqVtz0GSnlpAN2JqSEoiMxVHFTLPJ4H04m78M/12yHS7n7UUo5L4p/x7WRZ/rA
      +8dO8+nHn6TnxDuc701zz9LYpJ9bu30va4ETwQD1VeGJJ8x0CjD+g5WzU6a73u0wPlhtKUnm
      zYk2D2eLt1zLcix+euGnnB45DcBIYYRnzz/Ln9/354T065ab8R9uLgpgOZJ9HVnO9hdorTL4
      1KrwxBJmfAZYyP24UNs4szfo2AD/+I//QHF0CPtwO+rXvjXpEmiczVu3TPnex5mIX+e3Nrfw
      T+9fwtAUvrhl2S1P/7SV5kr6yk2v9WX7GC2M3qQAt8P5gQJvX8rgShjMlPJy7mldOPEZH1dm
      VIC9jzyOc+godl0duz/zBZbMIiXGbJnvAhnJvEPYp5Ql/bgiBF++t5VH1i5BUwSxgO+Wk/GA
      FqDCV3E9+B0I62HC+tyyP0/GYMbhWhIHJNwUDedx+8w4fxw8cgw0hTVN1ZhlTjo136QLDq5b
      PjOrIgTVYT8VwVsHP5SSzz6z8hlqAjXoik6Fr4JnVj5DhW/69OWTUbBdDnZmeedShrGCw6oa
      Y2LJY6iCtbULI6b2486MM0B9fRNuYZQDJy7w2IqPV4WYyZKv3g5WpkC6f4DYinpUY+ouE0Kw
      pXYLS6NLGc4PU+mrpCZYM+eZzpWSX51KcfpawP/ZgSLfuq+Sr22JcW6gyIpqY1b5+D1mZloF
      GOjpJFIZB+J8qq512uS4nyTSRYe+lE1TTCegC8x0ntxAkvCSqmkVYJywFsfWY0R0FXEbOVIt
      R9I2dD2XTl/KIpF3WFHtozGmc6Qrj5RF1tb55i0X0mxIm2naE+2sqlw1Y7TbQmXaX3N0sI+r
      /SOcu3iZDevWEW9sJfwJ94guWC4/OjhKMu9QH9H47s44oYZKInWVKLMY/DlL8vMTY3QlTGpC
      Gt/YVkFsjjUANEXQGNXpTJhYjkXG6eVXHS+zo2Ezir2O19rSxPwqzZX6XY29/dHJH3Fq+BSb
      qjfxg+0/uGvtuBOmd4XYuotVhQx6OMqnHnjwo2rTXWUkVwoHHP93quBQ4QPVN7sTx66EScdI
      EVdCT8riwlCRHc1zy4KmKoKvbonx3Lk+Xr38BtI4zqH+BIf63+Ybq7/P8qpVNET0m9KqjBUc
      usdMlsQ0XAmvnE+zLG6wsyV4SxjraM7maHee1iqDVMHlbH8Bv66woznIkpg+a7f38fhiV7oz
      fHLhMq0CvPKzv+PE5RFMy+bwwUM8/Xv/mtX15TO95W2JAiykhVV9RGNtrY8rCZM1tX7iwVJW
      59kS86sENIWs5aIpJW/O2yHiV6mInUAE37xpETVcvMjv3rsDIZgY2JYDvziZoitp0RDV2VDn
      5/xgkZGsw7amADiSdy+XwiV3LQ/y6oUMp/vyvNFe2lBfS0LN5RGTb99/a7rzqfjepu9xIXGB
      NZULI8vb7TDtnX72K9/ls/N48bwFc4wdmXdURfDVrRXkTHciTclcnm/1UY2nN0VpHzJZWqmz
      PH77G/HJ/O/zdv6W2ABbSjLFUmxCpuiyotpgRyHI0godnyY42p3nrUulUEu/LqgNl3ISJfMu
      yg0JfpMFh44Rc9YKEPPF2FH/8TKMfJhZeyaZ13yBjDlkApiJeGBhJUySUpI1XaQcz/489/Yp
      QrC2zj9lMeq5cE/NPbzS+cpNUVitsdZbPhfQBI+uCXOmv8jaWh8NUY0vbLievCCgK6jXivIF
      dIV7mwJsqPfxWluGC4M3J679pAS7z5ZZK8DFkwfwLd/ziS6TKilFdZmO5A92VaHf5dQ3qytX
      852N3+GFjhdIm2k2Vm/k/ob7J/3s2lof6+snd3FeW+vjG9sqcaVkZXXJm7Q2rLFnWYjupDWR
      86e5QmfVR5xd724zozfoG796lrNXk2TTKfRIDV/97d+mKT67fcBM7tDFYhEpJf4pasNOJfPc
      QJHaiEZ16Fa5d+IiK6Xk7EAR25Hc03i9xsHt5AWajrm4Q5dSwLtIJKqY/Dvj7tDpYmkGq41o
      szr9lrKU8PbSiIlfE6yt9RM0SnUPFos79IytKQg/3/zWdxg4tY9BN0R3//CsFWA+yJouvzg1
      xqZ6P7+1aXLHvNtFCHFLwbe7jRACVcw8FZ0bKPLcmTRF22VFtY+vb62YcTkjhKA+qt9U4XGx
      MaMC7Lx3M6+98BxKoIJd25aiR6euQvhREDIUvrG1YiJ7gUeJty9lyFmlpUzbUJHLIyarPXeJ
      GZm5PkBHBy3rtrJtw0o0dW4uvPOBEIIVi2ydOhs+HJK52Dazt8uMJp1tux4mUOznf//f/oLT
      PZmyXvx2gkI8JueJdVHqIxp+TbB3eYiW+OJd1syFGWeA4+/+hsNtAzzy9O+yZppDsFyijxPn
      r5AvmGzftYuo3/sBPkoaohp/uLsK15XoqvdgmS0zKsC6bQ8Qb7zK8WMn6W1ZybKayU1tgYp6
      1qyUXLrUg0DguqX16Hgo3GSMvz7V+7fDdNe7XXnlljlVDO/tcmO4oaKUJ9vGfNzzfPw2dypv
      WgV48/ln6RhyULLdND/8r2iums5CIjGLJoriYtoOIUOZ+CGm+zHKnRplvuSV+8Cu3G0sdxWW
      j0M/lkPetApQWVVLYKyPgd4U1fk8cpoHVrL/Kpe7+ynm8jjyesC7lHLKyP3xKvLlzD7guu68
      ZDMot8y5pkWZSd6H06LcKeXuRyFE2WWWQ97MBTKkxC5meP/APpo2f4qW6smXQDeLEdfScHxy
      8wLNBldKknmHCr96Uy6f28kLNB2T5QW6UxbLQdiMPSaEQPdH2PPpJ6cc/OOfu/7fbbfpE0Wm
      6PLTY2OM5j9eoaSLCe80aR4J+xR+e1sFEf8Cc3n1mMBTgHlEEWLO0WAeHy3eo8ljUXNXFeDj
      nB3a45OBNwN4LGo8BfBY1HgK4LGouatWIM9hy+Nu480AHouaBakAUkoGcgOcGzlHxsx4liKP
      eWNBHoRdHrvMfznxX0gWk6yNr+UPN/9hWVKMe3h8mAU5AxwfOs5QfgjLtTg/ep7eTO/dbpLH
      J5QFqQAt0ZaJ4nJxf5y4f+qKNB4ed8KCXAJtrtnM9zd/n6vpq2yp3UKVv+puN8njE0rZFCA/
      NsDxsx2YluTe+3cQ9t2+aE3R2Fa3jW1128rVPA+PSSmbAvjC1ezcWcP540cp2i4h47rlZior
      zkINk/uwvBv/Xy6Z8xFiuZDbuFD7sWwKIITk1AfvE2taQzxk4F4Ld5wuaNm9oZh2uXBdt6zy
      xu+h3G2E8h0EjhcjL+fgmq97LiflaGPZFGDgwlGG7AB6YphCVYyArk78IFOFwY3HBJczTG4+
      5Nm2XVaZQFlDIoGyh0SWux/nIySyHG0sW2uqV9zD9nwRUNCnqCbv4bHQKJsCaIafmLGwEst6
      eMyE96j2WNR43qAeixpvBvBY1HgK4LGo8RTAY1HjKYDHosZTAI9FjacAHosaTwE8FjWeAngs
      ajwF8FjUeLlBPRY13gzgsajxFMBjUVM2BZBSkujvYjhtlkukh8e8UzYFsLIJrlw6T0+yOOvv
      eJXiPe42ZXOHNsJx1q5oos0q/T0e7jj+/8mwbXuixGe5KGcc63zJdBxnolh2ORgPNyznw6Tc
      9zwfCRDK0cZ5iwdQ1Zljgsc7pJzlOIGyl0ktt0whxIIvkwrlvef5iAmGO29j2XosM9LLsYtD
      jHaeYiTj7QM8Ph6UTR3DVY3s2ttYLnEeHh8JnhnUY1HjKYDHosZTAI9FjacAHosaTwE8FjWe
      N6jHosabATwWNZ4CeCxqPAXwWNTcdQXwvEE97iZljQfou9rB4Gh61t/xBr/H3aZsCpDquUB/
      Tudq+xnSRbtcYj085pWyKcDQUIFVq5fSVB0nXfS8QT0+HpRNAfy6SzrvkDeL6OKuby08PGZF
      2UZq4+o1dB0/xIipEw97pZI8Ph6ULR5AMULcv3tPucR5eHwkzFtIpHNDnWDbnnxTPF4neKr3
      b4fprrdQZI7fdzljgmeqyXw7Mst5z+NuLwvtt57XmOCZGI9hLXcsa7lr0ZZb5nhh63IXyi63
      WbncdYKllLMaF3NhwdQJXijMx9lCuWUudHnzIXOhtlFIzx3TY5EihPDslR6Lm49WAaTk4umj
      vHtgH+3dw6WXXJsTRw6y/5236U/mb0OmwwfvvsO+ffsZyZSy0jn5JAcPHmTfO/sZThfmLLLn
      0ln279/Pqfar1y/j2rz7m5e51Je8jTa6nP7gEAf27+Pq8DVXEWlz+uj7HHrvfRLZOR4cSpez
      x97nwP59XBkcA8ApZjh4YB8H9r1D93Bmzk10XYvzJw7x3rH2idfM7Cj73nmHfQc/wHLmulCQ
      jPR18vKrb2K64812OHP8fQ69u59zl/vn3EZwuXz+GG8dPH7Tq4X0IM//8hVuY/R8xArgFEja
      Pnbv2cvYQBcAViGNEqplz57t9F7unLvMbC+yai27tqykq3cIAOGLsnPn/TTXRiiYc7cSDCTz
      7N6zh2JqcOK1/ivthKobkPZtZCMrJin46th1/3YGe0tKlRvpZTBjo+l+/MYcN4ZmipxWxe5d
      9zPcW+pHx8yhhapZvbyWsURu7m1E0LxqDapzXRmHrnSyavteVsZ9DOXmfrofiNXSGA8xscgW
      Cuvu2c6m9a0UsrfTRqhrXkHohu6S0qWt/SoN1RXczlr+I58BFE0DxITlR7oly4BQdRRuY3DZ
      ForhQ9U0cEtdoCiCCyeOYAbrWVIVnrtMtWRRUZRrPW2mOHDkLCMD3bRf6px7K10HRdcR4rql
      xraKxGqWsHFlPecudMxRnouia3BDblWJClaWnuEc/ts4h1QUDb/PuOk1xxHouoKuKTjuXIeX
      IBgMcuM2VQgY6r7E+a4Um9Yvn3sjUQgGb765/vZjXB5K03X1Mld7hucs8aO1Aml+1NwoJ49/
      gBKoJjM2iuoLkB4+w7FkN5GmTXOXGWsif/xdjvTrNKzezPDwML5iH5cSguXGKOl8JdGAMbOc
      G4ioLseOH8NWAhSzSYpKiGe+9EUSvR2MuhVzf2oEKnGGD3E800OoZjmJ0REi8QZybUe5UAgS
      ji+dmzx/FJk4x4njA/grl5JMjKA4JkXLwadDvjD7BMXj2MUs7e0X6OkeoLm1BcUtUL2khg8O
      H0Y6Fjta5taHSJeeKx10dfegV15laU0YVJ2jJ8/T0rqCweEkjbWVc5PpFGlra6On5yoNA834
      VZf6Vdv4wkrJmfeP0NRYNTd53AUrkOtYZPMmoVAQ17YQqo50TAqmSyjovy3TlmUWMG0IBvyY
      ZhFNFWRzBUAQCIXQ1bkNWek6ZHN5/MEgiuvgCBVdVXAdBxeBNkd5AI5lkjdtQsEglmWi6zqO
      ZVKwHELBIHO9bcc2yRdsQqEgtmWi6jpWMY/lQDAYQJmjQOnaZDI5JODzB0E6GIZBMZ8DzcBn
      6MxJopTk81ks20VR9dIyT1Ep5LK4EnSfn4Bv7kqVyWRxpUQ3/ChC4vP5ALAtC1WfWxuFEMIz
      g3osWjwzqMeix1MAj0WNpwAeixpPATwWNZ4ClBlpZ/jRX/4fHL04MKvPj/W18U8/+Rm/evE1
      MlMc2l068iZHO64fyuWGLvP8G4fK0t5x2k4dJ7MIQ7k/cd6gd5vRK2eJNK/hzMlTVI6dIlO/
      m3z7PmpXruXwgfdw8nke+trv0xAofb7/0hmUmjV8/lMbcfNJfvXCG5iuyqOfe5wDLz2HXrWU
      lZUBXMfhvXde4/KowqP3NjI6VnJ3aP9gP6d6k6xcs5GO82f4whN7eek3R4kySkEJkraDbIrn
      OJ0wMHNZPvfobt78zZsUXI0nH7mX514/gitVBk6/w5LdOb7yxO5FNSi8GaDMHH//GEXhcO74
      cepWLOfYoYO0Xe5j4NwRGrc8RJQs+RviVlbv/gLrQqP87d/8N9478BbhFTvZ1Rrk+Z/9hGTF
      Rh57eDd2epiRdJ58Lkf7+Q/IFK4/qvP5HKblEI4E6OnuRboWPb0DDIwk2LrrEWTvOS7397N0
      w07qSfP6a68SXbuLnc0K+462c2mgyNe/8hSty1fw0MOLa/CDpwBlxqEno/DUY4/x8Pool3J1
      qH37Ues30Vhfw8WTx+gZTEB2kOfeeA+A/stt5LUoMd0lVLeU3gvHOHK+hy07d5PtPMHJMxew
      XHDtLOc7eolFb3btiNU1srzWx9v7juMnz4kz5yk4gP3/t2/3OgmDARSG369YaKXtVygEiSFx
      MCEh7ro5ewvuDt6X7o4O3oG/+AcOog4uUqjUQqGl1GuQEBMjz0Wc5Zwz5qF5gaeYyJWUTvuO
      Zy9kq1Hn/fGay6cPNmsOTrmCqgiK9ir3t615xih/2rIIW6gZvj/EskyiMCDJaCSjAYouESOX
      q1aH5vkN+4cHzMIxRWmSxBO6bg9VNylKgy+vx0RkKRUshoM+o1hg53NMFZUo8JimClJajKME
      M68ThQGu52M7ZZgEBHGKls1yenJEY3uPjVqV9tkxbnWXnXoVaWj4nksscpQsjUGYIA2daRTS
      7QdU1sr/JhWXTfAvSqKQl9c3dLvC+k83MHPo97qYtoOaURh+uqR6ASO32DviXyeEEN8m3A1J
      E4NcRAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Comparison of Happiness Scores Between 2020 and 2024' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2d2W9k2X3fP/fe2otV3JdmN7vJ3nvIGc1oRuPIkmVZsS1DtuEYjh0ggZMA
      CZC8GAHyZicvgR8MBPkHkjw4RhzARmI5sRyN7MiWbI0kW9aMutnNtbk0WVyKW+3L3U8e2FyK
      dW9VcchmN7vOB+iH/vFb5/zuqfu7y7nnW1cRQggkkjZFfdkJSCQvk3MvgEqlct5NSiQvjHMv
      ANM0z7tJySXGdWwKhQKO+3KutHWrgivAdW0M00K4NoZpH/498FKykrQHwuEbX/vfDIyMcfPe
      BEZ+m3j3AK5ZJRGPUDEdzHKZiuWildf4wYrBl37sLRzHomo4DA32UiyUSCYTZHa3qRgOw0N9
      pFLr9AwM4xoliqUK0WgINdxBVLXZzetcHR5EVfZTSD36Abff+yK2XuSrf/odxq+E0Ubfp1cp
      Ee3qlwUgeXE4eomCG+Ur777LyuMPmS92sPfdv8OydX7xJ9/mw4VtNqbWGOxxuTF2nZKusvb4
      +3y4UuJGxGR7/F3WU7t85e//GF/96h8x1NOJ89mf5NGPfsBWOUjEzvDgRj97kWsUNtNUduYx
      LZXP/fI/ZfxaN65RYKUU4g4QjHYzfjXCxxsOPzewyP/8y0cogai8CZa8ONRwFMUosLO7Q65Y
      JRLrQDg2mnDJ5HK4AhKdPXR1RIknu4iEw2iKytvvf46f/srP8s3/9YeMv/MpAOKd3XQnYjx9
      9DckR98korgEI3GGhwbo6hsiHAChRfmFX/lVRnpiAKQWZ7l268FhPqMjQ/QNXcMyda7dfpNf
      /vkvoZz3NGgul6Orq+s8m5RcYsxKgdmFVe4+uM/60jxdQ6ME7ALpTIm+/j4cwyEUcIl29pBa
      mKW7b4hgPEHQKfMnH3ybX/3VX0YRgp2dHcIBlWAkzPKzdfr6+1GEQ2c8gqGEMSslwprD8toe
      9x7cJayp/OU3v8lP/PTPEHx+OWTrJfKGQk8yytL8DIHEwMUUQLVaJRqNttzGafW6rhMOh1EU
      pSW9YRgEAgE0TWtJb1kWAMFgsCW94zg4jkMoFKqL27ZNOBxuqR0hBLquv9Cxe1X11VIeW42Q
      iDUeK9/2haBcqRKPxxrqL+QSyDCMF6o3TZPT1LFlWbiu27Letm0cx2lZ7zjOYdEcRwjhGW/E
      aWfVXvRYX5Q+2tHZdOdv2L6i1O38Xnp5DyBpa2QBSNoaWQCStkYWgKStkQUgaWsutAD20psY
      TuuzL7mdLSpW67MvRjnHXr61xXiOUeLRo0esbGxzfP6oVCp56l2zwuPHkyyn0rQ637S6NMeT
      6TlMu3abK/k9Jh9Nkt7LH8+IQsGjb9dmfuYJM/PLLfUrhMvTmcfMPF3GPTYzVikUsByLXLG+
      j7XlpzyemkFvcawzW2tMTj4mV9Jb0hcyWzyanGQn5z22J3GtKk8eT7K4ulmzzeVSAdtj9ynn
      d3n0aJKtvUJL7W9vrDD5+AnFqnX+BbCXLbAwN02meGJwhMvG2gLLq7uUC1l0y2Uvk2F7Y4X5
      pVXqZjGFy1pqiZXVNNVSloq5r99LrzG7sIzX2qrU6iqrq6vPd+6HLK5usr2xwsKz9br2rfwG
      3aNvUdpepVSuMPXkMbv5MsuLc0xNzWA6tR+wS9skhu9h59bYK5SZfq7f2Vpn+sk0usc3ozsK
      t652M7u4UhNP7+W4/8YbrC09pVopMDU1TdU0WFneqN8o24BoN8ORMnObJVYW51jfzpDZ3WZu
      ZppC5cQ0qWOhRBIMhCosb5d4tjBLKr3L9vIKFeHWjzNQseD+WD8zc6tsrT/j6VIK26ww9eQJ
      +XL9NONuocLE+D0W5mYo53Z5Mj1HPrfH1/7k/7CVqd8JtzMFJsbHWV6Yo5DPkXq2SiazxeOp
      2bqDw/5Y79Jx5TYUN9jcyVHSLTKZPdJryxgeNVrIZRi7P8Hq0hyFbAbLhUxmj+zuNqn1dJ0+
      VzaYeHCbuZmZ8y+A7OYS3VdvsrOxWhPX82kKbpLd9DOyu5tUTJe19TW2t3bQVAVx4vhmlrPk
      jCA76RSlTJp81WFtfZ2trS0CmlpzdAMQrs3Wbp5Sdgc7EGOoJ0lHTOXR46dsPJunaJwYaAFP
      pyfJGyDMCoZlMTM9h1ACjAzFSe/Wn0kW556wW3JQ7SqmbTE9PUd6e4+bI0lS6fqjW2Zrjan5
      ZZLJzto/2DpPJidx1TCzTx5TrRRZeLbuO6Ybq4vMruWImts8Xd1lfm6Oza0tblwfYiO956lf
      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
      gKSt+f8N4X/mFStWswAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      HHeXbZYvSgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Happiest Last 10 Countries ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Happiest Top 10 Countries' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Per Capita Income and Happiness Relationship' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Regions avg. happines score' width='192'>
      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
      hg/7he0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 10' width='123'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='World Happiness Report' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOyddZRV1dvHPydux3TBFCDdoKSCgIKKYqCoWNjd3d3dnT9bRFIQUaQElO5m
      AiaYunfm5rkn3j8uXBxnhhxg1Pe7Fmsx5+6z6+xn72c/KVRXVxsmk4l/I76d+D3TCxYiiMLu
      h7pBRsTNDtWL5hDBMEisNFFuD9IjtR0uuxNVVTGbzcwqXkqkIsAzV95PWloa97/1BMnWBDaW
      bCXiFtFDKi21FJJbZbBw0zJScOFwOXn4hntYs2YNL077ENEq0zelE+sKN1Lqr8Sc5ABADhi0
      isskzuZkxfIV9OnVhwvOOe+gx6yqKpFIBE3TMAzjoOtrCGazGVmWCYVCANhsNkRRPGTtHSrI
      JpMJq9V6pPtxSLB40woWbltW65m9RsSV25255csQBAE9rKJ7FaRkG4v++JNUZxLb1ApOye7H
      fO9iNL9CWFGw2Wz0bNmZB75/CclpRqgQMQyDP/P8PNn9Phbmr+DWARdz6aiLsFqtTP19BgsL
      VyAIAuGiaiQVFvnWI1bJGIaBOT9E15MuZMOWTfziX86SqeuJiCrXXHDFQY05EokQDAYRRfGQ
      LkhN07BYLFgsFgzDwGazIQjC3l9sYvjnkew+oqy8nF9Wzqv1TK8K8djo26kIemPPRIuMnGpH
      EAW0NAvFbj+S24zf78PQdCSnmUWrlgBw/umjeGT4jcTpNgAEQSAxLoGstEy0Ih/DjhuC0+kE
      oNxTGWujeEcJmzdsJlLmjz4wwLfDy5Ofv8Knn39KuKgab5zKW99/zJp1aw9q3KIoIknSQdWx
      rwgEAgBYLJZ/5OKHvRCAYRjoun64+tKocDocvHTVIyRq9tizDEcy2RmZLNi8FAzAMKL/dkKQ
      xeiHlEUqlBrkoIEgiYydPRmILq5Lzr+Ie067Fs2nECzw0NyVytJ1K3DqFkRx98JTxd3zVmH4
      sCe7kN07T1oBxNZu4ro1x9EyGdltRRAEvEKA5195kdVr1hCJRA5o3KqqomkasiwfkkUpSVKM
      wAzDIBQKoWlao7dzuLBHAnjgtXsZ8+yFLFy+sFEa83g9VFRWHFLedBdsNhtDB53Aw+fcgh5S
      aS4kMrLvKXTs0JFbT7wU13Yd/x9F6GpdAhcEgTXCdrQ4GYDVxZvw+/2x30cOP4Mcknj43Ft4
      8f6n+XLaWMJH2Xji05dQFAUAp9mGEdYwNB3FCZLNhNmQY/WbEuwIsoizQxrmZAcYECj0MG7q
      BE4cNZzz77ocVVX3e9ySJGE2m3E6nUiS1OhEsGuxm0wmJEnCMAwikcg/dqOUHnjggUdkWa73
      x4lzx1PBDuKIp0eHngfciKZpBAIBLn/8Zt754kP0QIRm6Rnomn7I7x9ZzTMJbPfw8u1PMqjv
      ACRJoqSyjOnr5yG2cCHK9bMLgiTGFk+S7OTS4eezS1ggCAKjhp1J757HMGnaFCYX/Y4oixRs
      L+Tc40bgcrnITctm659rMSrCeC0K1XIIw7KH/UYgekKYRMQkK/lrN+MyOejRtdt+8fKiKMbm
      VJaj943G3qFFUUTXddxuN4qixIQG+8N6GYZx2NgmXdeZNHky73/0ARazhU++/ZzmqRkkJiYi
      BINBo6FFuKNsB7quk5qSesAXqvyCfC67/3q8UgiPNYxWHsRkM2OWTKSGHEz84NvYwjKbzQc9
      KcXFxcTFxWG32xsss3z1CkY9eCXBSAi3w8VRGbmsrcxDswv1tm9oOoOcXbj/prtJTkpiydIl
      DDhuAADTf5vBle/cgznRjhZQePbMOznn9JH4fD4GXjcCjymEYJJqS6J21atHWTBBqj23wYIq
      wiU+nIaZ7r2P5qHr7qJbp677PAeqqhIMBrFao6xVdXX1Pr+7N8iyjCRJRCIR3G43fr8fRVGw
      2+3YbLZGa6exMH3Gz7zzwXvsqCqjyLuDFunZbNyRR0ZqOqcOGLZnAjgYKIrC5999yfs/fsE2
      fxnWZu46ZVRfmJSQnYrqKpIzUrl8yLkM7jsQl8tNSnIyNTU1uN3ufSKKQCBAUVERVZ4q3vjw
      bT5+8wNqfDUICLjdddsuKChg0rQphAwFHYPCTXmMWzUDW4vEeus3VJ32tiyuOfkikhOS6N27
      NwBfj/uW+6a8gmSJnqLuIhj/xhdkZWYxd+Hv3PHs/dQE/YQyTQiySMQbQpRFJJsJqhQcNSL+
      DAnBWnv3LJu9mfguzdD8CkMze/Py0y/UO476EIlECIVCqKqKLMsoitJou+2uu4XNZkPXdWRZ
      Rtf1Q8JuHSjKy8uZNXsWycnJvPrG68z+fQ6O3s2wVYsEnDqCWQTdQJSkQ0cAz739Eu/88V30
      Q+8jjIiGHlSxSxbaJueypbSQ8weezu2X3bjH43Xz1i1c/+QdyDU6zbIzmVG4kAkPfMyX335F
      z249aNO6DZGIQo/uPWIf6fYn7+OHTTMRrXKsbcHU8Ec0dANlhw+TR+P3r34mLS2NH6f+SFxC
      PGPevB1cJgzDoKUnjneefI2WLVsCsGXrVubOm8v4qRPZ5i3FZLfgKS4nNTEF1SUy/OghfPHT
      WAJZJkR590mgVAUwFA3/hnJcLZK57qSLueu6W/dpHn0+X2xX3qUTaCweXRAETCZT7K4jCAIO
      hwOz2dwo9TcG7rjnTsaOH4fVZKFKDmJKsmNtlYDmV1CqgugRFSOg0j+726EhAMMwOO7KUyk1
      1xx8XZpOQrlMixYtGNHrRC4cNRqAd99/lykzptGlSxe+XDYFQ9HBKiE6TQhmiYEp3di4ci19
      uhzDb/mLqBB8nNl+CHdcciNpqaksXPwHF71yC4ZDAkGol0WRFYGIoCGYREIFHlpqyZw8eBi3
      3XwrRUVFDL7ydHpmdaRi+w5sOQmsrc6jbUIOkcIaXn/+Fdq1a4cgCBiGwUX3XsPvJcsJrC/n
      0sGj6NO3DyvXrUYLRWjWrBkvTf2QSHJtyY0aUKheXoRJFbl5zLXcc9td+7TLKoqCz+fDZDJh
      Npvx+XyHbHe22+1NQgxqGAaqqvLSay/z1LNPY7hNOI9KwZYZF9vYQiXVyA4LktNMsNBDZHvV
      ni/BPn90EvdncOFwmPHTJjFhza8gH7yaQRAFKioqKLcHWbhxGbaghFmQufGleyl2+Fldk4cU
      Z0F0mxHtppgoM89XQo2ssKZyKyG7gWiWWFeZx/+mfENVSQWDew2glas5nVOOwhoQyAuVxsZp
      GAZajcJpbQaQoNnZVlWCIQuU+6sYc8r5rFq5ki+mj2WLWMa2UBlXD7+ITi3bMnfbMirlIGVF
      pXi2lTN//WIGHnMsoiiyZPESVnm3YmnmZumyZdx71W107dSVGbN+JSc3hxbODBZvWYlg3U0E
      oklCNEtoRX7i0xM5ZdAwGvpWf4UoipjNZqxWK7quI4riIRFVOhyO2D3jSGPRokW89d47fDT2
      c6QWbsxJDpTKAIZuYE6I3geVCj/mFCeCIBDMq6TfqA7scTbvfvFOenXpxUUjLtmnS/Btj9/D
      9LXzCNn0OjxtYyBk1nhyxjtYxwv4ggFcCekNlhVEAewywt+eqS6BT1dM4ssFEwl6/HRo0Zbu
      KW0wSjU0RUNSDLpmtqNfh+6sLt1Ema+SG/ucT0jSqC6pJD09nbzCfHq17c6yvDWUmmv4ecFv
      9OrYHalGx7AJSM0drM5fx7bAUnrN6M7wE05me0kRhm4gGCAlWvF4PCQmJnLykKGccvIpXH/X
      zbSLpLPOX4bk3M1OCAgEPX6uGXXZPrMZgiAgSRKqqqKqKqFQqFEXqSRJ2Gw2mooJzZatWzh9
      5BmohoYpwYaleQKqT8GkG+iKim9TGYYB4l+EDRm5buKau/dMAJJL4KfKyVR/U82VZ12N1dIw
      qxQMBtlSmEcoDgTh0GkiBZNEOIE9Lv691iEKqE4Bk9PFlpJ8hrbvz0td78Zf46fVUa0wySZG
      33E5Kjpamhl51i9889EXMbV/82bN2Lx5M/7yalJ0Mw8+ew+FpdvRVv6ACAgWmWojghFWWb9+
      AyZk5m1fhpRsQQtGGJDYha5dulJeXo7H6yUUCtGydSvMsonQaoXtgh/dEf1Y5jQn7n7ZjBoz
      mk/f/pD+/ftjsVj2OkZVVfF6oxrvg138ohg1+7BarZhMpn06hQ4XPF4vH33yMRnZmRRt345q
      hsiWCkSLjKNlMpGqAHpYxZoRFSDETlc5OqY9skBTF0whkhCmMJLH3Llz6ZLdDberfkmEyWRi
      +PHDWL98Dfk1xVAPT32giHiDmOIa39bE0HRObNaLNpkt6dy5M2FF4bXP3mHT2g3YRQvF1hrE
      BCs7VA9jf/yBDEcyqqoy5495rF27lnkVq/DJCkvn/cn3G3/B2HnqCbJI2KJjigjcf9Et3PnI
      vdQkGwiyiChLHN2yM0OPHYLVaqVD+/Z8P2U8z8/+mMJNeYR8Qdo0a0Gp4Y2NV3Ka0WwC37z5
      KUtXLOO04aftdRHusgmC6Ec/0LkTRRGn04nNZsNsNjc5g7fJU6ZwykknM3fWHLZUFmLOcOHI
      ScSa7kYQBWSHmYgniGQzIZp3z1lAMRB8oT1fgm96+Tq86RWxv80ldl656g0cDkeDHVJVlWuf
      vJ2ZJUsabcH68yuxZyccEl7T0HU0nwIaYImKJ5V8L8bmGsz9M2JSIgA9ooGiIzpM6MEIos2E
      Whagt7sdi6Q8hL/deQzdYHT7k1i2fiVrKdpdj19h/J3v07lTZwA++PITnpr2Duf3OIWHr7uH
      2b/P4erPHqzVNkQlQ0qFn/O7nsLDDzxEXFxcg+Pyer0xAhBF8YB37fj4+Ca36P+ODRs2cMKI
      kwhnyLjapdVZJ4HCKsxJDmT7bhbS0HXiVWXPLNDfUamVc/+T9+FobqN7bk/OOnlkncmRZZlL
      Tz6PLW9vpShQhprUNPjEhiCI4m4bnZ0wZ7nx5lcRyavE1S419lw0SWCK7vLiTvGulGhlwY41
      yGl1NwVBFPh80SQES/Qyq6sagiTi0C3Ex8fHyp074mx6dOhCx/YdMZvNbC7Kr1cqZU6wo/oV
      Phz7P2bPms07b7/N0T2PbnhsOxfCgW4cTUm23xAUReH+5x5FzbYiifWPVXZZ0QJKLQJQKwPk
      Dmi+N2M4iAR2G2WZnDLbygopiNvMdwVf8MvvM2rZ9SiKwtjx37NyzSree/BljEI/CRVNh1/c
      VwiSiL1dMpbkhk+6v5Y1ZTjrXbAAksuM2WdgqxEIrtxBYtjGW9c/RVZmVqyMy+mkR7ceWCwW
      Vq1bzdu/foFg3n2PUioDVM7bihaKYE13Ed87mwJzFe99/lGD/dqlsNolhj0Q7IuExzAM/lj0
      Zx27JY/Hw69zfsPn8x1Q2/uKhx95mPmlK5DjrZgT6/9est2EFvybcaFJIlAV2vMJECpQ8FdH
      iD9xp6mC20SwdQ12wYU13sIHi99C8UcYPmw4xSXF3PTwnSzybaC5nIRPCZKalkaBUYmJvS+k
      pgZzmgtd2X9jNNhpRRtUEW3RReg027nsuLN5Z927XH/8BRzbp3+976mqyi2vPojfXPtjGYrG
      KccMpsRbzoqCtTi7ZGB4wlx89gV77MNfrTb3FRaLBVVVcTgc+8Q2zZj5C7fcdwejLxhNv269
      2JC3maLCbVTrQaavncvp7Qfz1AOP7XP7+wOPx8PEqVNQ48IQiOBqm1pvOV3V65ibyG4r2zdW
      7pkA7HY7A9oP4I+y3xE0AXOaTHyWm6AnROUaL1nmXE66YRjrN6xn5J1jCGXISG4LJfh4e8l3
      kAYm8Z+3+Hfhr5em/YIBplKFrPQU8kwVNLel8ObXH3DSkBNwuVx1inu9XqxWK6qqckxmR/IK
      ZyL8hbVUa0K0Obo1Nw29gXPuGINvbSlt0lrQpXPnBrtgs9lQFAVd1/eJjZFlGVEUMZlM++zc
      4vf7eejRhwm7YfzMKSxcuZgV3s1o4QiWDDdCnMikNTMZNm82A/sP2Gt9+4slS5YQzJAwO52I
      lrqstmEYKFs8nNVzGI52TsZvnIliiW4GgiAQDql7ZoHiHHFcdOYlPHv6yzxx2rP4i6OXKrPD
      xIhuZ/LG428iSTJtWrfhrvOuJ7y1KnbsCmL92tX/AgRRQMu1UxGuJrCunN5tuxPJMLPas5Xc
      Vi1rlQ0Gg1x87zUMu3kUJ9xwFt+snQ7UnjdH6xTGzp5MdlY2Vw+/CJdiZsbkn/ZoGySKIhaL
      BV3X93oC7LIgdTqdMUnPvhCAxWLhtZde5baRV7O9pJiVobyo2UGzuNj7QTf8b8I3jW4C7/V6
      mb9oIcFICF3REE11l7IWUHjswjt44bFnuOnSa2lGQuw3QzdwuS17JoAH73qI1NRUcnNyadmy
      FcOzzoASie2/7eDs4efgsEd3d0EQuODc8zm6ddfo0V+jYXjC9LW3Q6r55zpLHAwEQcAXr9Oi
      bSscbgeaU2KjUMolr9zCVxO/i5WbNX8OK8P5FCg7KNheSKi0BkOra7fjTdYZcM4w+vfux9Qv
      JuzVjHyXzc6+OMbs2vn3F7Isk1+Qz/JNq7G0iEd21tVPiD6V4QOH7nfde8P8+fN5Y+yHOFol
      owUUJGvd/psjEicMPgFZlvlp9gw21myr9XswoO6/LdCGLesZP3ECF59/MelptZVRiqKwfMVy
      mmU0Y+OmjdjtDi56/RZ058Epxvx5FdhzEpu8ROKvUMr9mE1mXr70ITZt3cybS77FwMAoD2FS
      Rb557H26du6Cx+Ph/hcfxSTIHH/0sSycv4CxK6ZjZNvrjFetCXNUeTyTx0/cZ2VYIBBAUZQ9
      ijJlWcblch3w/G7evJkzbr+IULPaLGNzMZEL+p3OlaMvPaB6G0J1dTWnXXcueeEdCFaJ4HYv
      7nZpdcqlGC7GPvQ+4XCYs5+4impzuNbvarlvz4qw+pCUkEz/Pv2ZO38eS5Yvo3lGs5gxlCRJ
      NG/WPHY0WywWxv42CXXv32qPiHiCmOL/GU7XWjBCaJuXS/qdxYs3PEJ6UiovfPoGPi1AnGHn
      oTNvYunq5fz0x6+cc+LpUdYgrHPp6Evo3rUbxx9/PIESL/NnzUNOc6ArGlJhENVsINnNFK7Y
      ROfWHWnTuvVe+yIIwj7dAyRJ2ieCagjz/1jAUc1asL1oO55wDYQ0hrc4lldueZKBfY874Hrr
      w4SJE3j9zTdYuHEphhhVZtoy3LUcmwzDwFStc1nfkbTMzuXsuy+l2hmpu6F4AgduDTpz3iyW
      rFnOpJ+m8MqDz9Gta9Rho7ikhPc/+5DSQCVT1vyGnFR3J9tf/JNOAMMwsJaozP14KvHx8TEr
      xZseuZOLTj+PtkdFF24kEiE9LZ1xE8fj9Xk5YcDgmGhU13VufOA2fiycj+yyIG6oIVWKp9Dh
      xVku8NVbn8SUaHtDKBTC7/fvce7cbnejmDdUVlayes1q4uLi6NK5y0HX91cYhsHadesYNGwI
      ps5JiJKILoI5yRHzxYCosjLeb+aV6x/H0A1ufvwualpKtYQKsTp148CjQgzqP5DbrriRse9+
      EVv8AN/88B0frZzAT8ULMSU7GmfR/gMWPkQn1LI5yO2jro1paXfx4m8+/hK5WdmcevsFvPm/
      92Ps40knDCU9MZWkxCQURWHW7FmIosiz9z1BToWL5kE3aksHzpbJPHXOHbTPPIrWR+19998F
      i8WyRyM6u93eaFEkEhMTOe7Y4xp98QNM++knRpxzBpFkGWt2PJbMuN2BDf6C0HYv95x9Pcf1
      P5btpUVUZwn1Ln6ICisOiuwFQSA5KTn29+bNm3l31lfI8Zb/nATIMAzE4iD3XnILF5x3QR3C
      F0WRsrIyhnYbwB1X3UR5RQUX3XYFD153F9d9/jDWT2Q6ZbQm31PEWWsWc8uY6/hl0k94vF6e
      //BVZq1ZwMK1S7nvrnv2yzRhl/dWQ1EmjpS2d1fEkX0hvl9n/sqFV49BynWR2CFnt0GbRUKP
      aLUuwG2Tcxl5xlkAtMjJxVB1aIC708LqwRHA3zFx6mQibnG/F7+h6ihVASwpzsbszuGFZnBO
      7+GMPn90gwuqa5eudO0SPS3ViMqJ/QZF71CajJoosyy8FWzw/oLvCHh9PHb3QyQlJvLMnY/i
      8/mY+dtMPv/mS1546rn96tquUCaqqtbp25FiK3fdGfcF4yeMx9wmAWuz2rZPoklCD2uwU7Vi
      GAadctrGNoiWuS0QQjr16WEN3cAZUQ6MBWpIpnvOmSNxFumoNeF9kvsahoHDI2BfHURXNCrn
      bCG8sRJdUQ9L6JTGhOTTufXqG/d5d3a73dx29U2Igogk1H5HtJuYumEuj7z4JLPnzAbA6XRy
      6vBTue7Ka/a7b4Ig4HK5YmbNu3QDf43x01QQCoXqfPuteXkYEQ3/2h21notWExFPYPcDw6Bz
      u06xPz1VHnSh7joyDAO5OkDHgdkHRgBjvx8biwq2C8FgkB07dtA5tx3hfA+RigARb3CP9UgV
      ETLEBPwdbSBCsuZkRLvjYY0XpWi3O6WhG2i+MKpfOZDuHhac2nVQLXZwX+HxeLCb6kZT8FhC
      fL5+Kss3rubHaVNjju0bN26M+ePuD0RRxOVy4Xa7a4VNaUqCBZ/Px2233VbHrigpMQld07G1
      qG0RLIhCLW29IIr877dxzJz9G2vXrmXZsmWENlcRqYkSleoLY6+A1moqSZKM2W46MAI4+aST
      6yhOfpg8gQvvvYobx1xLq1ataGNtjmw0vLtoAYVze5xCyKIR8QRpbc8kITGR444bwJ+T5/DA
      GTdwamZ/RmQdS0LEirLFQ/XqYgzDiA2mqcDQDXq02jepzC6EQiGKS0ro2LEjbVJz6y2jhaN8
      e/t27WPRHZ754BVWrFxxQP2UZRmTyRTz420qHl27EIlEaN26dR2JVId27YmU+pBdu5l5tTpE
      pDqE7Kh9wS82ebnjzUeYM3cuwVCQuy+8gbg8neGZ/XjnkseZ+Nz/+PjxNxl+9Ag2Tt3auE7x
      iqJgNptjF67Tbj6fTUbpbotEg6iWXzfoaeTy1tOvMvz8MxjUbwAP3HkfFoulXnGc3+9n9tw5
      3P7Ww3j1ALqiESryEt8jq84EHCnc1vsirr3kyn0u7/F4MJvNVFZVMvjmkRipdW9qhm4wPK0P
      rzzyHIIg8OeiPzn7+Wvol9iRz9/4uMmxLwcCTdOQJIlNmzYRDAZp165dHcL89rtvufLO60k5
      eWeQAU3Ht7gIId6Mo3VKrVPB0A1S8kVmjP0Rh8OBYRhUVlXyxuevsaZsFYnxiYS3R6huUYEj
      2d64wXF3idtMJhO6rlNTVEWbmiTivCbMm4PIhaGdJQUUUaOouIjxn33HUw8/sUfrQ4fDwcnD
      TuLH176hpZxGYEsFsigT2uZBV5uGqcW81X/ww+Tx+1w+Pj4eu93Oix++jp5cPxHroQhfjf2G
      /33/JcFgkEdfexpTvI15RSv4bfZvjdTzI4ddd5GCwgKeee7ZqAKrnlPpxBNOxJYeh0B0I+0o
      ZfH8rY9iqLUVfEpVgLRyC0/f+1jMaWvmb78y/IzhrDYtw9pBptJWRpW/EntSlO08ZK4+ZrOZ
      nz6fwKRPv2fcMx8z49OJaNadhnIlIYb3OoGrrrsGTdP2mQ/Nzcll7LtfcGyPPhjlIWrWlFKz
      prRJXJgX+tbzwDcvUlpaul/v3XDhVWSTVO8YJLuZuIG5PPTVi/S7YCjr7DsQJBFDFnj97Tdj
      Hl//NOy6iF9743V8/MnH9LnsJMRUG506daq3fHx8PM/c+giWaoNece343zPvctYZZ5Fo/psx
      YFDjwyfeoHPHTpSXlwMw+8/ZXDTmQoy1EuVbKjG7TZRWl0S5EQ4hAQiCEAvQmp2Vzdb8PFSL
      QXrQyUOjb+G1j99GcpjJyMjYr3rTUtO4ZsxVhJUwDtmKVuRDrWka94GQReeP5Yv2mSDXr19P
      VmYWj4+5CyPQsO+BnOKgJpWYQseS5GBhxRq+/OrLRun34UY4HGbr1q1sXLeBt7/4EAODHZVl
      3PDo7XWEKxBdSxefM5pfXxnH50+9S1llOd9NGMewfoOj4SV3wm1z4nK7uOqO6zGI2kLJNomO
      7TrRp1M/TFaZgj+3o7BbiHBQBFBcUkxVVdVey23Ny+PuD54kQXTy3j0vIQkiZpOJZx968oD8
      TYcMHMQx/XuTkZ6BzW4nWOhpEqcAArz0xdt0Pv84bn36Xn7/Y36D/TIMg0AgEJWcdei0R6vZ
      v5uWC7KIvUUi0+bMaPQhHA5YrVZqfD5OOfkUNm/YiD03kVXGNrZ5Shu0chVFkdSUFD77/H8M
      P/8M1mxcywWnnYtZ2T0v3koPWzZvYdjAE0hOSmLthjUsZxEfzn+Hzcp64pq5yemdiS3RGrM4
      PygCyEjPoGYvLm/z/pjP6Q9dgr+gkteueZx2bdrSvXM3PnrlXfr37XdA7drtdl5+9Dl0Xce/
      w0sovwr/looD9uBqLIgmiW2OasKJIpML5zHmnTv5bsq4essahsEzzz7D9J+n4/f7EYX9+xRa
      UGXZ/MX/2Nj8nTp2pHXr1piRUWtCBPIquXzo+XvdEL+e9j3BbBOr1q+hRW4uzYVEDF1HLQ/Q
      ytWcY445hqvGXIEgCPyx5A8K1+xg4+Z8VmxYTen68mgox0Qb3m3RgMEHzQJlZ2XV+7y4tIRT
      Lz2bK26+hra2LD554R169OhBfn4+bdu2pUuXg7MX6dKlC0899iRWlx05DKonSKBg76fR4YRh
      FXlo3Ctc++htFGwrQFVrK/hatWpFv779mDlvFmr8/kl0ZLeFUBsbL7/xatM4/fYToiiSnpGO
      WTRh7AghWUy8PfWzvXIUgt2EoejYdBMDzjqR1UtWkKjY+fmprxn/0Te1ThBdFSjTZMoNmeKw
      yIYtPvK/WcdpS0OM+qWauC83N35sUH/Azw8/TuR/n35G2/btCFcH6Nu3L2MuGdNobcTa8vs5
      7fQR5G3Ppzrsx3RUAs6j9l8ZdTgQr1pJNLuJt7m5/fxr6dXjGPLy8pg0cyrvzvuGsHn/g9ca
      hkFgcTEj+g3jtutupk2bNoeg542PiooKrrz1WmoI0SWrHVNW/kbIpCElWXlk6PCO/UMAACAA
      SURBVPVcdPboBt+956H7+HTqN5hCAhaHlVcffg63242u6ww4bgDenYHGwkqYW++9hVXKFiJ2
      K5LdjKFonLnez4NH7fbKazRbIMMwqKqqYtLUKRR7dnDnLXcw6PjjiUQi+AP+vVdwAHA4HLz6
      8iv4A34mTpzIl1t/PqyJF/YHHjmERw+he4rZXhKNEfT1hO94f+V4RPOBy/PtPTL42beMGZeN
      5MePv6dN66ZNBBs2bmTqT1OZtfh3rK0SkRG5fOAoZq1fyDqhmPdmfEXvbsfQpgGL1+yMTHSL
      wLFd+5Jgj+OLb77i2iuvpnv37nwy7mOmbpiEXmWglwnk61tITbGSv9mL2CIZ86pS7mtbW2HZ
      KARQWVXJjF9+YeGCBVx37XW0atUq9pskSYc0C8z4GVP4+quvuPuG26mZ+jlynA1Xu9QmSQQQ
      DaNSUh61aTnvjHP4YMFYOEACEAQBBBDMEmqOjadfe557b7prn5xljhQ++PB9vi38jbg+2UTK
      fNx9xa1kNc+k2cIMHpzxJkVSJW98+g6vPf5i7J1IJMKOsjKWrlhKZbAayWVhYWgjcg1o8TKL
      77uezK7xpPVMwZpjgpzohtxRaAuAzVlMuzlVXNKsRZ2AhQd1B9A0jRUrVvDa668D8Phjj9da
      /IcDF48cjc1qZcSIEZzaZTDBLRUYql5LPNaUIIgC4yb8wNhJP1DtrUbUGodQJZeF2aE1vPrR
      m41S36HCiNNGYJQEkCwy5mQHihbhvU8+4Jkf3gIMRFliYd4K5i34PfbOCy+9yOCrRnDl07fx
      0coJ0SiBLhN6khlBEgklCaR0SUT+y0by1w0wuU0yfR1OWsfVdfvcKwHssr0JBAJ4vV6m/zyd
      TZs2UVRUxMpVq4iLj+fB+x9g1Nnn7DEt0aFCTnY214y5ivkLF/D6a6+R7U6ndPo61OrQ3l8+
      QqhwhEhPTCUnJ4e2DdgB7S8EUUA0SYT9TXfcAOs3biSsR6J2/B6NFlk5dOzYkYDLiNr1C1Bh
      C/L0tHcxDAOv18u3P4/Hp4UwZAHJZqqVvw0Aq4lAVcPjVtZW0iU+jkg9SUL2yAIZhsHatWv5
      duy31FTXcOYZZ5KYkIimaWRkZNCsWbMDn4lGxGVjLqWoqAi3283zzz3PBbdfgWRvWoZef0W1
      I8JH077ilJLjKfLuiNmzHwwMRUOvCpN1TPODr+wQYuHCBdhtdq7sMZJzTzqTiBrh3e8+AVlF
      VVRktxXDMEj3R+14Hn7sEXZYfGihCLZm8fXWKVplasoDxGfWHybGLxlMkMzEt2qNb3sxzk2b
      cRsGKVbznqVAhmFQVlZGcnLyQUUYPpwoKi7ihOHDqHCEkOIsOLLrz/l1pGFEdMwBCJt1RNvB
      XcXsPpGnLribL6Z9R6Q6xLcffNFkv1UoFCIcDsdyvxmGwXNvvsTHU79GSRIx/CpWm42u9hZE
      0FhQsBzJbcG3qZykPrl16jM0HWlzJQmaRu557TG76iZaVPwK3SLdGDpoCADBQBAlrFBRVr7n
      E0AQBFJT6w8311Sh6zqGS0YPqNRs3AGagT236TnUCyaRSByI+3gN08MqueY0LKKJqmoPifEJ
      VEcCpNgTeOja25ElmfkblvD85Q80ubH+FVarNSYUURSFn3+ZweIVS7nspPPp2akbyUlJpKel
      M2/lH9zxxZNRt0XRhuwwY2i1Qxyq1SGGFyjckdkSuyTx2jf5rHAbWE/Mxpa428ci7FFwp+0+
      HWx2Gza7jbiEuEOXJO9IwTAM1m9Yz6ibLyFk1Ymsq0JpacWWk7D3lw8QuqIhAKKl9n6yS0F1
      sAtSD2uMaHUcD15zFzU1Ndz/9MOkZzbj3utuJzEhStx3PHkfY/+cinuHQN9uvbjm6mvo3rXb
      QbV7qBEOh/H5fLEQ7GO/H8vmbXlogsGnyyZi2ET0iEZwm4fA1nISeuUiOXbv8Foowu3b4KLm
      GVEDOyCsady5dRPlQ6J5qAVJoIejO+eMOLPePvzrCGAXCgoKuOOZB1i8dSVGgZ9gptxA0o79
      lRYJdV4xNB09GMGS5sQUb4+F6QgXeMm2pxGwa9TY63dK3xtMYRia3otC/w6WbFuNRTcx7omP
      2Fa8nTZHtSY3J5clS5ZwzkNXIGY70RUVLRDh1Ob9efmp55uc00t9WLjkT+Yv+wOHZOXJiW8i
      JVjrxGU1dINQcTVaKIKz1W5lp1Dm59JSg2VChGzJhGQR2TI8Ax0IVgXxlQS4uO8F9Dg66osd
      CoUI+IMkJkU3xH8tAQDk5+fT75wTsOoy2lEOTImHTkqlRzS0UASl3I+h6TgMC53jWvLay69S
      VFrM5U/dQihFrBOleE8wNJ24YvAlGtFslUUhuuV24KPn3yFup/ZTFEUeevFxPlsyEdlpQVe0
      aCSEP8uZNX0m2dnZh2zMjYUx11/BnOpVYBYbTCoOENpRgyhLSDYTks2EoevUbCjDnp2AZDWh
      hyMko+JKtqGGNRKy4ghUhEgNNCc9MYUEt5vJc2biyBRo5W7JZaMu2v/IcP8kuN1uxs6ZTEF+
      PrbM+FoBlBobgiQiWWRkl4VhR/Xn82ffIy4xnmAgQKsWLenYrDU/L5+DYd43AjAMA2Wzh+pA
      DUpYwZzsQHCZaB+fy/DBw6JhKJcvx2K1kp6Qwuk9TqB/Vnc2zVxOMz2e7b4yju7UnbZt2h6y
      MTcWTh12Cq0sGSxdvISgvX6TEEPVCRVVoysqwfwqlEo/oeJqzIkOLEnR+FNqsZd2/TNxpjhI
      OSoJi9PMhj+LyJMDrAsUs6x8CwEXqKEQ5ixw+V3/7hPAMAwuue5y5obWINkOj+tkpCKAM2Im
      LTmVLdXbaZOUQ9ec9sxduoCCokKsHVL26U5gGAbhkhpEixy9CDrMyC4LSV4zHR25HN3rGLKy
      spj00xTeefGNmBXl+g3riY+LZ8r0qYw8/Uzi3A2nUWpq+GHKBO768hmIq8u2Va8pwZrqQlNU
      lAo/uqJiz0lEqQxEg2MJArLXz7FXH43FYSZUHaIy38vGPB+m+Nonf7i0mqOyXTSPNPt3EwDA
      E688w0crJtQbPfhwwPBF6OFqTaQ6hMdTRUpOBqu8W4i49nwSGLpBYGdISKUqEM05EG8jUlCN
      TZVJdiUSqvLTMiuHD958b4/5wv4p0HWdUddexDKxoM4moSsqnuXbsWcmIJhEzEkO0A2SFDt5
      azZhskv0GdkOT6EXT6EXV7qLws1eaBZfp65waQ19UnI5ofcJh84jrKkgqNUfOvtwwDAMxPwA
      l59xIXn+YgpS/Rzfoz+vXvoIelCtUza4zYNvYxk1G3bg21QWvbMIAqY4G6YShcvan0aWO43q
      sA81Ueb8c8/lm8+++lcsftiZzE+SMbR6BBOigDnBjjXDjSU5muxa8ym8fv2T9MruQGZzN/kL
      t2HoBia7CcMw6NCveb1+4+ZUJ38UbCE1ObNxI8M1NRiGwdYdBUe0Dz2POZrZK+ZTkwaCIlBa
      WookiAiyEE2c7VEwGzJqRRBzjrPWPcVQdUxFYU7rPJibH72R6x+/g7ATPnrwdY4fMBCbrW48
      oX8K/H4/FosFTdNiwRQMw6AKP+Jfsm3usu4VJBFD1elszSXNncSMbX8iWmVWb1zL5x98wbmX
      jkJp4adZl3QiIZXyzZXEZ7lp2yHA+uVlmJvFg24gVAcxdIMLBo1kxPDT/v0EsHH7Vmg4kcoh
      xzHtuuHxVyMIAjoGn/05gfauHLCLiIVBujdrT3xSAotta/BadvuqGoZBazGdTz94K6aMvPWC
      a0lPS6dtEzd53hMMw2Dc1Ak889XruJ1ufOEALVOyEEWReKuLDfmbkLJdUVGzbjCk+TGElBDL
      CtZyx2V3csnICwiHw+TdfyWbjFKemP4OLpeL8V9O4No7r2Hp+EWktkvGV+qjZI1IfDMXLf0R
      HCl2DN0grV0OweIwJ/ceHD1xjvSEHEpomkaNEgCOrCw8LS4qtxbMEmpEpUipoKezBduMQhaF
      NiJ6zVCPhHZwl/6kpKTE/h54bOPn2ToSWLNuLRWSnypDQbBAZc0GAAyPAYkWAlsr0SMaoga3
      3HY17dq2xev1EhcXx5LlS3n943c4s+dQXvntMxSHxCe/fMvQgUN49qHnmPnbTD4Y/y4RXWXN
      0jJspTV0Gt0Rd0bU4ErXdFIiafTvdyxwCKNCNAXIskz3Fh2PWPuCIPDV75P4aO7Y2LPEoJVT
      2g+gTKumtHkE0VlbOmVoOppfwSgKMHbcWLZv3364u31IIQgCLZpnkWbScXlr0BWt1m+yy4Kj
      ZRKOVkl069yV5s2aIQgC8fHRy6yu6STFJ3DVZVcy7sEPSNacrPMX0u/a4Xzx/decM/Icfnh3
      Im3atqb/ogD3b06jfHIe25YU4dnmpeLdFWRN+oPZ06eTn5f37yYAgMoazxFt32MNxVLzCIKA
      r6WJbwp/pVCsrJNZHiC4tJTuoSw+uOUFpnw94R9ni7UvSEpOokWfTDSTVCsf8i4YEZ1rjxnF
      t898VCcR4LTZP7OpogBN02jXui0/PPYRQ5K6ExAU3l7wDZffcz1VHg+yRaa8u5Oxp0uYuycR
      H04ioSCNtJBAkdnJG88+wxfnn/nvJ4AuLdo3KadxURajGef/hognSKi4mstHj2Hs198yaNAg
      kpOT95jc4nBB07RGTXi9bOsSBFEgFKgbrh2gb0pHbr/iJv5ctohJkyfj9+92qbXYrPiMEPpO
      2/6M9AzefvJV7j7pamSfwVkDhzNt5nSS1FTE7gm4jk2ns9yDkX1H0T6zPbaQwVkOmRudAte1
      zf13E4AgCPTvdAxGpGmHDjEMA/+KEtLDLq4eNabJWXPuMrkAKCwsZNv2bXt5o2FEIhGWblwS
      /b9a/8bUPqs1RUVFuOxOBgw4LhbmEMAsyJzcaWCtMJqiKHLFeZeQbIlDtpi44sJLuXH0zZhr
      rEgWmT9X/IEkSVxyySWs0KBNnItuSfGIwkFmiPkn4NQTT+HLyWOZu3ERjiYaMSK4zYPk1xnc
      fyDNmzU9hxaTyYTJFJWt5+Xl0aVLF6qrqwmFQvvNosmyTKe0LqzVl6PXI+83fBH6dTmG9PR0
      mjevOxc3XXl9zDclHA7z3hcfYZJlFv75B61Tsjnx+CEIgkB2djZOTxybf9pKTdjPp19+Qru2
      7XCnpFERCuM0RZf+v9oWCKK7Q6dW7fhuzmQEZ9O0jBRkCesOjTdfeK1JK7UEQSAnJwer1Uok
      EqG8vJykpKT9rqO4pJglyxeDYiNoVmMiT9Gv8cCIGzjtxFOQJIlQKER+fj5+v5+8gjy25m3B
      4/EwZ+4sSktKSU1NpaS8lE9mfofT5eKj596ORcyWJIlOHTqxaNtCbEEHZw8/hxUrV9Chazfm
      zZ1D1zgnZlH895tC7MJVj9zCr6WLmxx7AVHJj3/Bdn4f/ystWrQ40t3ZZ0QikQMyt45EIoRC
      ISoqKzj73su44ISzSI9L4agWrejZrQebtm7io2nvU+jLJ2JTQAPBFP2nrNS479o7mD1jIZeP
      uRq328327dvZXlJE76N71WrHMAxmzprJipUrOHPEmSxdupTsnGyeeOJxhnbujLFg9r+fBdqF
      h666k1WPXUWZULP3wocZql/BEpHYtm3bP4oADtTXYBdLpSgKWc0dZCQlIYgGEUXhiQ8fZblv
      Mc50B3KigPy3DHemhOjuntYsORZZ3O1218uKCYLA4OMH0zK3JR9++iGpqSkkpyRz373307Nn
      z2iqpAMawT8Qmc2ac2G/0/lgxtd4rUotdfuRhKHptJYyuPv1p+nbt++R7s5hxfS5P2HvaGFS
      VVRPUjq3nLjmLpzp9WS1AyIhlSx3FrpuEPxLhqC/i0r/jpycHC675DJKy0pp17pdrRS2/xkC
      ADhr6Ah6dezJ+OmTGL9lFmHTkZUOaaEI57Ubxp1X3kxCwqFz2TwS2JUgvL5TIhQK8f737zK3
      YibWlN07vCvNgRJo2HPOU+Dl0iEXo6oRysrLqayoiM1bQ6xtOBzGYrGQm5NLbk5und//M3eA
      XVAUBY/Hw9NvvcDXCyZHXRnT3ViS6t91DhWMyjDXDrmAWy+/4YBCxDd1/D7/d3r26InFUpuF
      MQyD5z59mlXS0tpGb7pBTamPyq0ecvpm1rugDcNAXCtz9cjLAZh2/9N0TkwgHJdA9vDTOe7k
      4bGyfp+Pic88gXnzesLde3PylVfXu8n85whgF7Zs3cLQB0djFc2I1So7fJWIJglhp5JKrQ4i
      2syY3FbMifZGvTwbus7NPUZzw5XXNslLeWOgoRitBdsKuOPbm7Bl7CYMXdXZPDsPR4odZ4oD
      d3rDgZLUsEpmUTaZS9Zznt2ERZIwDIMFldXE3fkIHbp2xeVy8cNHH3LsrElYJYnKsMLcci+l
      g4bSqkMnunTuSmZmJgUF+f8tFuivyM3JZUjrPqwt3MS4Dz7hxDtGUWNR0ELRI9ia5kI0SUSq
      Q4R3+LCm7Xv0KsMw0GoUhLCOGlBABFOqA8EczcquVoYYMWz4v3bxQ8MsSV5BHlJc7ROvYmsV
      CTnxJLfaewwn2SKzassqTojoWCRrrK0+iW62vvI4vyDB4JPxV1Qg7exDosVMZ7cdcpPJap3E
      8nULmL8ojDvB8d8kAFVVkWWZy04dzRUv3s6kn39kcOs+TNg2B9nxN6mD24pSFSBSEyJcXI1o
      M2HLrO1lpIdU7BUG3dt0ZvP2fKpEP5VLSvjlux9JSorm/3rr8/fJSEnjw3lj2e4pY/X6teTk
      5BzuoR8RhMNhzOZoOJOK6nIEUSDoCVG+pZKIP0Ja+5RY0rp9QZwYoEd8Sq1ngiDQ0u2kJRBc
      8AsGBqa/6LcCmo7d5UQURXJb7g4U8J9kgUpKSkhLS0MQBObOn8eVz93GiA6DmF2+nHKpbih3
      wzAI76jBnODA0HWUCj+25tEwfcq2ak7pOZjHr7+P5ORkDMNg1epVyLKJ9PR0EuJrh/MbO2kc
      d49/gQ5Ccya+/+2/8hRYs3YNiQmJVFdX07x5c7765msuvWQMv8yfweerPqLaV41vh59m3dIP
      aPzblhTxSVE8ceZ9F8PuCIb4ZeBAeg3qX+v5f/IESE9PB6I2Ln/++Sdhm0GBVsEHt73I5U/f
      QrktWDsjuSBgjUUWkxBkEdUfRgtEuPH4C7nt5ltjGkhBEOjcqeGk2WbRBJpBgbqD6urqJq35
      PVBYzBYKCgsoLY3m/Bp8/CDuuu9OvKYq7E4XVVtqSOqRcMDEL5kltP00cDSgXqPI/yQB7IIo
      itx0/Y2EZI1vF0xh3I8TeOf257n21bspN9fNVrgLlhQXvk1lSGaZYScM3a+E1UOOH0zzb99m
      m7mKJSuWMui44xthJE0LrVq1ioXJNwyDcDjMfXfdj6pG/aB//nk6M1dPp7qZF3vy/rt1mnUw
      NRA7aH/x75O/7SckSeLe627nnZue4ds5k0hLTuXYVj3RQw0n3BNEAXt2AnpIJRjav1y9DoeD
      l259Aq3YT1ryv8/W/+/QNI1AIMDy5cv58NO3GTvhSyprSrjqvEs5MWkIvo2B/TZXtyugNpKJ
      +3+eAHbBaXegofPye6/zxG0PcXnXM/ZIBJLVRGZO1h7ZnYbQs2t3fnjqU9q0bhNLGv1vRTgc
      1dj6/X46dW1HvwHHcNygvpgtZtx2N0cprbBushOuVvZS026YOifxQk0J+fXkFN5f/D8B7ETH
      Dh2Z8dYPbCrJ46dff+au62/jpoEX1XLZ+ztSnYkHHJmhR/fuyLL8jwk7fyBQFCVGAIWF+Zgt
      tZ17rFYrvfr05OqRl9HH1Btf3r4taNki4xnVgvsjZfy8fQchTaPAF2BaaUW9STD2WNd+lT4A
      qKpKlcdDclJSk//QzdIzeO2B55EkEVmWueHCq1iTt55fSuq3IrVb9m/xK4oSy+sbCARiocL/
      jZpgwzAIhaJZW1avWkV8mo3UtNqiS1mWqar0IEoiA/sdS5vio/h21vco2QqmPeRMCFYGiStL
      4KJbHsRsNvHluCls8NZw5o0j+XjSdDpt3EDvOBfS3+4JoVCImuranm2HXAxaVlZGRWUF+fn5
      ZDbPpG3btvxT/A/Ky8tZvX4NV354H4a17iK1+gV+e3kcSYm1beINw2DJsiVMn/8bASXI6FPO
      pn2bdtHcBX/RkCqKQigUQhRFHA4H0k6tJhx8SPUjjdmzZ7Nx43oAikuK6dC9FS1a1tZ7VFV6
      WLNqHf0H9Ik9U1WVqTOns1JdhT299gajazr+DUGGtDyevr161wqiO23KDE4afgIARduK2TL5
      Jzrk5XFMQlR651Ui/C+7I12PPa5WnYfcIcbhcJCcnExuTi6bNm1i+s/T6dy5835JTo4U7HY7
      K1avZNraOfU6sCuCRipuunfqWut5SUkJpz08hsXeDWwo2MzxbXqTm5OLIAiIohhje2RZxmw2
      E4lE8Pl8qKqK2WymuKgYi8VCJBKJsUn/NKxduwbdFKRNh1xatskmKblukhKzyUR+/jZycncn
      WxdFkTYtj8JfGGBLxVYsOzO+qGEV2xY715x6Oa1ataxTl91uY+uWAtLSU3G5XWT17MqO3Fx+
      2ZiH3eMhrGrox/Tn+KHDyMrKiv07bGevLMsce+yxrC/LY+zkHw5XsweNPj170dreHOpx3xNN
      Ei9M+4DVa9fEnum6zvS5v6LZox+ohT2DAX/bdWrVsXP3T0xMxOl0EgqGuPe8MZx/+iAufPFc
      XnnvZQKNcNk73GjfvgPV3mosVgsWq6VeIpZkiXCobnI7QRA4efBQhsQPJn/+Njwrqskqy+LK
      kZfhdDnrba+0ZAcul6NWHbmtWzD49uvYcM5Ivs5sS98Th9Z577DzIg/feA9OR/2DaIpITU1l
      7LMf89LHb/DVnAkocbVj/CtWg/OeuY5TOg3A669mVcEGtleVoEoGGdYkzhp28h55/LXr1vLG
      l69y7tDR9O3dl7svvxrNaaVK9tDZlkWZr5RvJ3xDeXkV24uLePCO+4iPj4+dFk0V2dnZqMre
      L6ThcMPSn/7H9kHXdFq2akFm1p4TMobDCnHx9SsV23VqS6Bax1WP38BhJwC36wjGKTxAOOwO
      Hrz+bu6/9k6ef/9Vvvx9Aj5zJGo9KgiEHDrjtv4GgGExwOOly+AWjMwazaUXjtkjX9+ubTtu
      GH0z2VnZmEwmXvvqMwRBYM3aNXRo3yFWbtcpsCsVbVNe/BAVfyoRhZpqH06Xo0E2zmRqeAkK
      gkBCYsIey/y1vbj4/V9b/4zbaBOBKIrcffWtXHHOxUz77We+nzuFpdvX0cydQqoriZWVm9HC
      CpLdjMVlYcPmDfz62694vV5CWpCuHbrRsX3tSHWCINC+XftafwO1Fj9wRHIwHwzy8vKYsHgi
      P22dTqekDpw7YiSRiIrFYiYcijqpGBjoutGg6TRAVUUV7TvsORZqRXklsiw3eK8sKy0notTv
      aPOfNIZrLOi6Tll5GW6XG6vVys9zfuWe1++h0xkt0HWDLbPyyOmbhSgJREIq2/8o4arB13Hx
      BRf/Iy+2+wpd13n0nYfY4l6PKImEa8LEbYon2Z5MfEIcZrM5xha63E66dOuEIAgEA0FWr1xL
      3tYCnC4nuqaR0yKbjp3bN9iWpmr8OmMWJwwbVO+cBoMhFs1dyanDTycuLq5Omf8/AQ4CoiiS
      lpoW+3vogCHYzC/xyc8fsmbdasxJMhVbKjE0A13TSe2URMgIYhjRXe/fKP+H6CmW6c5i/qq5
      qEGVlHZJlMSVcnrf08hollanfCQSYc2qdWwrLOK4gX0xm804XU5aHpVLMBBkxrSZOBx2junT
      E0EUkCSJgD+AKEkUbSvGbrc1uKGsW7WeQccPwel0xljRXfMP/08AjY7j+hxH/1798Xg9LFg8
      nx8mjaMkbRsJuXEEPSFaZ+42f2iIAAzDoLKygoSdKVD/aaeFIAjYRSc7FpVjd9vZXJxPetcU
      ps+awblnno3X4yUtfbcd1Jzf5pOcksgppw2NWtN268jYryegaRrbC4vo0r0TJpPM9Km/IMvy
      /7V35tFxVVe+/u69NZeqSvNYlixZ8oyNjUcMhBhMEgiBmCGYHjIQaJImDN0kdOfxXjokHVYg
      dLrTnX4JIYvudDo8Hkk6zWDISwjGEBtPYBvk2bLmwRpcpZrvdN4foiSEBsujruT7rVXLy1X3
      Vh1Vnd85Z++zz96oGZW8/FxUVSMYCvLue/soKS+htrZmWDuEELQ2t7P28gHbYLSQE3sJdI5J
      pVM89p+Psk/fixbV+N7NP6CmZtao1+q6TktLC2/t3cq//fxpPnfL5+mJ9LDhptsJBUMkk0lk
      WcbtduNyuRBCEIvFTpoVYTLo6+ujubmZ433H+fEf/gU9pKJFdRRDId2f4Wu3PUBhUQH79x1C
      13QWLhpY5kiSRDqdpqOtk1079+BQFG68+ZPjftZrr21m1953ePC++0a81t7WgRZzcOmla0a5
      054Bzjlej5evrL+fVRvWosk6DSsaRxVAJpPh4R/9DU3mMY4f60Y4ZP6r/f/iCCq899M9zCtZ
      QGGgiDxvPk898ySXLFxG5nicL97zJUsKID8/n7y8PO7/X/firXMhOz2IcpAliXQ8wzO//iUl
      +UW0NLZx731309HeybYtO/Hn+Gk61kxxSRHrb7mezZu2jPs5vT19vNb+Ov6gf4Qxres6r3/v
      5+QWl7N69aVs2/wmi5YtxeP1YhgG3V3Hp39qRCvgcrnwCTfHE1Gee/W/qSusRCD4ybM/Zv+h
      /dRW1bJn/x5ebPgN3mIP3Yd7WDV7DSfcPXhy3eghlU6ljUOp/ezq3E7OIi+tahNHmhu4ed1n
      CAQmfl75fCJJEmvXXMXbr+0m2ZygJFZKj9yDN+ShobEB5gukmYI3Xn+L17a9zsoFy/nIR9cM
      BtD5fD6EEMOWSx/mt6//no5IB8tLllFZGcbhcJBJZ2hqaGb7j37N3E2NmEfbaSzx0v/gv7Bt
      61vUb9vJoS072Pc/fmAvgc4nnZ2dbLjrT/BXunAWyVw18+Ns27uVWDyGGqkumwAAFlRJREFU
      o0rCX+1FCEH7nk5yK0L4Csc27gDUpEbOwTyeePj7lpwFsuzZs4eDjbuZUVXB3z3xHfyXeGna
      2sLCG4e8O7pqsCKzgiuuuJTmxhYikX6aGpu57lMfG9NWamlp5elt/4G/0otZD1/ZcDe93X28
      8/Ib+H66mbDiwyXJRNDZ5EtxWdxFoeweti8zPd0QFqW0tJRXf/M7Hrrt68wUtay79Boe/NxD
      xBz9+KqGMhwEywJ0H+2l490u9Mw4ZxIcMuGSMMlk0tJnChYtWkR3ez8vP/97HvjCX+Lc7ya3
      fPiubfRoP0suXgQMHF+MRKLIsjxq54/H4ry1fQebtr+Bv8qH4lSIdrXxwnVf48BtjzLn33ZS
      48jBJQ3cm4uDGxI5HNLjRE1tmGPBngEswCNPfYMjvv3DRntDNdA1g6793ahxldxwkMLa4VGn
      sQNJ/n7DY4SCA751n8+HoiiYponT6bRc1O2+/fvYtvN1ZtZV8pNfPY28SEJ5P8gwuifG1//k
      azidDo4camD3znqqKqvJzc1FKBp1cweCCROJJE+++FNSRSmEJvAX+0hF08z7dhMXp8ZPbiaE
      4E29l2WOPLzS+2e4bQFMLk1NTTz5/P+mtfDYmNecaB6ImQ9VBAdKq8oSQgiizTFCLYU88tVv
      oaoqiqLg9XqJRqPk5uYSCoUGE9FahY6ODl7c+F8cbT5CvahndsFcinKKSUZT+PEwo6KKSy5e
      QXV19WC4R/2+et47tAPTNHlnz14aio7iLxjaGU/0Jln6SAvzjAEBnEAjElQpiLrwodBIkozf
      xOGXcUoSkYjKzIwfhQssN6gVcTgc6CljsGOPhjvHTSoycPa460A3/R1xHC6FnGI/8eo+Dh45
      SEVpxWCGCVmW0XWdd+vf5aXNL/DIX3/7vP09J6OsrIw77/gye/bsprCwaFgRjLFCIubPm08y
      kSSVSjH7hsX88Nc/QM9LDX5f/gIfe5colG/XOGrEiYUMHrlyAa+2dNEdVVkbLqYud8hR0JPO
      cKw/QXs0ZQtgsjnSeJguR/uYnR8G6ool+9IU1EDhrHwirf1Ur6lGkiXijUnKS8sJBoNEo1Hq
      978HEhTmF/GrHc/Sq/WQTqex2iy/ePHFI54by+CXJInly5cDAyL5QuZO/mHroxiGgazIKE4F
      x82VPLv/HTbEimkKDAwWV80ogRkj36/Q46bQ40YUCXsJNJlE+6P82Tc2kLs8Z9QfX0tpHP5D
      A56Qh54jvVx860X0t8fIxDOULx5IKqXGVS4Rq4kmohzqPYAWzODKdaImNXz5XoRhUtI0gye+
      8f0pt6M8Fp2dnbz40ov8x/anycSSVL10giK/jzzTQUnawexLA6wqOXnlmhOqZs8AZxshBIeP
      HCZcER43gjOZTPLl796FEoYjm47hy/dRVJuPyz8U5pxJqEiyRPWaSiouLqP7cC+5FUEKa4dy
      aLpyXLyT2Y7il/GUOvC8/5O6AwPvk4ik2bvrXfr7o4RCw7PUTUWEEDz+w8docB2ifEUJsiIR
      7z7K5bu8uCSZAyJGZc7EImd/6/bZAjjbmKbJj5/6MTfdcBNLly4dc+nxf155BlGrE/QECJYH
      0DM69S8epKAmn/LFpciyhCfgJlQeRJIk3DkuKhaXjvpeDvfYx0tN00ReaHDNnVdz1bq1OCQn
      K8KrWLPysilZk6Czs5NW/zGCVUMeH6PKR3qnjobAM8NBqe/kK5qYprE7Zc8AZx1FUXj80cfR
      NG3cQysNLUeJxvopnJWPqZscP9jL3I/VYeomDZsb8YY8ODwOMomJ58sZjUBJzsCjLIdWXyOS
      LLF79y52vLudFQtXsmb1ZeTmTp2ZoaSkhLl5CzgmDtG2pRV9XxQzqeOU8mgKJrlzaQ3yBJZ6
      W9t6Ycdx2waYLLZs28LDv3iInHIf/R1xShcU484ZEIyhGSBJNGxuxB1wUbk8fFY/2zQF7bs7
      KZ1fRORYDHQoDZVx+5o/46rLrh52rRVDtyPRCP/z3/+Wtic3cVt7LhKgIHGsLMmdK2pOej/A
      b5s72b69zxbAZKCqKp+65zoSzhiyIjNz9XBXRSaWoftIH9HWfmYsryBYen7OUGf6VT5RcgOf
      XrueQCCAJEmYpolpmpbbVOvp6eFHN3yeyP4GdFOjKOjmuuXl1AQnVunnwIl+nnXm2wKYDEzT
      5I7H/pxUfhzeX99nEaageUcbM5aVIyvnf9TV0wbp9gxXhNdy32cfOO+ffyq8u3cvz917N2Gn
      QqHHRbHLyUWB8eOnskRUjVdWrrQFMBkIIfjt5lf4xXv/jpQ/PN3KieYowhTkz5zcdbnRDD+9
      /2cjanxZCdM0qa+vx+Vyoes6h/fVM/u5pwn7veyLJXEIkyq/F/coZ4V10+S/C4rsYLjJQJIk
      Pv6RT7C+9jNoqeHBbv3t/eRVTn7NAJUMsZj1aip/EFmWmT17NoFAgLy8PBYvW87O3BI29sU5
      sGYdnbffxatj+BBkSWJOQ4M9A0w2dz/+RVLhoY6mJjU69nZSuTKMqZsozqHR63ymTQy05/PP
      f/Wvlt8803Wd7u7uwe/GNM3BaE8hBG9+62E+kYmOuO9pHbxrr7BngMnmphW3kokNDVNOrwN3
      0E3TtlYO/u4oMJATs213J4dfO0akpf+ct0nt0rj3xvst3/mBESHT2dSTWaSy8KjVZMyyUpav
      XmYLYLK5YtVHyE3mDxvdS+cXU7UyTKA0h/qXDtL6dgfFcwqoWlGBmjyzfYGToXeb/M26b1BX
      M34uHqsgSdKYdookSbjnLeTFvHL+obWHzT0RVMMkbRiDorGXQBbglU0v87OjT+H0jXQ1nmiO
      IDsUQuUBhBC0vdOJEIKyhcU43GfPNSmEIB3NcF3Jp/ns+s+dtfc91wgh6O3tRVVHDgzZmUDX
      dX79wrOES/PoOXgEtbGFWLSfnFXLTk8A0yWFt1UwTZMH/vkrRIp7RrzWfaQXX553MP5dCIGh
      Ghw/0EMmoVI8txB//plnjRNCEG6p4VsP/v2UyNwNDGbFSCQSY5ZZeu5XzyI5DWbWzGBG5UDo
      tWmabH32N6hu9+mFQtgd/+wiyzLLalbwcs/zOD3DfxI9rQ8rFiFJEg63g/LFpQghaNzaQvWl
      lR9+y1PG1EyWLLhkynR+GCrCke2Po4nA7XGy8vLlw56TZZk1G9aTSCRtG8Aq3H7tn3KZ90qS
      XelhP6SeMXB6xz7RJQyBoQ0cqDkTZKdMIh0/+YUWwjCMYd9V1vsz7MHog3VnexdPfe+HtgCs
      gqIofPm2r/Dt6x4jHKkmc2JgTWtqJsYYdcokSaKgJo/WtztofKvljD7fyBjk5Uyt6NBYLEZD
      Q8PgLPDh2s6SJFFWFiZyYrgbtK2xhfanfsZjTjsxluWYUzeHb896lFc2vcJPdv6QSGuUypUV
      Y14fqggSqgjSvKONTDyDO+f0dm7VuEbNjIkFklmFl15+gWCBm31H3iGdyoAEEuB2ecFUcDs9
      NBw9yvYdb5FfEKIwlEO4toaqLVu52eMcWE5O9h9hMxJZlrl27bUca2zg+fm/ItmXGnYIPIsQ
      Aj2to6sG7hwXYpQqNhOlKFPKwvmnXvJ1Mlm+bCUNrfUsXb5o1Nd/+U9PclNXB7f4HCjpGHvb
      W1hyvJMi79AgYS+BLEy4PEzujBB9jZERr2USKo1bW+ja301/e4yu/d14QqfnzhamoLZ49pRz
      bsydM5dIT2LM111AbShAhd9Lqc/D2vJiNnUcpzk+VHLKFoCFKSksRegCYQwkvfqgwddzuJfw
      0nLCS8spmVdEsOz0Q6bNdonPf+qOM27vZLB86SpaW9ondK1DlllfHeaNjm4y75ertQVgYUzT
      RFYGRuVET5LGLS20vt1Ow5tNRNv6cX5gI8zQTNr2dNLfcWoBbGpSY3X5ZeTlTi0DOEttbR2Z
      uMDQhzsK9mx/B6mhccT1iiSxtqKY7+45yHNdnbYNYGV2H3kbp99JbmUuR99oZOEN80j1pZAd
      8sBm2KEeimYPFCCvXlOJoZm0vt1OoHT0LBOQtRsMEnszVBVUUTujjr/4zJfO81929pAkiZqq
      Onr6mikqLhx8vvXAYb5UMlLUphC8mYpx9NYq2stzbAFYmUQmgewZ6OyFtQXIsoS/cMgYFqag
      ZVc7wdIcQhVBnB4HoYogR19vpObyqhEHakzDJNCby/zAYu787p2WjvU/FZxO55g7wR9ECMGr
      3T28tDZIsHwgUZa9BLIoQghMBqb1eFec8otGlhYKlOZQeUkFING4pQVdNcivyh1InfihjTEh
      BLXJeTx2x/e55wv3TJvOD1BXV8fxzt5hz0nBHN47MRA5++bxXmKaxqud3Tyz2kugfChLnD0D
      WJiuWCd4GLG+HYYEueEg8eNxJOl94RgmrW93ULVy6DB95Gg/D/7VQ/j9EzszO5XweDzoH9os
      VLxuNmaiBOJOfrLUQSrWhzLDSeGs4csiWwAWxTRN2vpbMR06Dtf4P5OW1ulrjCApMnpKw5fr
      RXENj+kxdXNCy4Spit87sj7Ce3UeWkogUFtAcAybyF4CWZSmpkY0b4beoyeoWFI27rVOj4OL
      bpxH8ZxCFLcDf5GfkvlFw65xmR68Xu+5bPKkctVH17Fr+x7e+OMWdE0nnoyTv6Icd13eCIeA
      oRtkYgNVaOwZwKJs270NZ8CJJ+geN3FuFkmWONEYIW9GaJihDKBFDO6//q8tldvnbFNQUEhN
      9Vwe3/gd3jj2RygQeJ0jNwYNzaDkxVbmJhV+/8lCewawKqqmko6mkR0T+4lONEdore/GExpu
      3AohmKdcxOXLr5hyO72nyuWrrqC6cBbe+W58paOnR1HjKgvjMrscGSRFtgVgVToS7UTbY+TO
      mFjtr66GCKmCIDteOELvsRODz5vH4XPXfmHad34YcIdef/Gn0VNjl5Xy5nnZ+LF8EjdVE4zn
      2gKwKkX+YiSY0PIHIB7XkBQZozBAff0J2uuPQ6/M16/9O2aER0mSP0255sprSLdo417jK/bj
      jvp4+JZv2gKwKikjSbA8SKxrYodUNHUgXkiSJBwhL037+rgq/HHmz55/LptpObq7uxGesQsG
      mrqJtyuHb67/DpXhStsItiKmaXKw6wDuHCeR5n5C5SdfBqUiGVx55qDNsHrWSjZcd/u5bqrl
      KC0tJbe/AF1PkYmrSDGZILmoukqeJ58Vs1bxyRuvJxgY+E7trBAWpLOzk/t+/iW6O3soXVA8
      4pzwhxFCoO2H1ZUfoaGnBUVW+NsvPkBhQeG4901X4vE4v3j+5yyevYT5c+aPW0jcngEsyMtb
      NuIqdWC2mOMWv8giSRLyLJ2S/ALuvfMvz0MLrU1OTg533X73hK61bQCLceLECf5Q/zsS3Unc
      AdeEvTeKS2HzoU2WLphtRWwBWIztu7ahFafIxDP4iyae70dP63x0/lXTerPrXGB/WxajtLiM
      dDSDv8BH/PjYx/3S/RlSfWkS7UmMo/Cx/Ou58ZpPn8eWTg9sG8Bi1FTXoCcNeo71MeuKmWNe
      F2uLc9eye7hkySWEw+ELYqPrXGALwGJs/MNLhGYGiEdGjv5CiMGK8h7Ty5VXXDmlCtxZEVsA
      FqM90oaW0jGNUYxZATkH8ykNlzBrRd247j2biWELwGI0HmjiyOvNKDUjY/clScIf9HHprMtZ
      d/W6SWjd9MM2gi2EEIJDDYeYMStMcLTdXwn2HtnDoeaD579x0xR7BrAQnZ2dzKmYQ1+wm2ik
      b8Tresbgi9f/Bbdcd+sktG56YgvAQvTH+vnFfz5D2ZJiNEmj7KISXL6hzNBaTGPmRdW2x+cs
      YgvAQqRTaQzDIDDTj5bWhtUFEG0yt837c5YsWjKJLZx+2DaARRBC8OKrL2C4dIpmF+ANeYZK
      /KR11l90K+uvuwmnc+xaATanji0Ai5BMJunp7mXF+qUEy4a7NxW3wpuNr/PWzq2T1Lrpiy0A
      i+Dz+ZhbPZfWd9vpeK+LvJlD+WskSeJ4Tjv/+MITk9jC6YktAIuQSCT45iPfJJlIoiaGr/8B
      9IjBHVffNUmtm77YArAImqahigyeXA/CFHiCQ9kdtJTGrbV/yrrLr5nEFk5PbAFYBJfLRUF+
      IX3HIpRdVDKs8qHWbrJq8apJbuH0xBaARXA4HBTnF2MaJsf+2EQmMVAkL9GU4onP/oDS0vGz
      w9mcHrYALILL5WL+vPn43X4kpMHcNrpmkJ+XP+o9Qgh0XSeTyaBp46cCsRkdeyPMQlSUV9Dd
      2kNiUwLFrQxmeHj5/23klvWjhz9omoZpmtMq3fn5xJ4BLIIkSdy24TYWLFyAL+RFP25i9Akc
      SRfHRin1k73H4/Hg8/lwOOyx7HSwBWAh6mrrWLhgIdGOflLxFO6UF1+Zhzf3vEEylRz1ng8X
      iLY5NWwBWAhJknjie09QFZ5Jx/4u9u/Yj5rJEAl186Nf/iuGMU6hjLOEEOKCyixhJ8ayGEII
      2tra+OpDX2Xj7zYSqgiQU+InvLSMUjXM1YuvYc6cOaxcsfKcfT5wwcwqtgAsSiKR4PkXnueJ
      f3yCSDTCNevWce+X76Ourg5Zli+YDnqusQVgcTRNo6W1hb1793LDp26wO/5ZxhaAzQWNbQTb
      XNDYArC5oLEFYHNBYwvA5oLGFoDNBY0tAJsLGlsAFyDZ3V4bWwDTDiHESTu4vZk2hC2AaUI2
      gM2ODj01bAFMYT442tud/vSwBTCF+WCnlyRpQssfm+HYApjiZDt+JpPBNM3zcmZgOmGfo5ui
      ZEd6VVXRdR2Xy2WHSZ8G9gwwBVFVFdM0BzNCZM8DX0gnuc4W9gwwBZFlGVVVMQyDnJwc2/Nz
      BtgzwBQiu+zRNI1MJoPP57M7/hliC2CKYZom6XR68F+wXaBngi2AKYQQgmg0OjgTpNNpdF2f
      5FZNbWwBTAF0XUcIQTqdHuHntwVwZthGsMXJ+vizhu8HURTFTol4htgzwBTA7XaPmrDK7XYj
      y/ZPeCbY357FkSQJh8NhF8c7R9gCmCKM5umx1/9nji0Ai5L19WcZbZc3uyNsc/rYRrAFEUKg
      qiqqquJwOBBCjBrklo3/udA5nZDwrHPBFoBFyBq5sixjGMZgaLOmaQghSKVSI+5RFGUSWnpu
      yW7uTTRboWmaJBIJJEkadBZkBw0hBIqijBBGdoBJJpO2AKxEJpPB6/UOc3lqmjbmyJbJZPB4
      PNNmJ9gwjEGhG4YxaPgrioKu60iShGmagw9ZljFNc7A8VPY7kyRpcCDJfp8ul2twyZiNowI7
      N6ilyE7lqVRqcCQ8GYFAYMp5iLJ2i6Zpg5t8wIh9jrNJViwfxp4BLEI2tFlRlGlb8C67zOvv
      7x/8//liLGeBLQCLIEkSXq8XSZLQdX3anezK2jETndnOF7YAThMhxFlde2dH/lQqdUr+/aly
      BviD0atWwhbAKWCaJplMZnAqzwrA4/GcFY+MYRin7Ne3ugCyLlwrdn6wBTBhhBAkk8lRDTVZ
      lvF6vaf1voZhDJ7l9Xg8uN1u0un0qG7P0VBVFZfLZUlPkK7rxONxS2/W2QI4BcYabbMZGWRZ
      RpblQR+00+kc1Q/94Xuz7jqHw4EkSTidzgkLwGq2gmEY6LqOqqpTwph3TIVGWoHx1rCGYYz6
      Y0uShMvlwuVyjfm+2SWVqqooijK4ATTRcqWSJA0LmZhs0un0lOj4Wf4/Yl9P24+zdtoAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='asia &amp; europe ' width='114'>
      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
      xL/S110u+vBj9AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='trend line' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
